// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zetasql/resolved_ast/resolved_node_kind.proto

#include "zetasql/resolved_ast/resolved_node_kind.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace zetasql {
}  // namespace zetasql
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto = nullptr;
const uint32_t TableStruct_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-zetasql/resolved_ast/resolved_node_kin"
  "d.proto\022\007zetasql*\203/\n\020ResolvedNodeKind\022\024\n"
  "\020RESOLVED_LITERAL\020\003\022\026\n\022RESOLVED_PARAMETE"
  "R\020\004\022\036\n\032RESOLVED_EXPRESSION_COLUMN\020\005\022\027\n\023R"
  "ESOLVED_COLUMN_REF\020\006\022\025\n\021RESOLVED_CONSTAN"
  "T\020g\022\035\n\030RESOLVED_SYSTEM_VARIABLE\020\213\001\022\033\n\026RE"
  "SOLVED_INLINE_LAMBDA\020\237\001\022\036\n\031RESOLVED_FILT"
  "ER_FIELD_ARG\020\255\001\022\032\n\025RESOLVED_FILTER_FIELD"
  "\020\256\001\022\032\n\026RESOLVED_FUNCTION_CALL\020\010\022$\n RESOL"
  "VED_AGGREGATE_FUNCTION_CALL\020\t\022#\n\037RESOLVE"
  "D_ANALYTIC_FUNCTION_CALL\020\n\022#\n\036RESOLVED_E"
  "XTENDED_CAST_ELEMENT\020\227\001\022\033\n\026RESOLVED_EXTE"
  "NDED_CAST\020\236\001\022\021\n\rRESOLVED_CAST\020\013\022\030\n\024RESOL"
  "VED_MAKE_STRUCT\020\014\022\027\n\023RESOLVED_MAKE_PROTO"
  "\020\r\022\035\n\031RESOLVED_MAKE_PROTO_FIELD\020\016\022\035\n\031RES"
  "OLVED_GET_STRUCT_FIELD\020\017\022\034\n\030RESOLVED_GET"
  "_PROTO_FIELD\020\020\022\034\n\027RESOLVED_GET_JSON_FIEL"
  "D\020\245\001\022\025\n\020RESOLVED_FLATTEN\020\225\001\022\033\n\026RESOLVED_"
  "FLATTENED_ARG\020\226\001\022 \n\033RESOLVED_REPLACE_FIE"
  "LD_ITEM\020\200\001\022\033\n\026RESOLVED_REPLACE_FIELD\020\201\001\022"
  "\032\n\026RESOLVED_SUBQUERY_EXPR\020\021\022\027\n\022RESOLVED_"
  "WITH_EXPR\020\305\001\022\022\n\016RESOLVED_MODEL\020m\022\030\n\023RESO"
  "LVED_CONNECTION\020\215\001\022\030\n\023RESOLVED_DESCRIPTO"
  "R\020\220\001\022\034\n\030RESOLVED_SINGLE_ROW_SCAN\020\023\022\027\n\023RE"
  "SOLVED_TABLE_SCAN\020\024\022\026\n\022RESOLVED_JOIN_SCA"
  "N\020\025\022\027\n\023RESOLVED_ARRAY_SCAN\020\026\022\032\n\026RESOLVED"
  "_COLUMN_HOLDER\020\027\022\030\n\024RESOLVED_FILTER_SCAN"
  "\020\030\022\031\n\025RESOLVED_GROUPING_SET\020]\022\033\n\027RESOLVE"
  "D_AGGREGATE_SCAN\020\031\022&\n\"RESOLVED_ANONYMIZE"
  "D_AGGREGATE_SCAN\020p\022\037\n\033RESOLVED_SET_OPERA"
  "TION_ITEM\020^\022\037\n\033RESOLVED_SET_OPERATION_SC"
  "AN\020\032\022\032\n\026RESOLVED_ORDER_BY_SCAN\020\033\022\036\n\032RESO"
  "LVED_LIMIT_OFFSET_SCAN\020\034\022\032\n\026RESOLVED_WIT"
  "H_REF_SCAN\020\035\022\032\n\026RESOLVED_ANALYTIC_SCAN\020\036"
  "\022\030\n\024RESOLVED_SAMPLE_SCAN\020\037\022\034\n\030RESOLVED_C"
  "OMPUTED_COLUMN\020 \022\032\n\026RESOLVED_ORDER_BY_IT"
  "EM\020!\022\037\n\033RESOLVED_COLUMN_ANNOTATIONS\020h\022\"\n"
  "\036RESOLVED_GENERATED_COLUMN_INFO\020i\022\"\n\035RES"
  "OLVED_COLUMN_DEFAULT_VALUE\020\274\001\022\036\n\032RESOLVE"
  "D_COLUMN_DEFINITION\020[\022\030\n\024RESOLVED_PRIMAR"
  "Y_KEY\020\\\022\030\n\024RESOLVED_FOREIGN_KEY\020n\022\035\n\031RES"
  "OLVED_CHECK_CONSTRAINT\020q\022\032\n\026RESOLVED_OUT"
  "PUT_COLUMN\020\"\022\031\n\025RESOLVED_PROJECT_SCAN\020#\022"
  "\024\n\020RESOLVED_TVFSCAN\020Q\022\035\n\030RESOLVED_GROUP_"
  "ROWS_SCAN\020\260\001\022\036\n\032RESOLVED_FUNCTION_ARGUME"
  "NT\020R\022\031\n\025RESOLVED_EXPLAIN_STMT\020%\022\027\n\023RESOL"
  "VED_QUERY_STMT\020&\022!\n\035RESOLVED_CREATE_DATA"
  "BASE_STMT\020_\022\027\n\023RESOLVED_INDEX_ITEM\020`\022\030\n\024"
  "RESOLVED_UNNEST_ITEM\020~\022\036\n\032RESOLVED_CREAT"
  "E_INDEX_STMT\020a\022 \n\033RESOLVED_CREATE_SCHEMA"
  "_STMT\020\235\001\022\036\n\032RESOLVED_CREATE_TABLE_STMT\020Z"
  "\022(\n$RESOLVED_CREATE_TABLE_AS_SELECT_STMT"
  "\020(\022\036\n\032RESOLVED_CREATE_MODEL_STMT\020k\022\035\n\031RE"
  "SOLVED_CREATE_VIEW_STMT\020)\022$\n\037RESOLVED_WI"
  "TH_PARTITION_COLUMNS\020\231\001\022(\n#RESOLVED_CREA"
  "TE_SNAPSHOT_TABLE_STMT\020\266\001\022\'\n#RESOLVED_CR"
  "EATE_EXTERNAL_TABLE_STMT\020*\022\037\n\032RESOLVED_E"
  "XPORT_MODEL_STMT\020\230\001\022\035\n\031RESOLVED_EXPORT_D"
  "ATA_STMT\020+\022\036\n\032RESOLVED_DEFINE_TABLE_STMT"
  "\020,\022\032\n\026RESOLVED_DESCRIBE_STMT\020-\022\026\n\022RESOLV"
  "ED_SHOW_STMT\020.\022\027\n\023RESOLVED_BEGIN_STMT\020/\022"
  "!\n\035RESOLVED_SET_TRANSACTION_STMT\020x\022\030\n\024RE"
  "SOLVED_COMMIT_STMT\0200\022\032\n\026RESOLVED_ROLLBAC"
  "K_STMT\0201\022\035\n\031RESOLVED_START_BATCH_STMT\020z\022"
  "\033\n\027RESOLVED_RUN_BATCH_STMT\020{\022\035\n\031RESOLVED"
  "_ABORT_BATCH_STMT\020|\022\026\n\022RESOLVED_DROP_STM"
  "T\0202\022(\n$RESOLVED_DROP_MATERIALIZED_VIEW_S"
  "TMT\020y\022&\n!RESOLVED_DROP_SNAPSHOT_TABLE_ST"
  "MT\020\267\001\022 \n\033RESOLVED_RECURSIVE_REF_SCAN\020\223\001\022"
  "\034\n\027RESOLVED_RECURSIVE_SCAN\020\224\001\022\026\n\022RESOLVE"
  "D_WITH_SCAN\0203\022\027\n\023RESOLVED_WITH_ENTRY\0204\022\023"
  "\n\017RESOLVED_OPTION\0205\022 \n\034RESOLVED_WINDOW_P"
  "ARTITIONING\0206\022\034\n\030RESOLVED_WINDOW_ORDERIN"
  "G\0207\022\031\n\025RESOLVED_WINDOW_FRAME\0208\022$\n RESOLV"
  "ED_ANALYTIC_FUNCTION_GROUP\0209\022\036\n\032RESOLVED"
  "_WINDOW_FRAME_EXPR\020:\022\025\n\021RESOLVED_DMLVALU"
  "E\020;\022\027\n\023RESOLVED_DMLDEFAULT\020<\022\030\n\024RESOLVED"
  "_ASSERT_STMT\020b\022!\n\035RESOLVED_ASSERT_ROWS_M"
  "ODIFIED\020=\022\027\n\023RESOLVED_INSERT_ROW\020>\022\030\n\024RE"
  "SOLVED_INSERT_STMT\020\?\022\030\n\024RESOLVED_DELETE_"
  "STMT\020@\022\030\n\024RESOLVED_UPDATE_ITEM\020A\022\036\n\032RESO"
  "LVED_UPDATE_ARRAY_ITEM\020f\022\030\n\024RESOLVED_UPD"
  "ATE_STMT\020B\022\027\n\023RESOLVED_MERGE_WHEN\020d\022\027\n\023R"
  "ESOLVED_MERGE_STMT\020e\022\033\n\026RESOLVED_TRUNCAT"
  "E_STMT\020\205\001\022\031\n\024RESOLVED_OBJECT_UNIT\020\310\001\022\026\n\022"
  "RESOLVED_PRIVILEGE\020C\022\027\n\023RESOLVED_GRANT_S"
  "TMT\020E\022\030\n\024RESOLVED_REVOKE_STMT\020F\022!\n\034RESOL"
  "VED_ALTER_DATABASE_STMT\020\206\001\022)\n%RESOLVED_A"
  "LTER_MATERIALIZED_VIEW_STMT\020\177\022\037\n\032RESOLVE"
  "D_ALTER_SCHEMA_STMT\020\240\001\022\036\n\031RESOLVED_ALTER"
  "_MODEL_STMT\020\315\001\022\035\n\031RESOLVED_ALTER_TABLE_S"
  "TMT\020s\022\034\n\030RESOLVED_ALTER_VIEW_STMT\020v\022\037\n\033R"
  "ESOLVED_SET_OPTIONS_ACTION\020u\022%\n RESOLVED"
  "_ALTER_SUB_ENTITY_ACTION\020\312\001\022#\n\036RESOLVED_"
  "ADD_SUB_ENTITY_ACTION\020\313\001\022$\n\037RESOLVED_DRO"
  "P_SUB_ENTITY_ACTION\020\314\001\022\037\n\032RESOLVED_ADD_C"
  "OLUMN_ACTION\020\203\001\022#\n\036RESOLVED_ADD_CONSTRAI"
  "NT_ACTION\020\243\001\022$\n\037RESOLVED_DROP_CONSTRAINT"
  "_ACTION\020\244\001\022%\n RESOLVED_DROP_PRIMARY_KEY_"
  "ACTION\020\270\001\022)\n$RESOLVED_ALTER_COLUMN_OPTIO"
  "NS_ACTION\020\251\001\022/\n*RESOLVED_ALTER_COLUMN_DR"
  "OP_NOT_NULL_ACTION\020\262\001\022/\n*RESOLVED_ALTER_"
  "COLUMN_SET_DATA_TYPE_ACTION\020\265\001\022-\n(RESOLV"
  "ED_ALTER_COLUMN_SET_DEFAULT_ACTION\020\306\001\022.\n"
  ")RESOLVED_ALTER_COLUMN_DROP_DEFAULT_ACTI"
  "ON\020\307\001\022 \n\033RESOLVED_DROP_COLUMN_ACTION\020\204\001\022"
  "\"\n\035RESOLVED_RENAME_COLUMN_ACTION\020\271\001\022\033\n\026R"
  "ESOLVED_SET_AS_ACTION\020\234\001\022 \n\033RESOLVED_SET"
  "_COLLATE_CLAUSE\020\273\001\022)\n%RESOLVED_ALTER_TAB"
  "LE_SET_OPTIONS_STMT\020G\022\030\n\024RESOLVED_RENAME"
  "_STMT\020H\022/\n*RESOLVED_CREATE_PRIVILEGE_RES"
  "TRICTION_STMT\020\277\001\022*\n&RESOLVED_CREATE_ROW_"
  "ACCESS_POLICY_STMT\020I\022-\n(RESOLVED_DROP_PR"
  "IVILEGE_RESTRICTION_STMT\020\300\001\022(\n$RESOLVED_"
  "DROP_ROW_ACCESS_POLICY_STMT\020J\022$\n\037RESOLVE"
  "D_DROP_SEARCH_INDEX_STMT\020\276\001\022\035\n\030RESOLVED_"
  "GRANT_TO_ACTION\020\207\001\022 \n\033RESOLVED_RESTRICT_"
  "TO_ACTION\020\301\001\022+\n&RESOLVED_ADD_TO_RESTRICT"
  "EE_LIST_ACTION\020\302\001\0220\n+RESOLVED_REMOVE_FRO"
  "M_RESTRICTEE_LIST_ACTION\020\303\001\022!\n\034RESOLVED_"
  "FILTER_USING_ACTION\020\210\001\022 \n\033RESOLVED_REVOK"
  "E_FROM_ACTION\020\211\001\022\036\n\031RESOLVED_RENAME_TO_A"
  "CTION\020\212\001\022.\n)RESOLVED_ALTER_PRIVILEGE_RES"
  "TRICTION_STMT\020\304\001\022)\n%RESOLVED_ALTER_ROW_A"
  "CCESS_POLICY_STMT\020K\0220\n+RESOLVED_ALTER_AL"
  "L_ROW_ACCESS_POLICIES_STMT\020\221\001\022!\n\035RESOLVE"
  "D_CREATE_CONSTANT_STMT\020c\022!\n\035RESOLVED_CRE"
  "ATE_FUNCTION_STMT\020L\022\031\n\025RESOLVED_ARGUMENT"
  "_DEF\020M\022\031\n\025RESOLVED_ARGUMENT_REF\020N\022\'\n#RES"
  "OLVED_CREATE_TABLE_FUNCTION_STMT\020X\022#\n\037RE"
  "SOLVED_RELATION_ARGUMENT_SCAN\020Y\022\032\n\026RESOL"
  "VED_ARGUMENT_LIST\020O\022&\n\"RESOLVED_FUNCTION"
  "_SIGNATURE_HOLDER\020T\022\037\n\033RESOLVED_DROP_FUN"
  "CTION_STMT\020P\022&\n!RESOLVED_DROP_TABLE_FUNC"
  "TION_STMT\020\257\001\022\026\n\022RESOLVED_CALL_STMT\020S\022\030\n\024"
  "RESOLVED_IMPORT_STMT\020V\022\030\n\024RESOLVED_MODUL"
  "E_STMT\020W\022&\n\"RESOLVED_AGGREGATE_HAVING_MO"
  "DIFIER\020U\022*\n&RESOLVED_CREATE_MATERIALIZED"
  "_VIEW_STMT\020w\022\"\n\036RESOLVED_CREATE_PROCEDUR"
  "E_STMT\020}\022(\n#RESOLVED_EXECUTE_IMMEDIATE_A"
  "RGUMENT\020\217\001\022$\n\037RESOLVED_EXECUTE_IMMEDIATE"
  "_STMT\020\214\001\022\035\n\030RESOLVED_ASSIGNMENT_STMT\020\216\001\022"
  " \n\033RESOLVED_CREATE_ENTITY_STMT\020\232\001\022\037\n\032RES"
  "OLVED_ALTER_ENTITY_STMT\020\233\001\022\032\n\025RESOLVED_P"
  "IVOT_COLUMN\020\246\001\022\030\n\023RESOLVED_PIVOT_SCAN\020\241\001"
  "\022\036\n\031RESOLVED_RETURNING_CLAUSE\020\252\001\022\031\n\024RESO"
  "LVED_UNPIVOT_ARG\020\253\001\022\032\n\025RESOLVED_UNPIVOT_"
  "SCAN\020\254\001\022\035\n\030RESOLVED_CLONE_DATA_STMT\020\261\001\022#"
  "\n\036RESOLVED_TABLE_AND_COLUMN_INFO\020\263\001\022\032\n\025R"
  "ESOLVED_ANALYZE_STMT\020\264\001\022 \n\033RESOLVED_AUX_"
  "LOAD_DATA_STMT\020\272\001\022;\n.__ResolvedNodeKind_"
  "_switch_must_have_default__\020\377\377\377\377\377\377\377\377\377\001B-"
  "\n\022com.google.zetasqlB\027ZetaSQLResolvedNod"
  "eKind"
  ;
static ::_pbi::once_flag descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto = {
    false, false, 6125, descriptor_table_protodef_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto,
    "zetasql/resolved_ast/resolved_node_kind.proto",
    &descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto::offsets,
    nullptr, file_level_enum_descriptors_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto,
    file_level_service_descriptors_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto_getter() {
  return &descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto(&descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto);
namespace zetasql {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResolvedNodeKind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto);
  return file_level_enum_descriptors_zetasql_2fresolved_5fast_2fresolved_5fnode_5fkind_2eproto[0];
}
bool ResolvedNodeKind_IsValid(int value) {
  switch (value) {
    case -1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 107:
    case 109:
    case 110:
    case 112:
    case 113:
    case 115:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 163:
    case 164:
    case 165:
    case 166:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 202:
    case 203:
    case 204:
    case 205:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace zetasql
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
