// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ml_metadata/proto/metadata_source.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
namespace ml_metadata {
class MetadataSourceQueryConfig;
struct MetadataSourceQueryConfigDefaultTypeInternal;
extern MetadataSourceQueryConfigDefaultTypeInternal _MetadataSourceQueryConfig_default_instance_;
class MetadataSourceQueryConfig_DbVerification;
struct MetadataSourceQueryConfig_DbVerificationDefaultTypeInternal;
extern MetadataSourceQueryConfig_DbVerificationDefaultTypeInternal _MetadataSourceQueryConfig_DbVerification_default_instance_;
class MetadataSourceQueryConfig_MigrationScheme;
struct MetadataSourceQueryConfig_MigrationSchemeDefaultTypeInternal;
extern MetadataSourceQueryConfig_MigrationSchemeDefaultTypeInternal _MetadataSourceQueryConfig_MigrationScheme_default_instance_;
class MetadataSourceQueryConfig_MigrationScheme_VerificationScheme;
struct MetadataSourceQueryConfig_MigrationScheme_VerificationSchemeDefaultTypeInternal;
extern MetadataSourceQueryConfig_MigrationScheme_VerificationSchemeDefaultTypeInternal _MetadataSourceQueryConfig_MigrationScheme_VerificationScheme_default_instance_;
class MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse;
struct MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUseDefaultTypeInternal;
extern MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUseDefaultTypeInternal _MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse_default_instance_;
class MetadataSourceQueryConfig_TemplateQuery;
struct MetadataSourceQueryConfig_TemplateQueryDefaultTypeInternal;
extern MetadataSourceQueryConfig_TemplateQueryDefaultTypeInternal _MetadataSourceQueryConfig_TemplateQuery_default_instance_;
class MySQLSourceErrorInfo;
struct MySQLSourceErrorInfoDefaultTypeInternal;
extern MySQLSourceErrorInfoDefaultTypeInternal _MySQLSourceErrorInfo_default_instance_;
class RecordSet;
struct RecordSetDefaultTypeInternal;
extern RecordSetDefaultTypeInternal _RecordSet_default_instance_;
class RecordSet_Record;
struct RecordSet_RecordDefaultTypeInternal;
extern RecordSet_RecordDefaultTypeInternal _RecordSet_Record_default_instance_;
}  // namespace ml_metadata
PROTOBUF_NAMESPACE_OPEN
template<> ::ml_metadata::MetadataSourceQueryConfig* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig>(Arena*);
template<> ::ml_metadata::MetadataSourceQueryConfig_DbVerification* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_DbVerification>(Arena*);
template<> ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_MigrationScheme>(Arena*);
template<> ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme>(Arena*);
template<> ::ml_metadata::MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse>(Arena*);
template<> ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* Arena::CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(Arena*);
template<> ::ml_metadata::MySQLSourceErrorInfo* Arena::CreateMaybeMessage<::ml_metadata::MySQLSourceErrorInfo>(Arena*);
template<> ::ml_metadata::RecordSet* Arena::CreateMaybeMessage<::ml_metadata::RecordSet>(Arena*);
template<> ::ml_metadata::RecordSet_Record* Arena::CreateMaybeMessage<::ml_metadata::RecordSet_Record>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ml_metadata {

enum MetadataSourceType : int {
  UNKNOWN_METADATA_SOURCE = 0,
  FAKE_METADATA_SOURCE = 1,
  MYSQL_METADATA_SOURCE = 2,
  SQLITE_METADATA_SOURCE = 3,
  POSTGRESQL_METADATA_SOURCE = 6,
  MetadataSourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  MetadataSourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool MetadataSourceType_IsValid(int value);
constexpr MetadataSourceType MetadataSourceType_MIN = UNKNOWN_METADATA_SOURCE;
constexpr MetadataSourceType MetadataSourceType_MAX = POSTGRESQL_METADATA_SOURCE;
constexpr int MetadataSourceType_ARRAYSIZE = MetadataSourceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MetadataSourceType_descriptor();
template<typename T>
inline const std::string& MetadataSourceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MetadataSourceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MetadataSourceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MetadataSourceType_descriptor(), enum_t_value);
}
inline bool MetadataSourceType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, MetadataSourceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MetadataSourceType>(
    MetadataSourceType_descriptor(), name, value);
}
// ===================================================================

class RecordSet_Record final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.RecordSet.Record) */ {
 public:
  inline RecordSet_Record() : RecordSet_Record(nullptr) {}
  ~RecordSet_Record() override;
  explicit PROTOBUF_CONSTEXPR RecordSet_Record(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecordSet_Record(const RecordSet_Record& from);
  RecordSet_Record(RecordSet_Record&& from) noexcept
    : RecordSet_Record() {
    *this = ::std::move(from);
  }

  inline RecordSet_Record& operator=(const RecordSet_Record& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecordSet_Record& operator=(RecordSet_Record&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecordSet_Record& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecordSet_Record* internal_default_instance() {
    return reinterpret_cast<const RecordSet_Record*>(
               &_RecordSet_Record_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RecordSet_Record& a, RecordSet_Record& b) {
    a.Swap(&b);
  }
  inline void Swap(RecordSet_Record* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecordSet_Record* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecordSet_Record* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RecordSet_Record>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RecordSet_Record& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RecordSet_Record& from) {
    RecordSet_Record::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecordSet_Record* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.RecordSet.Record";
  }
  protected:
  explicit RecordSet_Record(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated string values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  void set_values(int index, const std::string& value);
  void set_values(int index, std::string&& value);
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, size_t size);
  std::string* add_values();
  void add_values(const std::string& value);
  void add_values(std::string&& value);
  void add_values(const char* value);
  void add_values(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_values();
  private:
  const std::string& _internal_values(int index) const;
  std::string* _internal_add_values();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.RecordSet.Record)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> values_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class RecordSet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.RecordSet) */ {
 public:
  inline RecordSet() : RecordSet(nullptr) {}
  ~RecordSet() override;
  explicit PROTOBUF_CONSTEXPR RecordSet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RecordSet(const RecordSet& from);
  RecordSet(RecordSet&& from) noexcept
    : RecordSet() {
    *this = ::std::move(from);
  }

  inline RecordSet& operator=(const RecordSet& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecordSet& operator=(RecordSet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecordSet& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecordSet* internal_default_instance() {
    return reinterpret_cast<const RecordSet*>(
               &_RecordSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RecordSet& a, RecordSet& b) {
    a.Swap(&b);
  }
  inline void Swap(RecordSet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecordSet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecordSet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RecordSet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RecordSet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RecordSet& from) {
    RecordSet::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecordSet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.RecordSet";
  }
  protected:
  explicit RecordSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef RecordSet_Record Record;

  // accessors -------------------------------------------------------

  enum : int {
    kColumnNamesFieldNumber = 1,
    kRecordsFieldNumber = 2,
  };
  // repeated string column_names = 1;
  int column_names_size() const;
  private:
  int _internal_column_names_size() const;
  public:
  void clear_column_names();
  const std::string& column_names(int index) const;
  std::string* mutable_column_names(int index);
  void set_column_names(int index, const std::string& value);
  void set_column_names(int index, std::string&& value);
  void set_column_names(int index, const char* value);
  void set_column_names(int index, const char* value, size_t size);
  std::string* add_column_names();
  void add_column_names(const std::string& value);
  void add_column_names(std::string&& value);
  void add_column_names(const char* value);
  void add_column_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& column_names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_column_names();
  private:
  const std::string& _internal_column_names(int index) const;
  std::string* _internal_add_column_names();
  public:

  // repeated .ml_metadata.RecordSet.Record records = 2;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  ::ml_metadata::RecordSet_Record* mutable_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::RecordSet_Record >*
      mutable_records();
  private:
  const ::ml_metadata::RecordSet_Record& _internal_records(int index) const;
  ::ml_metadata::RecordSet_Record* _internal_add_records();
  public:
  const ::ml_metadata::RecordSet_Record& records(int index) const;
  ::ml_metadata::RecordSet_Record* add_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::RecordSet_Record >&
      records() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.RecordSet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> column_names_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::RecordSet_Record > records_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MetadataSourceQueryConfig_TemplateQuery final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MetadataSourceQueryConfig.TemplateQuery) */ {
 public:
  inline MetadataSourceQueryConfig_TemplateQuery() : MetadataSourceQueryConfig_TemplateQuery(nullptr) {}
  ~MetadataSourceQueryConfig_TemplateQuery() override;
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig_TemplateQuery(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetadataSourceQueryConfig_TemplateQuery(const MetadataSourceQueryConfig_TemplateQuery& from);
  MetadataSourceQueryConfig_TemplateQuery(MetadataSourceQueryConfig_TemplateQuery&& from) noexcept
    : MetadataSourceQueryConfig_TemplateQuery() {
    *this = ::std::move(from);
  }

  inline MetadataSourceQueryConfig_TemplateQuery& operator=(const MetadataSourceQueryConfig_TemplateQuery& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataSourceQueryConfig_TemplateQuery& operator=(MetadataSourceQueryConfig_TemplateQuery&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataSourceQueryConfig_TemplateQuery& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataSourceQueryConfig_TemplateQuery* internal_default_instance() {
    return reinterpret_cast<const MetadataSourceQueryConfig_TemplateQuery*>(
               &_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MetadataSourceQueryConfig_TemplateQuery& a, MetadataSourceQueryConfig_TemplateQuery& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataSourceQueryConfig_TemplateQuery* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataSourceQueryConfig_TemplateQuery* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataSourceQueryConfig_TemplateQuery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataSourceQueryConfig_TemplateQuery>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetadataSourceQueryConfig_TemplateQuery& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetadataSourceQueryConfig_TemplateQuery& from) {
    MetadataSourceQueryConfig_TemplateQuery::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataSourceQueryConfig_TemplateQuery* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MetadataSourceQueryConfig.TemplateQuery";
  }
  protected:
  explicit MetadataSourceQueryConfig_TemplateQuery(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQueryFieldNumber = 1,
    kParameterNumFieldNumber = 2,
  };
  // string query = 1;
  void clear_query();
  const std::string& query() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_query(ArgT0&& arg0, ArgT... args);
  std::string* mutable_query();
  PROTOBUF_NODISCARD std::string* release_query();
  void set_allocated_query(std::string* query);
  private:
  const std::string& _internal_query() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query(const std::string& value);
  std::string* _internal_mutable_query();
  public:

  // int32 parameter_num = 2;
  void clear_parameter_num();
  int32_t parameter_num() const;
  void set_parameter_num(int32_t value);
  private:
  int32_t _internal_parameter_num() const;
  void _internal_set_parameter_num(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.MetadataSourceQueryConfig.TemplateQuery)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr query_;
    int32_t parameter_num_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MetadataSourceQueryConfig_DbVerification final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MetadataSourceQueryConfig.DbVerification) */ {
 public:
  inline MetadataSourceQueryConfig_DbVerification() : MetadataSourceQueryConfig_DbVerification(nullptr) {}
  ~MetadataSourceQueryConfig_DbVerification() override;
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig_DbVerification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetadataSourceQueryConfig_DbVerification(const MetadataSourceQueryConfig_DbVerification& from);
  MetadataSourceQueryConfig_DbVerification(MetadataSourceQueryConfig_DbVerification&& from) noexcept
    : MetadataSourceQueryConfig_DbVerification() {
    *this = ::std::move(from);
  }

  inline MetadataSourceQueryConfig_DbVerification& operator=(const MetadataSourceQueryConfig_DbVerification& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataSourceQueryConfig_DbVerification& operator=(MetadataSourceQueryConfig_DbVerification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataSourceQueryConfig_DbVerification& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataSourceQueryConfig_DbVerification* internal_default_instance() {
    return reinterpret_cast<const MetadataSourceQueryConfig_DbVerification*>(
               &_MetadataSourceQueryConfig_DbVerification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MetadataSourceQueryConfig_DbVerification& a, MetadataSourceQueryConfig_DbVerification& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataSourceQueryConfig_DbVerification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataSourceQueryConfig_DbVerification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataSourceQueryConfig_DbVerification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataSourceQueryConfig_DbVerification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetadataSourceQueryConfig_DbVerification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetadataSourceQueryConfig_DbVerification& from) {
    MetadataSourceQueryConfig_DbVerification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataSourceQueryConfig_DbVerification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MetadataSourceQueryConfig.DbVerification";
  }
  protected:
  explicit MetadataSourceQueryConfig_DbVerification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTotalNumTablesFieldNumber = 1,
    kTotalNumIndexesFieldNumber = 2,
  };
  // int32 total_num_tables = 1;
  void clear_total_num_tables();
  int32_t total_num_tables() const;
  void set_total_num_tables(int32_t value);
  private:
  int32_t _internal_total_num_tables() const;
  void _internal_set_total_num_tables(int32_t value);
  public:

  // int32 total_num_indexes = 2;
  void clear_total_num_indexes();
  int32_t total_num_indexes() const;
  void set_total_num_indexes(int32_t value);
  private:
  int32_t _internal_total_num_indexes() const;
  void _internal_set_total_num_indexes(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.MetadataSourceQueryConfig.DbVerification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t total_num_tables_;
    int32_t total_num_indexes_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MetadataSourceQueryConfig_MigrationScheme_VerificationScheme final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme) */ {
 public:
  inline MetadataSourceQueryConfig_MigrationScheme_VerificationScheme() : MetadataSourceQueryConfig_MigrationScheme_VerificationScheme(nullptr) {}
  ~MetadataSourceQueryConfig_MigrationScheme_VerificationScheme() override;
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig_MigrationScheme_VerificationScheme(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetadataSourceQueryConfig_MigrationScheme_VerificationScheme(const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& from);
  MetadataSourceQueryConfig_MigrationScheme_VerificationScheme(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme&& from) noexcept
    : MetadataSourceQueryConfig_MigrationScheme_VerificationScheme() {
    *this = ::std::move(from);
  }

  inline MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& operator=(const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& operator=(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* internal_default_instance() {
    return reinterpret_cast<const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme*>(
               &_MetadataSourceQueryConfig_MigrationScheme_VerificationScheme_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& a, MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataSourceQueryConfig_MigrationScheme_VerificationScheme>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& from) {
    MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme";
  }
  protected:
  explicit MetadataSourceQueryConfig_MigrationScheme_VerificationScheme(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreviousVersionSetupQueriesFieldNumber = 1,
    kPostMigrationVerificationQueriesFieldNumber = 2,
  };
  // repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery previous_version_setup_queries = 1;
  int previous_version_setup_queries_size() const;
  private:
  int _internal_previous_version_setup_queries_size() const;
  public:
  void clear_previous_version_setup_queries();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_previous_version_setup_queries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
      mutable_previous_version_setup_queries();
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_previous_version_setup_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_add_previous_version_setup_queries();
  public:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& previous_version_setup_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* add_previous_version_setup_queries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
      previous_version_setup_queries() const;

  // repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery post_migration_verification_queries = 2;
  int post_migration_verification_queries_size() const;
  private:
  int _internal_post_migration_verification_queries_size() const;
  public:
  void clear_post_migration_verification_queries();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_post_migration_verification_queries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
      mutable_post_migration_verification_queries();
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_post_migration_verification_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_add_post_migration_verification_queries();
  public:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& post_migration_verification_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* add_post_migration_verification_queries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
      post_migration_verification_queries() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery > previous_version_setup_queries_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery > post_migration_verification_queries_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MetadataSourceQueryConfig_MigrationScheme final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MetadataSourceQueryConfig.MigrationScheme) */ {
 public:
  inline MetadataSourceQueryConfig_MigrationScheme() : MetadataSourceQueryConfig_MigrationScheme(nullptr) {}
  ~MetadataSourceQueryConfig_MigrationScheme() override;
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig_MigrationScheme(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetadataSourceQueryConfig_MigrationScheme(const MetadataSourceQueryConfig_MigrationScheme& from);
  MetadataSourceQueryConfig_MigrationScheme(MetadataSourceQueryConfig_MigrationScheme&& from) noexcept
    : MetadataSourceQueryConfig_MigrationScheme() {
    *this = ::std::move(from);
  }

  inline MetadataSourceQueryConfig_MigrationScheme& operator=(const MetadataSourceQueryConfig_MigrationScheme& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataSourceQueryConfig_MigrationScheme& operator=(MetadataSourceQueryConfig_MigrationScheme&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataSourceQueryConfig_MigrationScheme& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataSourceQueryConfig_MigrationScheme* internal_default_instance() {
    return reinterpret_cast<const MetadataSourceQueryConfig_MigrationScheme*>(
               &_MetadataSourceQueryConfig_MigrationScheme_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MetadataSourceQueryConfig_MigrationScheme& a, MetadataSourceQueryConfig_MigrationScheme& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataSourceQueryConfig_MigrationScheme* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataSourceQueryConfig_MigrationScheme* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataSourceQueryConfig_MigrationScheme* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataSourceQueryConfig_MigrationScheme>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetadataSourceQueryConfig_MigrationScheme& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetadataSourceQueryConfig_MigrationScheme& from) {
    MetadataSourceQueryConfig_MigrationScheme::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataSourceQueryConfig_MigrationScheme* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MetadataSourceQueryConfig.MigrationScheme";
  }
  protected:
  explicit MetadataSourceQueryConfig_MigrationScheme(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MetadataSourceQueryConfig_MigrationScheme_VerificationScheme VerificationScheme;

  // accessors -------------------------------------------------------

  enum : int {
    kUpgradeQueriesFieldNumber = 1,
    kDowngradeQueriesFieldNumber = 3,
    kUpgradeVerificationFieldNumber = 2,
    kDowngradeVerificationFieldNumber = 4,
    kDbVerificationFieldNumber = 5,
  };
  // repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery upgrade_queries = 1;
  int upgrade_queries_size() const;
  private:
  int _internal_upgrade_queries_size() const;
  public:
  void clear_upgrade_queries();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_upgrade_queries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
      mutable_upgrade_queries();
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_upgrade_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_add_upgrade_queries();
  public:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& upgrade_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* add_upgrade_queries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
      upgrade_queries() const;

  // repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery downgrade_queries = 3;
  int downgrade_queries_size() const;
  private:
  int _internal_downgrade_queries_size() const;
  public:
  void clear_downgrade_queries();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_downgrade_queries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
      mutable_downgrade_queries();
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_downgrade_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_add_downgrade_queries();
  public:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& downgrade_queries(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* add_downgrade_queries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
      downgrade_queries() const;

  // .ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme upgrade_verification = 2;
  bool has_upgrade_verification() const;
  private:
  bool _internal_has_upgrade_verification() const;
  public:
  void clear_upgrade_verification();
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& upgrade_verification() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* release_upgrade_verification();
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* mutable_upgrade_verification();
  void set_allocated_upgrade_verification(::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* upgrade_verification);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& _internal_upgrade_verification() const;
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* _internal_mutable_upgrade_verification();
  public:
  void unsafe_arena_set_allocated_upgrade_verification(
      ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* upgrade_verification);
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* unsafe_arena_release_upgrade_verification();

  // .ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme downgrade_verification = 4;
  bool has_downgrade_verification() const;
  private:
  bool _internal_has_downgrade_verification() const;
  public:
  void clear_downgrade_verification();
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& downgrade_verification() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* release_downgrade_verification();
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* mutable_downgrade_verification();
  void set_allocated_downgrade_verification(::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* downgrade_verification);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& _internal_downgrade_verification() const;
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* _internal_mutable_downgrade_verification();
  public:
  void unsafe_arena_set_allocated_downgrade_verification(
      ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* downgrade_verification);
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* unsafe_arena_release_downgrade_verification();

  // .ml_metadata.MetadataSourceQueryConfig.DbVerification db_verification = 5;
  bool has_db_verification() const;
  private:
  bool _internal_has_db_verification() const;
  public:
  void clear_db_verification();
  const ::ml_metadata::MetadataSourceQueryConfig_DbVerification& db_verification() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_DbVerification* release_db_verification();
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* mutable_db_verification();
  void set_allocated_db_verification(::ml_metadata::MetadataSourceQueryConfig_DbVerification* db_verification);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_DbVerification& _internal_db_verification() const;
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* _internal_mutable_db_verification();
  public:
  void unsafe_arena_set_allocated_db_verification(
      ::ml_metadata::MetadataSourceQueryConfig_DbVerification* db_verification);
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* unsafe_arena_release_db_verification();

  // @@protoc_insertion_point(class_scope:ml_metadata.MetadataSourceQueryConfig.MigrationScheme)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery > upgrade_queries_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery > downgrade_queries_;
    ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* upgrade_verification_;
    ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* downgrade_verification_;
    ::ml_metadata::MetadataSourceQueryConfig_DbVerification* db_verification_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse, 
    int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse, 
    int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse& other);
  static const MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse*>(&_MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};

// -------------------------------------------------------------------

class MetadataSourceQueryConfig final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MetadataSourceQueryConfig) */ {
 public:
  inline MetadataSourceQueryConfig() : MetadataSourceQueryConfig(nullptr) {}
  ~MetadataSourceQueryConfig() override;
  explicit PROTOBUF_CONSTEXPR MetadataSourceQueryConfig(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetadataSourceQueryConfig(const MetadataSourceQueryConfig& from);
  MetadataSourceQueryConfig(MetadataSourceQueryConfig&& from) noexcept
    : MetadataSourceQueryConfig() {
    *this = ::std::move(from);
  }

  inline MetadataSourceQueryConfig& operator=(const MetadataSourceQueryConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetadataSourceQueryConfig& operator=(MetadataSourceQueryConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetadataSourceQueryConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetadataSourceQueryConfig* internal_default_instance() {
    return reinterpret_cast<const MetadataSourceQueryConfig*>(
               &_MetadataSourceQueryConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MetadataSourceQueryConfig& a, MetadataSourceQueryConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MetadataSourceQueryConfig* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetadataSourceQueryConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetadataSourceQueryConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetadataSourceQueryConfig>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetadataSourceQueryConfig& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetadataSourceQueryConfig& from) {
    MetadataSourceQueryConfig::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetadataSourceQueryConfig* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MetadataSourceQueryConfig";
  }
  protected:
  explicit MetadataSourceQueryConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MetadataSourceQueryConfig_TemplateQuery TemplateQuery;
  typedef MetadataSourceQueryConfig_DbVerification DbVerification;
  typedef MetadataSourceQueryConfig_MigrationScheme MigrationScheme;

  // accessors -------------------------------------------------------

  enum : int {
    kMigrationSchemesFieldNumber = 62,
    kSecondaryIndicesFieldNumber = 105,
    kDropTypeTableFieldNumber = 3,
    kCreateTypeTableFieldNumber = 4,
    kSelectTypeByIdFieldNumber = 6,
    kDropTypePropertyTableFieldNumber = 7,
    kCreateTypePropertyTableFieldNumber = 8,
    kInsertTypePropertyFieldNumber = 9,
    kSelectPropertyByTypeIdFieldNumber = 10,
    kSelectLastInsertIdFieldNumber = 11,
    kDropArtifactTableFieldNumber = 12,
    kCreateArtifactTableFieldNumber = 13,
    kInsertArtifactFieldNumber = 14,
    kSelectArtifactByIdFieldNumber = 15,
    kDropArtifactPropertyTableFieldNumber = 16,
    kCreateArtifactPropertyTableFieldNumber = 17,
    kInsertArtifactPropertyFieldNumber = 18,
    kSelectArtifactPropertyByArtifactIdFieldNumber = 19,
    kSelectTypeByNameFieldNumber = 20,
    kUpdateArtifactFieldNumber = 21,
    kUpdateArtifactPropertyFieldNumber = 22,
    kDeleteArtifactPropertyFieldNumber = 23,
    kDropExecutionTableFieldNumber = 24,
    kCreateExecutionTableFieldNumber = 25,
    kDropExecutionPropertyTableFieldNumber = 26,
    kCreateExecutionPropertyTableFieldNumber = 27,
    kInsertExecutionFieldNumber = 28,
    kSelectExecutionByIdFieldNumber = 29,
    kInsertExecutionPropertyFieldNumber = 30,
    kSelectExecutionPropertyByExecutionIdFieldNumber = 31,
    kUpdateExecutionPropertyFieldNumber = 32,
    kDeleteExecutionPropertyFieldNumber = 33,
    kUpdateExecutionFieldNumber = 34,
    kDropEventTableFieldNumber = 35,
    kCreateEventTableFieldNumber = 36,
    kInsertEventFieldNumber = 37,
    kDropEventPathTableFieldNumber = 40,
    kCreateEventPathTableFieldNumber = 41,
    kInsertEventPathFieldNumber = 42,
    kCheckTypeTableFieldNumber = 44,
    kCheckTypePropertyTableFieldNumber = 45,
    kCheckArtifactTableFieldNumber = 46,
    kCheckArtifactPropertyTableFieldNumber = 47,
    kCheckExecutionTableFieldNumber = 48,
    kCheckExecutionPropertyTableFieldNumber = 49,
    kCheckEventTableFieldNumber = 50,
    kCheckEventPathTableFieldNumber = 51,
    kSelectArtifactsByTypeIdFieldNumber = 52,
    kSelectExecutionsByTypeIdFieldNumber = 53,
    kInsertArtifactTypeFieldNumber = 54,
    kInsertExecutionTypeFieldNumber = 55,
    kSelectArtifactsByUriFieldNumber = 56,
    kSelectAllTypesFieldNumber = 57,
    kInsertContextTypeFieldNumber = 58,
    kDropMlmdEnvTableFieldNumber = 60,
    kCreateMlmdEnvTableFieldNumber = 61,
    kCheckMlmdEnvTableFieldNumber = 63,
    kUpdateSchemaVersionFieldNumber = 64,
    kCheckTablesInV0132FieldNumber = 65,
    kInsertSchemaVersionFieldNumber = 66,
    kDropContextTableFieldNumber = 67,
    kCreateContextTableFieldNumber = 68,
    kCheckContextTableFieldNumber = 69,
    kInsertContextFieldNumber = 70,
    kSelectContextByIdFieldNumber = 71,
    kSelectContextsByTypeIdFieldNumber = 72,
    kUpdateContextFieldNumber = 73,
    kDropContextPropertyTableFieldNumber = 74,
    kCreateContextPropertyTableFieldNumber = 75,
    kCheckContextPropertyTableFieldNumber = 76,
    kInsertContextPropertyFieldNumber = 77,
    kSelectContextPropertyByContextIdFieldNumber = 78,
    kUpdateContextPropertyFieldNumber = 79,
    kDeleteContextPropertyFieldNumber = 80,
    kDropAssociationTableFieldNumber = 81,
    kCreateAssociationTableFieldNumber = 82,
    kCheckAssociationTableFieldNumber = 83,
    kInsertAssociationFieldNumber = 84,
    kSelectAssociationByContextIdFieldNumber = 85,
    kDropAttributionTableFieldNumber = 87,
    kCreateAttributionTableFieldNumber = 88,
    kCheckAttributionTableFieldNumber = 89,
    kInsertAttributionFieldNumber = 90,
    kSelectAttributionByContextIdFieldNumber = 91,
    kSelectContextByTypeIdAndNameFieldNumber = 93,
    kSelectArtifactByTypeIdAndNameFieldNumber = 94,
    kSelectExecutionByTypeIdAndNameFieldNumber = 95,
    kSelectEventByArtifactIdsFieldNumber = 96,
    kSelectEventByExecutionIdsFieldNumber = 97,
    kSelectEventPathByEventIdsFieldNumber = 98,
    kDropParentTypeTableFieldNumber = 99,
    kCreateParentTypeTableFieldNumber = 100,
    kCheckParentTypeTableFieldNumber = 101,
    kDropParentContextTableFieldNumber = 102,
    kCreateParentContextTableFieldNumber = 103,
    kCheckParentContextTableFieldNumber = 104,
    kInsertParentContextFieldNumber = 106,
    kSelectParentContextByContextIdFieldNumber = 107,
    kSelectParentContextByParentContextIdFieldNumber = 108,
    kInsertParentTypeFieldNumber = 109,
    kSelectParentTypeByTypeIdFieldNumber = 110,
    kSelectTypeByNameAndVersionFieldNumber = 111,
    kDeleteContextsByIdFieldNumber = 112,
    kDeleteContextsPropertiesByContextsIdFieldNumber = 113,
    kDeleteParentContextsByParentIdsFieldNumber = 114,
    kDeleteParentContextsByChildIdsFieldNumber = 115,
    kDeleteArtifactsByIdFieldNumber = 116,
    kDeleteArtifactsPropertiesByArtifactsIdFieldNumber = 117,
    kDeleteExecutionsByIdFieldNumber = 118,
    kDeleteExecutionsPropertiesByExecutionsIdFieldNumber = 119,
    kDeleteEventsByArtifactsIdFieldNumber = 120,
    kDeleteEventsByExecutionsIdFieldNumber = 121,
    kDeleteAssociationsByContextsIdFieldNumber = 122,
    kDeleteAssociationsByExecutionsIdFieldNumber = 123,
    kDeleteAttributionsByContextsIdFieldNumber = 124,
    kDeleteAttributionsByArtifactsIdFieldNumber = 125,
    kDeleteEventPathsFieldNumber = 126,
    kDeleteParentTypeFieldNumber = 127,
    kSelectTypesByIdFieldNumber = 128,
    kSelectPropertiesByTypeIdFieldNumber = 129,
    kSelectArtifactsByExternalIdsFieldNumber = 130,
    kDeleteParentContextsByParentIdAndChildIdsFieldNumber = 131,
    kSelectExecutionsByExternalIdsFieldNumber = 132,
    kSelectContextsByExternalIdsFieldNumber = 133,
    kSelectTypesByExternalIdsFieldNumber = 134,
    kMetadataSourceTypeSpecificOptionsFieldNumber = 135,
    kSelectTypesByNamesFieldNumber = 136,
    kSelectTypesByNamesAndVersionsFieldNumber = 137,
    kUpdateTypeFieldNumber = 138,
    kSelectParentContextsByContextIdsFieldNumber = 139,
    kSelectParentContextsByParentContextIdsFieldNumber = 140,
    kCheckMlmdEnvTableExistenceFieldNumber = 141,
    kSelectAssociationsByExecutionIdsFieldNumber = 142,
    kSelectAttributionsByArtifactIdsFieldNumber = 143,
    kSchemaVersionFieldNumber = 59,
    kMetadataSourceTypeFieldNumber = 1,
  };
  // map<int64, .ml_metadata.MetadataSourceQueryConfig.MigrationScheme> migration_schemes = 62;
  int migration_schemes_size() const;
  private:
  int _internal_migration_schemes_size() const;
  public:
  void clear_migration_schemes();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >&
      _internal_migration_schemes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >*
      _internal_mutable_migration_schemes();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >&
      migration_schemes() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >*
      mutable_migration_schemes();

  // repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery secondary_indices = 105;
  int secondary_indices_size() const;
  private:
  int _internal_secondary_indices_size() const;
  public:
  void clear_secondary_indices();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_secondary_indices(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
      mutable_secondary_indices();
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_secondary_indices(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_add_secondary_indices();
  public:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& secondary_indices(int index) const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* add_secondary_indices();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
      secondary_indices() const;

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_type_table = 3;
  bool has_drop_type_table() const;
  private:
  bool _internal_has_drop_type_table() const;
  public:
  void clear_drop_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_type_table();
  void set_allocated_drop_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_type_table();
  public:
  void unsafe_arena_set_allocated_drop_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_type_table = 4;
  bool has_create_type_table() const;
  private:
  bool _internal_has_create_type_table() const;
  public:
  void clear_create_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_type_table();
  void set_allocated_create_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_type_table();
  public:
  void unsafe_arena_set_allocated_create_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_id = 6;
  bool has_select_type_by_id() const;
  private:
  bool _internal_has_select_type_by_id() const;
  public:
  void clear_select_type_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_type_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_type_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_type_by_id();
  void set_allocated_select_type_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_type_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_type_by_id();
  public:
  void unsafe_arena_set_allocated_select_type_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_type_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_type_property_table = 7;
  bool has_drop_type_property_table() const;
  private:
  bool _internal_has_drop_type_property_table() const;
  public:
  void clear_drop_type_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_type_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_type_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_type_property_table();
  void set_allocated_drop_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_type_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_type_property_table();
  public:
  void unsafe_arena_set_allocated_drop_type_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_type_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_type_property_table = 8;
  bool has_create_type_property_table() const;
  private:
  bool _internal_has_create_type_property_table() const;
  public:
  void clear_create_type_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_type_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_type_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_type_property_table();
  void set_allocated_create_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_type_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_type_property_table();
  public:
  void unsafe_arena_set_allocated_create_type_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_type_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_type_property = 9;
  bool has_insert_type_property() const;
  private:
  bool _internal_has_insert_type_property() const;
  public:
  void clear_insert_type_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_type_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_type_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_type_property();
  void set_allocated_insert_type_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_type_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_type_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_type_property();
  public:
  void unsafe_arena_set_allocated_insert_type_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_type_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_type_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_property_by_type_id = 10;
  bool has_select_property_by_type_id() const;
  private:
  bool _internal_has_select_property_by_type_id() const;
  public:
  void clear_select_property_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_property_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_property_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_property_by_type_id();
  void set_allocated_select_property_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_property_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_property_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_property_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_property_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_property_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_property_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_last_insert_id = 11;
  bool has_select_last_insert_id() const;
  private:
  bool _internal_has_select_last_insert_id() const;
  public:
  void clear_select_last_insert_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_last_insert_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_last_insert_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_last_insert_id();
  void set_allocated_select_last_insert_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_last_insert_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_last_insert_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_last_insert_id();
  public:
  void unsafe_arena_set_allocated_select_last_insert_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_last_insert_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_last_insert_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_artifact_table = 12;
  bool has_drop_artifact_table() const;
  private:
  bool _internal_has_drop_artifact_table() const;
  public:
  void clear_drop_artifact_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_artifact_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_artifact_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_artifact_table();
  void set_allocated_drop_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_artifact_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_artifact_table();
  public:
  void unsafe_arena_set_allocated_drop_artifact_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_artifact_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_artifact_table = 13;
  bool has_create_artifact_table() const;
  private:
  bool _internal_has_create_artifact_table() const;
  public:
  void clear_create_artifact_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_artifact_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_artifact_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_artifact_table();
  void set_allocated_create_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_artifact_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_artifact_table();
  public:
  void unsafe_arena_set_allocated_create_artifact_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_artifact_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact = 14;
  bool has_insert_artifact() const;
  private:
  bool _internal_has_insert_artifact() const;
  public:
  void clear_insert_artifact();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_artifact();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_artifact();
  void set_allocated_insert_artifact(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_artifact() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_artifact();
  public:
  void unsafe_arena_set_allocated_insert_artifact(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_artifact();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_by_id = 15;
  bool has_select_artifact_by_id() const;
  private:
  bool _internal_has_select_artifact_by_id() const;
  public:
  void clear_select_artifact_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifact_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifact_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifact_by_id();
  void set_allocated_select_artifact_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifact_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifact_by_id();
  public:
  void unsafe_arena_set_allocated_select_artifact_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifact_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_artifact_property_table = 16;
  bool has_drop_artifact_property_table() const;
  private:
  bool _internal_has_drop_artifact_property_table() const;
  public:
  void clear_drop_artifact_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_artifact_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_artifact_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_artifact_property_table();
  void set_allocated_drop_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_artifact_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_artifact_property_table();
  public:
  void unsafe_arena_set_allocated_drop_artifact_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_artifact_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_artifact_property_table = 17;
  bool has_create_artifact_property_table() const;
  private:
  bool _internal_has_create_artifact_property_table() const;
  public:
  void clear_create_artifact_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_artifact_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_artifact_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_artifact_property_table();
  void set_allocated_create_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_artifact_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_artifact_property_table();
  public:
  void unsafe_arena_set_allocated_create_artifact_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_artifact_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact_property = 18;
  bool has_insert_artifact_property() const;
  private:
  bool _internal_has_insert_artifact_property() const;
  public:
  void clear_insert_artifact_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_artifact_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_artifact_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_artifact_property();
  void set_allocated_insert_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_artifact_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_artifact_property();
  public:
  void unsafe_arena_set_allocated_insert_artifact_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_artifact_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_property_by_artifact_id = 19;
  bool has_select_artifact_property_by_artifact_id() const;
  private:
  bool _internal_has_select_artifact_property_by_artifact_id() const;
  public:
  void clear_select_artifact_property_by_artifact_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifact_property_by_artifact_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifact_property_by_artifact_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifact_property_by_artifact_id();
  void set_allocated_select_artifact_property_by_artifact_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_property_by_artifact_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifact_property_by_artifact_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifact_property_by_artifact_id();
  public:
  void unsafe_arena_set_allocated_select_artifact_property_by_artifact_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_property_by_artifact_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifact_property_by_artifact_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_name = 20;
  bool has_select_type_by_name() const;
  private:
  bool _internal_has_select_type_by_name() const;
  public:
  void clear_select_type_by_name();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_type_by_name() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_type_by_name();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_type_by_name();
  void set_allocated_select_type_by_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_type_by_name() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_type_by_name();
  public:
  void unsafe_arena_set_allocated_select_type_by_name(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_type_by_name();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_artifact = 21;
  bool has_update_artifact() const;
  private:
  bool _internal_has_update_artifact() const;
  public:
  void clear_update_artifact();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_artifact();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_artifact();
  void set_allocated_update_artifact(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_artifact() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_artifact();
  public:
  void unsafe_arena_set_allocated_update_artifact(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_artifact();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_artifact_property = 22;
  bool has_update_artifact_property() const;
  private:
  bool _internal_has_update_artifact_property() const;
  public:
  void clear_update_artifact_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_artifact_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_artifact_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_artifact_property();
  void set_allocated_update_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_artifact_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_artifact_property();
  public:
  void unsafe_arena_set_allocated_update_artifact_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_artifact_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifact_property = 23;
  bool has_delete_artifact_property() const;
  private:
  bool _internal_has_delete_artifact_property() const;
  public:
  void clear_delete_artifact_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_artifact_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_artifact_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_artifact_property();
  void set_allocated_delete_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifact_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_artifact_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_artifact_property();
  public:
  void unsafe_arena_set_allocated_delete_artifact_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifact_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_artifact_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_execution_table = 24;
  bool has_drop_execution_table() const;
  private:
  bool _internal_has_drop_execution_table() const;
  public:
  void clear_drop_execution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_execution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_execution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_execution_table();
  void set_allocated_drop_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_execution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_execution_table();
  public:
  void unsafe_arena_set_allocated_drop_execution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_execution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_execution_table = 25;
  bool has_create_execution_table() const;
  private:
  bool _internal_has_create_execution_table() const;
  public:
  void clear_create_execution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_execution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_execution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_execution_table();
  void set_allocated_create_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_execution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_execution_table();
  public:
  void unsafe_arena_set_allocated_create_execution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_execution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_execution_property_table = 26;
  bool has_drop_execution_property_table() const;
  private:
  bool _internal_has_drop_execution_property_table() const;
  public:
  void clear_drop_execution_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_execution_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_execution_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_execution_property_table();
  void set_allocated_drop_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_execution_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_execution_property_table();
  public:
  void unsafe_arena_set_allocated_drop_execution_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_execution_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_execution_property_table = 27;
  bool has_create_execution_property_table() const;
  private:
  bool _internal_has_create_execution_property_table() const;
  public:
  void clear_create_execution_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_execution_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_execution_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_execution_property_table();
  void set_allocated_create_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_execution_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_execution_property_table();
  public:
  void unsafe_arena_set_allocated_create_execution_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_execution_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution = 28;
  bool has_insert_execution() const;
  private:
  bool _internal_has_insert_execution() const;
  public:
  void clear_insert_execution();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_execution() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_execution();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_execution();
  void set_allocated_insert_execution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_execution() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_execution();
  public:
  void unsafe_arena_set_allocated_insert_execution(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_execution();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_by_id = 29;
  bool has_select_execution_by_id() const;
  private:
  bool _internal_has_select_execution_by_id() const;
  public:
  void clear_select_execution_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_execution_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_execution_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_execution_by_id();
  void set_allocated_select_execution_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_execution_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_execution_by_id();
  public:
  void unsafe_arena_set_allocated_select_execution_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_execution_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution_property = 30;
  bool has_insert_execution_property() const;
  private:
  bool _internal_has_insert_execution_property() const;
  public:
  void clear_insert_execution_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_execution_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_execution_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_execution_property();
  void set_allocated_insert_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_execution_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_execution_property();
  public:
  void unsafe_arena_set_allocated_insert_execution_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_execution_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_property_by_execution_id = 31;
  bool has_select_execution_property_by_execution_id() const;
  private:
  bool _internal_has_select_execution_property_by_execution_id() const;
  public:
  void clear_select_execution_property_by_execution_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_execution_property_by_execution_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_execution_property_by_execution_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_execution_property_by_execution_id();
  void set_allocated_select_execution_property_by_execution_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_property_by_execution_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_execution_property_by_execution_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_execution_property_by_execution_id();
  public:
  void unsafe_arena_set_allocated_select_execution_property_by_execution_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_property_by_execution_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_execution_property_by_execution_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_execution_property = 32;
  bool has_update_execution_property() const;
  private:
  bool _internal_has_update_execution_property() const;
  public:
  void clear_update_execution_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_execution_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_execution_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_execution_property();
  void set_allocated_update_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_execution_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_execution_property();
  public:
  void unsafe_arena_set_allocated_update_execution_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_execution_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_execution_property = 33;
  bool has_delete_execution_property() const;
  private:
  bool _internal_has_delete_execution_property() const;
  public:
  void clear_delete_execution_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_execution_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_execution_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_execution_property();
  void set_allocated_delete_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_execution_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_execution_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_execution_property();
  public:
  void unsafe_arena_set_allocated_delete_execution_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_execution_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_execution_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_execution = 34;
  bool has_update_execution() const;
  private:
  bool _internal_has_update_execution() const;
  public:
  void clear_update_execution();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_execution() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_execution();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_execution();
  void set_allocated_update_execution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_execution() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_execution();
  public:
  void unsafe_arena_set_allocated_update_execution(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_execution();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_event_table = 35;
  bool has_drop_event_table() const;
  private:
  bool _internal_has_drop_event_table() const;
  public:
  void clear_drop_event_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_event_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_event_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_event_table();
  void set_allocated_drop_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_event_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_event_table();
  public:
  void unsafe_arena_set_allocated_drop_event_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_event_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_event_table = 36;
  bool has_create_event_table() const;
  private:
  bool _internal_has_create_event_table() const;
  public:
  void clear_create_event_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_event_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_event_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_event_table();
  void set_allocated_create_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_event_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_event_table();
  public:
  void unsafe_arena_set_allocated_create_event_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_event_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_event = 37;
  bool has_insert_event() const;
  private:
  bool _internal_has_insert_event() const;
  public:
  void clear_insert_event();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_event() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_event();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_event();
  void set_allocated_insert_event(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_event() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_event();
  public:
  void unsafe_arena_set_allocated_insert_event(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_event();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_event_path_table = 40;
  bool has_drop_event_path_table() const;
  private:
  bool _internal_has_drop_event_path_table() const;
  public:
  void clear_drop_event_path_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_event_path_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_event_path_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_event_path_table();
  void set_allocated_drop_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_path_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_event_path_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_event_path_table();
  public:
  void unsafe_arena_set_allocated_drop_event_path_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_path_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_event_path_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_event_path_table = 41;
  bool has_create_event_path_table() const;
  private:
  bool _internal_has_create_event_path_table() const;
  public:
  void clear_create_event_path_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_event_path_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_event_path_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_event_path_table();
  void set_allocated_create_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_path_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_event_path_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_event_path_table();
  public:
  void unsafe_arena_set_allocated_create_event_path_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_path_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_event_path_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_event_path = 42;
  bool has_insert_event_path() const;
  private:
  bool _internal_has_insert_event_path() const;
  public:
  void clear_insert_event_path();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_event_path() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_event_path();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_event_path();
  void set_allocated_insert_event_path(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_path);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_event_path() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_event_path();
  public:
  void unsafe_arena_set_allocated_insert_event_path(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_path);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_event_path();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_type_table = 44;
  bool has_check_type_table() const;
  private:
  bool _internal_has_check_type_table() const;
  public:
  void clear_check_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_type_table();
  void set_allocated_check_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_type_table();
  public:
  void unsafe_arena_set_allocated_check_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_type_property_table = 45;
  bool has_check_type_property_table() const;
  private:
  bool _internal_has_check_type_property_table() const;
  public:
  void clear_check_type_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_type_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_type_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_type_property_table();
  void set_allocated_check_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_type_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_type_property_table();
  public:
  void unsafe_arena_set_allocated_check_type_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_type_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_artifact_table = 46;
  bool has_check_artifact_table() const;
  private:
  bool _internal_has_check_artifact_table() const;
  public:
  void clear_check_artifact_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_artifact_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_artifact_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_artifact_table();
  void set_allocated_check_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_artifact_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_artifact_table();
  public:
  void unsafe_arena_set_allocated_check_artifact_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_artifact_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_artifact_property_table = 47;
  bool has_check_artifact_property_table() const;
  private:
  bool _internal_has_check_artifact_property_table() const;
  public:
  void clear_check_artifact_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_artifact_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_artifact_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_artifact_property_table();
  void set_allocated_check_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_artifact_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_artifact_property_table();
  public:
  void unsafe_arena_set_allocated_check_artifact_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_artifact_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_execution_table = 48;
  bool has_check_execution_table() const;
  private:
  bool _internal_has_check_execution_table() const;
  public:
  void clear_check_execution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_execution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_execution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_execution_table();
  void set_allocated_check_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_execution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_execution_table();
  public:
  void unsafe_arena_set_allocated_check_execution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_execution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_execution_property_table = 49;
  bool has_check_execution_property_table() const;
  private:
  bool _internal_has_check_execution_property_table() const;
  public:
  void clear_check_execution_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_execution_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_execution_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_execution_property_table();
  void set_allocated_check_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_execution_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_execution_property_table();
  public:
  void unsafe_arena_set_allocated_check_execution_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_execution_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_event_table = 50;
  bool has_check_event_table() const;
  private:
  bool _internal_has_check_event_table() const;
  public:
  void clear_check_event_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_event_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_event_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_event_table();
  void set_allocated_check_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_event_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_event_table();
  public:
  void unsafe_arena_set_allocated_check_event_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_event_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_event_path_table = 51;
  bool has_check_event_path_table() const;
  private:
  bool _internal_has_check_event_path_table() const;
  public:
  void clear_check_event_path_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_event_path_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_event_path_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_event_path_table();
  void set_allocated_check_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_path_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_event_path_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_event_path_table();
  public:
  void unsafe_arena_set_allocated_check_event_path_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_path_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_event_path_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_type_id = 52;
  bool has_select_artifacts_by_type_id() const;
  private:
  bool _internal_has_select_artifacts_by_type_id() const;
  public:
  void clear_select_artifacts_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifacts_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifacts_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifacts_by_type_id();
  void set_allocated_select_artifacts_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifacts_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifacts_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_artifacts_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifacts_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_executions_by_type_id = 53;
  bool has_select_executions_by_type_id() const;
  private:
  bool _internal_has_select_executions_by_type_id() const;
  public:
  void clear_select_executions_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_executions_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_executions_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_executions_by_type_id();
  void set_allocated_select_executions_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_executions_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_executions_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_executions_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_executions_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact_type = 54;
  bool has_insert_artifact_type() const;
  private:
  bool _internal_has_insert_artifact_type() const;
  public:
  void clear_insert_artifact_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_artifact_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_artifact_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_artifact_type();
  void set_allocated_insert_artifact_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_artifact_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_artifact_type();
  public:
  void unsafe_arena_set_allocated_insert_artifact_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_artifact_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution_type = 55;
  bool has_insert_execution_type() const;
  private:
  bool _internal_has_insert_execution_type() const;
  public:
  void clear_insert_execution_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_execution_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_execution_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_execution_type();
  void set_allocated_insert_execution_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_execution_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_execution_type();
  public:
  void unsafe_arena_set_allocated_insert_execution_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_execution_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_uri = 56;
  bool has_select_artifacts_by_uri() const;
  private:
  bool _internal_has_select_artifacts_by_uri() const;
  public:
  void clear_select_artifacts_by_uri();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifacts_by_uri() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifacts_by_uri();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifacts_by_uri();
  void set_allocated_select_artifacts_by_uri(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_uri);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifacts_by_uri() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifacts_by_uri();
  public:
  void unsafe_arena_set_allocated_select_artifacts_by_uri(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_uri);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifacts_by_uri();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_all_types = 57;
  bool has_select_all_types() const;
  private:
  bool _internal_has_select_all_types() const;
  public:
  void clear_select_all_types();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_all_types() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_all_types();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_all_types();
  void set_allocated_select_all_types(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_all_types);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_all_types() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_all_types();
  public:
  void unsafe_arena_set_allocated_select_all_types(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_all_types);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_all_types();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context_type = 58;
  bool has_insert_context_type() const;
  private:
  bool _internal_has_insert_context_type() const;
  public:
  void clear_insert_context_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_context_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_context_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_context_type();
  void set_allocated_insert_context_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_context_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_context_type();
  public:
  void unsafe_arena_set_allocated_insert_context_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_context_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_mlmd_env_table = 60;
  bool has_drop_mlmd_env_table() const;
  private:
  bool _internal_has_drop_mlmd_env_table() const;
  public:
  void clear_drop_mlmd_env_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_mlmd_env_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_mlmd_env_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_mlmd_env_table();
  void set_allocated_drop_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_mlmd_env_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_mlmd_env_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_mlmd_env_table();
  public:
  void unsafe_arena_set_allocated_drop_mlmd_env_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_mlmd_env_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_mlmd_env_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_mlmd_env_table = 61;
  bool has_create_mlmd_env_table() const;
  private:
  bool _internal_has_create_mlmd_env_table() const;
  public:
  void clear_create_mlmd_env_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_mlmd_env_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_mlmd_env_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_mlmd_env_table();
  void set_allocated_create_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_mlmd_env_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_mlmd_env_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_mlmd_env_table();
  public:
  void unsafe_arena_set_allocated_create_mlmd_env_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_mlmd_env_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_mlmd_env_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_mlmd_env_table = 63;
  bool has_check_mlmd_env_table() const;
  private:
  bool _internal_has_check_mlmd_env_table() const;
  public:
  void clear_check_mlmd_env_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_mlmd_env_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_mlmd_env_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_mlmd_env_table();
  void set_allocated_check_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_mlmd_env_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_mlmd_env_table();
  public:
  void unsafe_arena_set_allocated_check_mlmd_env_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_mlmd_env_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_schema_version = 64;
  bool has_update_schema_version() const;
  private:
  bool _internal_has_update_schema_version() const;
  public:
  void clear_update_schema_version();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_schema_version() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_schema_version();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_schema_version();
  void set_allocated_update_schema_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_schema_version);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_schema_version() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_schema_version();
  public:
  void unsafe_arena_set_allocated_update_schema_version(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_schema_version);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_schema_version();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_tables_in_v0_13_2 = 65;
  bool has_check_tables_in_v0_13_2() const;
  private:
  bool _internal_has_check_tables_in_v0_13_2() const;
  public:
  void clear_check_tables_in_v0_13_2();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_tables_in_v0_13_2() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_tables_in_v0_13_2();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_tables_in_v0_13_2();
  void set_allocated_check_tables_in_v0_13_2(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_tables_in_v0_13_2);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_tables_in_v0_13_2() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_tables_in_v0_13_2();
  public:
  void unsafe_arena_set_allocated_check_tables_in_v0_13_2(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_tables_in_v0_13_2);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_tables_in_v0_13_2();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_schema_version = 66;
  bool has_insert_schema_version() const;
  private:
  bool _internal_has_insert_schema_version() const;
  public:
  void clear_insert_schema_version();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_schema_version() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_schema_version();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_schema_version();
  void set_allocated_insert_schema_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_schema_version);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_schema_version() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_schema_version();
  public:
  void unsafe_arena_set_allocated_insert_schema_version(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_schema_version);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_schema_version();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_context_table = 67;
  bool has_drop_context_table() const;
  private:
  bool _internal_has_drop_context_table() const;
  public:
  void clear_drop_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_context_table();
  void set_allocated_drop_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_context_table();
  public:
  void unsafe_arena_set_allocated_drop_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_context_table = 68;
  bool has_create_context_table() const;
  private:
  bool _internal_has_create_context_table() const;
  public:
  void clear_create_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_context_table();
  void set_allocated_create_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_context_table();
  public:
  void unsafe_arena_set_allocated_create_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_context_table = 69;
  bool has_check_context_table() const;
  private:
  bool _internal_has_check_context_table() const;
  public:
  void clear_check_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_context_table();
  void set_allocated_check_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_context_table();
  public:
  void unsafe_arena_set_allocated_check_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context = 70;
  bool has_insert_context() const;
  private:
  bool _internal_has_insert_context() const;
  public:
  void clear_insert_context();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_context() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_context();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_context();
  void set_allocated_insert_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_context() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_context();
  public:
  void unsafe_arena_set_allocated_insert_context(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_context();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_by_id = 71;
  bool has_select_context_by_id() const;
  private:
  bool _internal_has_select_context_by_id() const;
  public:
  void clear_select_context_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_context_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_context_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_context_by_id();
  void set_allocated_select_context_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_context_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_context_by_id();
  public:
  void unsafe_arena_set_allocated_select_context_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_context_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_contexts_by_type_id = 72;
  bool has_select_contexts_by_type_id() const;
  private:
  bool _internal_has_select_contexts_by_type_id() const;
  public:
  void clear_select_contexts_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_contexts_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_contexts_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_contexts_by_type_id();
  void set_allocated_select_contexts_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_contexts_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_contexts_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_contexts_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_contexts_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_context = 73;
  bool has_update_context() const;
  private:
  bool _internal_has_update_context() const;
  public:
  void clear_update_context();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_context() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_context();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_context();
  void set_allocated_update_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_context() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_context();
  public:
  void unsafe_arena_set_allocated_update_context(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_context();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_context_property_table = 74;
  bool has_drop_context_property_table() const;
  private:
  bool _internal_has_drop_context_property_table() const;
  public:
  void clear_drop_context_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_context_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_context_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_context_property_table();
  void set_allocated_drop_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_context_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_context_property_table();
  public:
  void unsafe_arena_set_allocated_drop_context_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_context_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_context_property_table = 75;
  bool has_create_context_property_table() const;
  private:
  bool _internal_has_create_context_property_table() const;
  public:
  void clear_create_context_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_context_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_context_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_context_property_table();
  void set_allocated_create_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_context_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_context_property_table();
  public:
  void unsafe_arena_set_allocated_create_context_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_context_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_context_property_table = 76;
  bool has_check_context_property_table() const;
  private:
  bool _internal_has_check_context_property_table() const;
  public:
  void clear_check_context_property_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_context_property_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_context_property_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_context_property_table();
  void set_allocated_check_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_property_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_context_property_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_context_property_table();
  public:
  void unsafe_arena_set_allocated_check_context_property_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_property_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_context_property_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context_property = 77;
  bool has_insert_context_property() const;
  private:
  bool _internal_has_insert_context_property() const;
  public:
  void clear_insert_context_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_context_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_context_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_context_property();
  void set_allocated_insert_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_context_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_context_property();
  public:
  void unsafe_arena_set_allocated_insert_context_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_context_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_property_by_context_id = 78;
  bool has_select_context_property_by_context_id() const;
  private:
  bool _internal_has_select_context_property_by_context_id() const;
  public:
  void clear_select_context_property_by_context_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_context_property_by_context_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_context_property_by_context_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_context_property_by_context_id();
  void set_allocated_select_context_property_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_property_by_context_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_context_property_by_context_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_context_property_by_context_id();
  public:
  void unsafe_arena_set_allocated_select_context_property_by_context_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_property_by_context_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_context_property_by_context_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_context_property = 79;
  bool has_update_context_property() const;
  private:
  bool _internal_has_update_context_property() const;
  public:
  void clear_update_context_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_context_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_context_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_context_property();
  void set_allocated_update_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_context_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_context_property();
  public:
  void unsafe_arena_set_allocated_update_context_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_context_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_context_property = 80;
  bool has_delete_context_property() const;
  private:
  bool _internal_has_delete_context_property() const;
  public:
  void clear_delete_context_property();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_context_property() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_context_property();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_context_property();
  void set_allocated_delete_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_context_property);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_context_property() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_context_property();
  public:
  void unsafe_arena_set_allocated_delete_context_property(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_context_property);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_context_property();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_association_table = 81;
  bool has_drop_association_table() const;
  private:
  bool _internal_has_drop_association_table() const;
  public:
  void clear_drop_association_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_association_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_association_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_association_table();
  void set_allocated_drop_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_association_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_association_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_association_table();
  public:
  void unsafe_arena_set_allocated_drop_association_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_association_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_association_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_association_table = 82;
  bool has_create_association_table() const;
  private:
  bool _internal_has_create_association_table() const;
  public:
  void clear_create_association_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_association_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_association_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_association_table();
  void set_allocated_create_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_association_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_association_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_association_table();
  public:
  void unsafe_arena_set_allocated_create_association_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_association_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_association_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_association_table = 83;
  bool has_check_association_table() const;
  private:
  bool _internal_has_check_association_table() const;
  public:
  void clear_check_association_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_association_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_association_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_association_table();
  void set_allocated_check_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_association_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_association_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_association_table();
  public:
  void unsafe_arena_set_allocated_check_association_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_association_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_association_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_association = 84;
  bool has_insert_association() const;
  private:
  bool _internal_has_insert_association() const;
  public:
  void clear_insert_association();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_association() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_association();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_association();
  void set_allocated_insert_association(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_association);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_association() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_association();
  public:
  void unsafe_arena_set_allocated_insert_association(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_association);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_association();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_association_by_context_id = 85;
  bool has_select_association_by_context_id() const;
  private:
  bool _internal_has_select_association_by_context_id() const;
  public:
  void clear_select_association_by_context_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_association_by_context_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_association_by_context_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_association_by_context_id();
  void set_allocated_select_association_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_association_by_context_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_association_by_context_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_association_by_context_id();
  public:
  void unsafe_arena_set_allocated_select_association_by_context_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_association_by_context_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_association_by_context_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_attribution_table = 87;
  bool has_drop_attribution_table() const;
  private:
  bool _internal_has_drop_attribution_table() const;
  public:
  void clear_drop_attribution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_attribution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_attribution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_attribution_table();
  void set_allocated_drop_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_attribution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_attribution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_attribution_table();
  public:
  void unsafe_arena_set_allocated_drop_attribution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_attribution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_attribution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_attribution_table = 88;
  bool has_create_attribution_table() const;
  private:
  bool _internal_has_create_attribution_table() const;
  public:
  void clear_create_attribution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_attribution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_attribution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_attribution_table();
  void set_allocated_create_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_attribution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_attribution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_attribution_table();
  public:
  void unsafe_arena_set_allocated_create_attribution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_attribution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_attribution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_attribution_table = 89;
  bool has_check_attribution_table() const;
  private:
  bool _internal_has_check_attribution_table() const;
  public:
  void clear_check_attribution_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_attribution_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_attribution_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_attribution_table();
  void set_allocated_check_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_attribution_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_attribution_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_attribution_table();
  public:
  void unsafe_arena_set_allocated_check_attribution_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_attribution_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_attribution_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_attribution = 90;
  bool has_insert_attribution() const;
  private:
  bool _internal_has_insert_attribution() const;
  public:
  void clear_insert_attribution();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_attribution() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_attribution();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_attribution();
  void set_allocated_insert_attribution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_attribution);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_attribution() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_attribution();
  public:
  void unsafe_arena_set_allocated_insert_attribution(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_attribution);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_attribution();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_attribution_by_context_id = 91;
  bool has_select_attribution_by_context_id() const;
  private:
  bool _internal_has_select_attribution_by_context_id() const;
  public:
  void clear_select_attribution_by_context_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_attribution_by_context_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_attribution_by_context_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_attribution_by_context_id();
  void set_allocated_select_attribution_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attribution_by_context_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_attribution_by_context_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_attribution_by_context_id();
  public:
  void unsafe_arena_set_allocated_select_attribution_by_context_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attribution_by_context_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_attribution_by_context_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_by_type_id_and_name = 93;
  bool has_select_context_by_type_id_and_name() const;
  private:
  bool _internal_has_select_context_by_type_id_and_name() const;
  public:
  void clear_select_context_by_type_id_and_name();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_context_by_type_id_and_name() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_context_by_type_id_and_name();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_context_by_type_id_and_name();
  void set_allocated_select_context_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_type_id_and_name);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_context_by_type_id_and_name() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_context_by_type_id_and_name();
  public:
  void unsafe_arena_set_allocated_select_context_by_type_id_and_name(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_type_id_and_name);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_context_by_type_id_and_name();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_by_type_id_and_name = 94;
  bool has_select_artifact_by_type_id_and_name() const;
  private:
  bool _internal_has_select_artifact_by_type_id_and_name() const;
  public:
  void clear_select_artifact_by_type_id_and_name();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifact_by_type_id_and_name() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifact_by_type_id_and_name();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifact_by_type_id_and_name();
  void set_allocated_select_artifact_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_type_id_and_name);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifact_by_type_id_and_name() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifact_by_type_id_and_name();
  public:
  void unsafe_arena_set_allocated_select_artifact_by_type_id_and_name(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_type_id_and_name);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifact_by_type_id_and_name();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_by_type_id_and_name = 95;
  bool has_select_execution_by_type_id_and_name() const;
  private:
  bool _internal_has_select_execution_by_type_id_and_name() const;
  public:
  void clear_select_execution_by_type_id_and_name();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_execution_by_type_id_and_name() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_execution_by_type_id_and_name();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_execution_by_type_id_and_name();
  void set_allocated_select_execution_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_type_id_and_name);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_execution_by_type_id_and_name() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_execution_by_type_id_and_name();
  public:
  void unsafe_arena_set_allocated_select_execution_by_type_id_and_name(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_type_id_and_name);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_execution_by_type_id_and_name();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_by_artifact_ids = 96;
  bool has_select_event_by_artifact_ids() const;
  private:
  bool _internal_has_select_event_by_artifact_ids() const;
  public:
  void clear_select_event_by_artifact_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_event_by_artifact_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_event_by_artifact_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_event_by_artifact_ids();
  void set_allocated_select_event_by_artifact_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_artifact_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_event_by_artifact_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_event_by_artifact_ids();
  public:
  void unsafe_arena_set_allocated_select_event_by_artifact_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_artifact_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_event_by_artifact_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_by_execution_ids = 97;
  bool has_select_event_by_execution_ids() const;
  private:
  bool _internal_has_select_event_by_execution_ids() const;
  public:
  void clear_select_event_by_execution_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_event_by_execution_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_event_by_execution_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_event_by_execution_ids();
  void set_allocated_select_event_by_execution_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_execution_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_event_by_execution_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_event_by_execution_ids();
  public:
  void unsafe_arena_set_allocated_select_event_by_execution_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_execution_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_event_by_execution_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_path_by_event_ids = 98;
  bool has_select_event_path_by_event_ids() const;
  private:
  bool _internal_has_select_event_path_by_event_ids() const;
  public:
  void clear_select_event_path_by_event_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_event_path_by_event_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_event_path_by_event_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_event_path_by_event_ids();
  void set_allocated_select_event_path_by_event_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_path_by_event_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_event_path_by_event_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_event_path_by_event_ids();
  public:
  void unsafe_arena_set_allocated_select_event_path_by_event_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_path_by_event_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_event_path_by_event_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_parent_type_table = 99;
  bool has_drop_parent_type_table() const;
  private:
  bool _internal_has_drop_parent_type_table() const;
  public:
  void clear_drop_parent_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_parent_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_parent_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_parent_type_table();
  void set_allocated_drop_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_parent_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_parent_type_table();
  public:
  void unsafe_arena_set_allocated_drop_parent_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_parent_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_parent_type_table = 100;
  bool has_create_parent_type_table() const;
  private:
  bool _internal_has_create_parent_type_table() const;
  public:
  void clear_create_parent_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_parent_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_parent_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_parent_type_table();
  void set_allocated_create_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_parent_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_parent_type_table();
  public:
  void unsafe_arena_set_allocated_create_parent_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_parent_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_parent_type_table = 101;
  bool has_check_parent_type_table() const;
  private:
  bool _internal_has_check_parent_type_table() const;
  public:
  void clear_check_parent_type_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_parent_type_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_parent_type_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_parent_type_table();
  void set_allocated_check_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_type_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_parent_type_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_parent_type_table();
  public:
  void unsafe_arena_set_allocated_check_parent_type_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_type_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_parent_type_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_parent_context_table = 102;
  bool has_drop_parent_context_table() const;
  private:
  bool _internal_has_drop_parent_context_table() const;
  public:
  void clear_drop_parent_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& drop_parent_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_drop_parent_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_drop_parent_context_table();
  void set_allocated_drop_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_drop_parent_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_drop_parent_context_table();
  public:
  void unsafe_arena_set_allocated_drop_parent_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_drop_parent_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_parent_context_table = 103;
  bool has_create_parent_context_table() const;
  private:
  bool _internal_has_create_parent_context_table() const;
  public:
  void clear_create_parent_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& create_parent_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_create_parent_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_create_parent_context_table();
  void set_allocated_create_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_create_parent_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_create_parent_context_table();
  public:
  void unsafe_arena_set_allocated_create_parent_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_create_parent_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_parent_context_table = 104;
  bool has_check_parent_context_table() const;
  private:
  bool _internal_has_check_parent_context_table() const;
  public:
  void clear_check_parent_context_table();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_parent_context_table() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_parent_context_table();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_parent_context_table();
  void set_allocated_check_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_context_table);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_parent_context_table() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_parent_context_table();
  public:
  void unsafe_arena_set_allocated_check_parent_context_table(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_context_table);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_parent_context_table();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_parent_context = 106;
  bool has_insert_parent_context() const;
  private:
  bool _internal_has_insert_parent_context() const;
  public:
  void clear_insert_parent_context();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_parent_context() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_parent_context();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_parent_context();
  void set_allocated_insert_parent_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_context);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_parent_context() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_parent_context();
  public:
  void unsafe_arena_set_allocated_insert_parent_context(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_context);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_parent_context();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_context_by_context_id = 107;
  bool has_select_parent_context_by_context_id() const;
  private:
  bool _internal_has_select_parent_context_by_context_id() const;
  public:
  void clear_select_parent_context_by_context_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_parent_context_by_context_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_parent_context_by_context_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_parent_context_by_context_id();
  void set_allocated_select_parent_context_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_context_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_parent_context_by_context_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_parent_context_by_context_id();
  public:
  void unsafe_arena_set_allocated_select_parent_context_by_context_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_context_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_parent_context_by_context_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_context_by_parent_context_id = 108;
  bool has_select_parent_context_by_parent_context_id() const;
  private:
  bool _internal_has_select_parent_context_by_parent_context_id() const;
  public:
  void clear_select_parent_context_by_parent_context_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_parent_context_by_parent_context_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_parent_context_by_parent_context_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_parent_context_by_parent_context_id();
  void set_allocated_select_parent_context_by_parent_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_parent_context_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_parent_context_by_parent_context_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_parent_context_by_parent_context_id();
  public:
  void unsafe_arena_set_allocated_select_parent_context_by_parent_context_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_parent_context_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_parent_context_by_parent_context_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_parent_type = 109;
  bool has_insert_parent_type() const;
  private:
  bool _internal_has_insert_parent_type() const;
  public:
  void clear_insert_parent_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& insert_parent_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_insert_parent_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_insert_parent_type();
  void set_allocated_insert_parent_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_insert_parent_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_insert_parent_type();
  public:
  void unsafe_arena_set_allocated_insert_parent_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_insert_parent_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_type_by_type_id = 110;
  bool has_select_parent_type_by_type_id() const;
  private:
  bool _internal_has_select_parent_type_by_type_id() const;
  public:
  void clear_select_parent_type_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_parent_type_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_parent_type_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_parent_type_by_type_id();
  void set_allocated_select_parent_type_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_type_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_parent_type_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_parent_type_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_parent_type_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_type_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_parent_type_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_name_and_version = 111;
  bool has_select_type_by_name_and_version() const;
  private:
  bool _internal_has_select_type_by_name_and_version() const;
  public:
  void clear_select_type_by_name_and_version();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_type_by_name_and_version() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_type_by_name_and_version();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_type_by_name_and_version();
  void set_allocated_select_type_by_name_and_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_and_version);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_type_by_name_and_version() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_type_by_name_and_version();
  public:
  void unsafe_arena_set_allocated_select_type_by_name_and_version(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_and_version);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_type_by_name_and_version();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_contexts_by_id = 112;
  bool has_delete_contexts_by_id() const;
  private:
  bool _internal_has_delete_contexts_by_id() const;
  public:
  void clear_delete_contexts_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_contexts_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_contexts_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_contexts_by_id();
  void set_allocated_delete_contexts_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_contexts_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_contexts_by_id();
  public:
  void unsafe_arena_set_allocated_delete_contexts_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_contexts_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_contexts_properties_by_contexts_id = 113;
  bool has_delete_contexts_properties_by_contexts_id() const;
  private:
  bool _internal_has_delete_contexts_properties_by_contexts_id() const;
  public:
  void clear_delete_contexts_properties_by_contexts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_contexts_properties_by_contexts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_contexts_properties_by_contexts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_contexts_properties_by_contexts_id();
  void set_allocated_delete_contexts_properties_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_properties_by_contexts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_contexts_properties_by_contexts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_contexts_properties_by_contexts_id();
  public:
  void unsafe_arena_set_allocated_delete_contexts_properties_by_contexts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_properties_by_contexts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_contexts_properties_by_contexts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_parent_ids = 114;
  bool has_delete_parent_contexts_by_parent_ids() const;
  private:
  bool _internal_has_delete_parent_contexts_by_parent_ids() const;
  public:
  void clear_delete_parent_contexts_by_parent_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_parent_contexts_by_parent_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_parent_contexts_by_parent_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_parent_contexts_by_parent_ids();
  void set_allocated_delete_parent_contexts_by_parent_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_parent_contexts_by_parent_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_parent_contexts_by_parent_ids();
  public:
  void unsafe_arena_set_allocated_delete_parent_contexts_by_parent_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_parent_contexts_by_parent_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_child_ids = 115;
  bool has_delete_parent_contexts_by_child_ids() const;
  private:
  bool _internal_has_delete_parent_contexts_by_child_ids() const;
  public:
  void clear_delete_parent_contexts_by_child_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_parent_contexts_by_child_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_parent_contexts_by_child_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_parent_contexts_by_child_ids();
  void set_allocated_delete_parent_contexts_by_child_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_child_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_parent_contexts_by_child_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_parent_contexts_by_child_ids();
  public:
  void unsafe_arena_set_allocated_delete_parent_contexts_by_child_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_child_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_parent_contexts_by_child_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifacts_by_id = 116;
  bool has_delete_artifacts_by_id() const;
  private:
  bool _internal_has_delete_artifacts_by_id() const;
  public:
  void clear_delete_artifacts_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_artifacts_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_artifacts_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_artifacts_by_id();
  void set_allocated_delete_artifacts_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_artifacts_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_artifacts_by_id();
  public:
  void unsafe_arena_set_allocated_delete_artifacts_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_artifacts_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifacts_properties_by_artifacts_id = 117;
  bool has_delete_artifacts_properties_by_artifacts_id() const;
  private:
  bool _internal_has_delete_artifacts_properties_by_artifacts_id() const;
  public:
  void clear_delete_artifacts_properties_by_artifacts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_artifacts_properties_by_artifacts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_artifacts_properties_by_artifacts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_artifacts_properties_by_artifacts_id();
  void set_allocated_delete_artifacts_properties_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_properties_by_artifacts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_artifacts_properties_by_artifacts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_artifacts_properties_by_artifacts_id();
  public:
  void unsafe_arena_set_allocated_delete_artifacts_properties_by_artifacts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_properties_by_artifacts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_artifacts_properties_by_artifacts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_executions_by_id = 118;
  bool has_delete_executions_by_id() const;
  private:
  bool _internal_has_delete_executions_by_id() const;
  public:
  void clear_delete_executions_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_executions_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_executions_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_executions_by_id();
  void set_allocated_delete_executions_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_executions_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_executions_by_id();
  public:
  void unsafe_arena_set_allocated_delete_executions_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_executions_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_executions_properties_by_executions_id = 119;
  bool has_delete_executions_properties_by_executions_id() const;
  private:
  bool _internal_has_delete_executions_properties_by_executions_id() const;
  public:
  void clear_delete_executions_properties_by_executions_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_executions_properties_by_executions_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_executions_properties_by_executions_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_executions_properties_by_executions_id();
  void set_allocated_delete_executions_properties_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_properties_by_executions_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_executions_properties_by_executions_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_executions_properties_by_executions_id();
  public:
  void unsafe_arena_set_allocated_delete_executions_properties_by_executions_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_properties_by_executions_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_executions_properties_by_executions_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_events_by_artifacts_id = 120;
  bool has_delete_events_by_artifacts_id() const;
  private:
  bool _internal_has_delete_events_by_artifacts_id() const;
  public:
  void clear_delete_events_by_artifacts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_events_by_artifacts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_events_by_artifacts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_events_by_artifacts_id();
  void set_allocated_delete_events_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_artifacts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_events_by_artifacts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_events_by_artifacts_id();
  public:
  void unsafe_arena_set_allocated_delete_events_by_artifacts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_artifacts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_events_by_artifacts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_events_by_executions_id = 121;
  bool has_delete_events_by_executions_id() const;
  private:
  bool _internal_has_delete_events_by_executions_id() const;
  public:
  void clear_delete_events_by_executions_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_events_by_executions_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_events_by_executions_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_events_by_executions_id();
  void set_allocated_delete_events_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_executions_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_events_by_executions_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_events_by_executions_id();
  public:
  void unsafe_arena_set_allocated_delete_events_by_executions_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_executions_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_events_by_executions_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_associations_by_contexts_id = 122;
  bool has_delete_associations_by_contexts_id() const;
  private:
  bool _internal_has_delete_associations_by_contexts_id() const;
  public:
  void clear_delete_associations_by_contexts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_associations_by_contexts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_associations_by_contexts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_associations_by_contexts_id();
  void set_allocated_delete_associations_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_contexts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_associations_by_contexts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_associations_by_contexts_id();
  public:
  void unsafe_arena_set_allocated_delete_associations_by_contexts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_contexts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_associations_by_contexts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_associations_by_executions_id = 123;
  bool has_delete_associations_by_executions_id() const;
  private:
  bool _internal_has_delete_associations_by_executions_id() const;
  public:
  void clear_delete_associations_by_executions_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_associations_by_executions_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_associations_by_executions_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_associations_by_executions_id();
  void set_allocated_delete_associations_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_executions_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_associations_by_executions_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_associations_by_executions_id();
  public:
  void unsafe_arena_set_allocated_delete_associations_by_executions_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_executions_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_associations_by_executions_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_attributions_by_contexts_id = 124;
  bool has_delete_attributions_by_contexts_id() const;
  private:
  bool _internal_has_delete_attributions_by_contexts_id() const;
  public:
  void clear_delete_attributions_by_contexts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_attributions_by_contexts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_attributions_by_contexts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_attributions_by_contexts_id();
  void set_allocated_delete_attributions_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_contexts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_attributions_by_contexts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_attributions_by_contexts_id();
  public:
  void unsafe_arena_set_allocated_delete_attributions_by_contexts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_contexts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_attributions_by_contexts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_attributions_by_artifacts_id = 125;
  bool has_delete_attributions_by_artifacts_id() const;
  private:
  bool _internal_has_delete_attributions_by_artifacts_id() const;
  public:
  void clear_delete_attributions_by_artifacts_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_attributions_by_artifacts_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_attributions_by_artifacts_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_attributions_by_artifacts_id();
  void set_allocated_delete_attributions_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_artifacts_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_attributions_by_artifacts_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_attributions_by_artifacts_id();
  public:
  void unsafe_arena_set_allocated_delete_attributions_by_artifacts_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_artifacts_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_attributions_by_artifacts_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_event_paths = 126;
  bool has_delete_event_paths() const;
  private:
  bool _internal_has_delete_event_paths() const;
  public:
  void clear_delete_event_paths();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_event_paths() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_event_paths();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_event_paths();
  void set_allocated_delete_event_paths(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_event_paths);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_event_paths() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_event_paths();
  public:
  void unsafe_arena_set_allocated_delete_event_paths(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_event_paths);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_event_paths();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_type = 127;
  bool has_delete_parent_type() const;
  private:
  bool _internal_has_delete_parent_type() const;
  public:
  void clear_delete_parent_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_parent_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_parent_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_parent_type();
  void set_allocated_delete_parent_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_parent_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_parent_type();
  public:
  void unsafe_arena_set_allocated_delete_parent_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_parent_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_id = 128;
  bool has_select_types_by_id() const;
  private:
  bool _internal_has_select_types_by_id() const;
  public:
  void clear_select_types_by_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_types_by_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_types_by_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_types_by_id();
  void set_allocated_select_types_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_types_by_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_types_by_id();
  public:
  void unsafe_arena_set_allocated_select_types_by_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_types_by_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_properties_by_type_id = 129;
  bool has_select_properties_by_type_id() const;
  private:
  bool _internal_has_select_properties_by_type_id() const;
  public:
  void clear_select_properties_by_type_id();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_properties_by_type_id() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_properties_by_type_id();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_properties_by_type_id();
  void set_allocated_select_properties_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_properties_by_type_id);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_properties_by_type_id() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_properties_by_type_id();
  public:
  void unsafe_arena_set_allocated_select_properties_by_type_id(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_properties_by_type_id);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_properties_by_type_id();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_external_ids = 130;
  bool has_select_artifacts_by_external_ids() const;
  private:
  bool _internal_has_select_artifacts_by_external_ids() const;
  public:
  void clear_select_artifacts_by_external_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_artifacts_by_external_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_artifacts_by_external_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_artifacts_by_external_ids();
  void set_allocated_select_artifacts_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_external_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_artifacts_by_external_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_artifacts_by_external_ids();
  public:
  void unsafe_arena_set_allocated_select_artifacts_by_external_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_external_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_artifacts_by_external_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_parent_id_and_child_ids = 131;
  bool has_delete_parent_contexts_by_parent_id_and_child_ids() const;
  private:
  bool _internal_has_delete_parent_contexts_by_parent_id_and_child_ids() const;
  public:
  void clear_delete_parent_contexts_by_parent_id_and_child_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& delete_parent_contexts_by_parent_id_and_child_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_delete_parent_contexts_by_parent_id_and_child_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_delete_parent_contexts_by_parent_id_and_child_ids();
  void set_allocated_delete_parent_contexts_by_parent_id_and_child_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_id_and_child_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_delete_parent_contexts_by_parent_id_and_child_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_delete_parent_contexts_by_parent_id_and_child_ids();
  public:
  void unsafe_arena_set_allocated_delete_parent_contexts_by_parent_id_and_child_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_id_and_child_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_delete_parent_contexts_by_parent_id_and_child_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_executions_by_external_ids = 132;
  bool has_select_executions_by_external_ids() const;
  private:
  bool _internal_has_select_executions_by_external_ids() const;
  public:
  void clear_select_executions_by_external_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_executions_by_external_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_executions_by_external_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_executions_by_external_ids();
  void set_allocated_select_executions_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_external_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_executions_by_external_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_executions_by_external_ids();
  public:
  void unsafe_arena_set_allocated_select_executions_by_external_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_external_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_executions_by_external_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_contexts_by_external_ids = 133;
  bool has_select_contexts_by_external_ids() const;
  private:
  bool _internal_has_select_contexts_by_external_ids() const;
  public:
  void clear_select_contexts_by_external_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_contexts_by_external_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_contexts_by_external_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_contexts_by_external_ids();
  void set_allocated_select_contexts_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_external_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_contexts_by_external_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_contexts_by_external_ids();
  public:
  void unsafe_arena_set_allocated_select_contexts_by_external_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_external_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_contexts_by_external_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_external_ids = 134;
  bool has_select_types_by_external_ids() const;
  private:
  bool _internal_has_select_types_by_external_ids() const;
  public:
  void clear_select_types_by_external_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_types_by_external_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_types_by_external_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_types_by_external_ids();
  void set_allocated_select_types_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_external_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_types_by_external_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_types_by_external_ids();
  public:
  void unsafe_arena_set_allocated_select_types_by_external_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_external_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_types_by_external_ids();

  // .google.protobuf.Any metadata_source_type_specific_options = 135;
  bool has_metadata_source_type_specific_options() const;
  private:
  bool _internal_has_metadata_source_type_specific_options() const;
  public:
  void clear_metadata_source_type_specific_options();
  const ::PROTOBUF_NAMESPACE_ID::Any& metadata_source_type_specific_options() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_metadata_source_type_specific_options();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_metadata_source_type_specific_options();
  void set_allocated_metadata_source_type_specific_options(::PROTOBUF_NAMESPACE_ID::Any* metadata_source_type_specific_options);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_metadata_source_type_specific_options() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_metadata_source_type_specific_options();
  public:
  void unsafe_arena_set_allocated_metadata_source_type_specific_options(
      ::PROTOBUF_NAMESPACE_ID::Any* metadata_source_type_specific_options);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_metadata_source_type_specific_options();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_names = 136;
  bool has_select_types_by_names() const;
  private:
  bool _internal_has_select_types_by_names() const;
  public:
  void clear_select_types_by_names();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_types_by_names() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_types_by_names();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_types_by_names();
  void set_allocated_select_types_by_names(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_types_by_names() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_types_by_names();
  public:
  void unsafe_arena_set_allocated_select_types_by_names(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_types_by_names();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_names_and_versions = 137;
  bool has_select_types_by_names_and_versions() const;
  private:
  bool _internal_has_select_types_by_names_and_versions() const;
  public:
  void clear_select_types_by_names_and_versions();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_types_by_names_and_versions() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_types_by_names_and_versions();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_types_by_names_and_versions();
  void set_allocated_select_types_by_names_and_versions(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_and_versions);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_types_by_names_and_versions() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_types_by_names_and_versions();
  public:
  void unsafe_arena_set_allocated_select_types_by_names_and_versions(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_and_versions);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_types_by_names_and_versions();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_type = 138;
  bool has_update_type() const;
  private:
  bool _internal_has_update_type() const;
  public:
  void clear_update_type();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& update_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_update_type();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_update_type();
  void set_allocated_update_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_type);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_update_type() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_update_type();
  public:
  void unsafe_arena_set_allocated_update_type(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_type);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_update_type();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_contexts_by_context_ids = 139;
  bool has_select_parent_contexts_by_context_ids() const;
  private:
  bool _internal_has_select_parent_contexts_by_context_ids() const;
  public:
  void clear_select_parent_contexts_by_context_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_parent_contexts_by_context_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_parent_contexts_by_context_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_parent_contexts_by_context_ids();
  void set_allocated_select_parent_contexts_by_context_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_context_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_parent_contexts_by_context_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_parent_contexts_by_context_ids();
  public:
  void unsafe_arena_set_allocated_select_parent_contexts_by_context_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_context_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_parent_contexts_by_context_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_contexts_by_parent_context_ids = 140;
  bool has_select_parent_contexts_by_parent_context_ids() const;
  private:
  bool _internal_has_select_parent_contexts_by_parent_context_ids() const;
  public:
  void clear_select_parent_contexts_by_parent_context_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_parent_contexts_by_parent_context_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_parent_contexts_by_parent_context_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_parent_contexts_by_parent_context_ids();
  void set_allocated_select_parent_contexts_by_parent_context_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_parent_context_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_parent_contexts_by_parent_context_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_parent_contexts_by_parent_context_ids();
  public:
  void unsafe_arena_set_allocated_select_parent_contexts_by_parent_context_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_parent_context_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_parent_contexts_by_parent_context_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_mlmd_env_table_existence = 141;
  bool has_check_mlmd_env_table_existence() const;
  private:
  bool _internal_has_check_mlmd_env_table_existence() const;
  public:
  void clear_check_mlmd_env_table_existence();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& check_mlmd_env_table_existence() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_check_mlmd_env_table_existence();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_check_mlmd_env_table_existence();
  void set_allocated_check_mlmd_env_table_existence(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_existence);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_check_mlmd_env_table_existence() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_check_mlmd_env_table_existence();
  public:
  void unsafe_arena_set_allocated_check_mlmd_env_table_existence(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_existence);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_check_mlmd_env_table_existence();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_associations_by_execution_ids = 142;
  bool has_select_associations_by_execution_ids() const;
  private:
  bool _internal_has_select_associations_by_execution_ids() const;
  public:
  void clear_select_associations_by_execution_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_associations_by_execution_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_associations_by_execution_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_associations_by_execution_ids();
  void set_allocated_select_associations_by_execution_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_associations_by_execution_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_associations_by_execution_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_associations_by_execution_ids();
  public:
  void unsafe_arena_set_allocated_select_associations_by_execution_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_associations_by_execution_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_associations_by_execution_ids();

  // .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_attributions_by_artifact_ids = 143;
  bool has_select_attributions_by_artifact_ids() const;
  private:
  bool _internal_has_select_attributions_by_artifact_ids() const;
  public:
  void clear_select_attributions_by_artifact_ids();
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& select_attributions_by_artifact_ids() const;
  PROTOBUF_NODISCARD ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* release_select_attributions_by_artifact_ids();
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* mutable_select_attributions_by_artifact_ids();
  void set_allocated_select_attributions_by_artifact_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attributions_by_artifact_ids);
  private:
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& _internal_select_attributions_by_artifact_ids() const;
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _internal_mutable_select_attributions_by_artifact_ids();
  public:
  void unsafe_arena_set_allocated_select_attributions_by_artifact_ids(
      ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attributions_by_artifact_ids);
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* unsafe_arena_release_select_attributions_by_artifact_ids();

  // int64 schema_version = 59;
  void clear_schema_version();
  int64_t schema_version() const;
  void set_schema_version(int64_t value);
  private:
  int64_t _internal_schema_version() const;
  void _internal_set_schema_version(int64_t value);
  public:

  // .ml_metadata.MetadataSourceType metadata_source_type = 1;
  void clear_metadata_source_type();
  ::ml_metadata::MetadataSourceType metadata_source_type() const;
  void set_metadata_source_type(::ml_metadata::MetadataSourceType value);
  private:
  ::ml_metadata::MetadataSourceType _internal_metadata_source_type() const;
  void _internal_set_metadata_source_type(::ml_metadata::MetadataSourceType value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.MetadataSourceQueryConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        MetadataSourceQueryConfig_MigrationSchemesEntry_DoNotUse,
        int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> migration_schemes_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery > secondary_indices_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_type_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_property_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_last_insert_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_property_by_artifact_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifact_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_property_by_execution_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_execution_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_path_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_path_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_path_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_path_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_uri_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_all_types_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_mlmd_env_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_mlmd_env_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_schema_version_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_tables_in_v0_13_2_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_schema_version_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_property_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_property_by_context_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_context_property_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_association_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_association_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_association_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_association_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_association_by_context_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_attribution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_attribution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_attribution_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_attribution_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attribution_by_context_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_type_id_and_name_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_type_id_and_name_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_type_id_and_name_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_artifact_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_execution_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_path_by_event_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_type_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_context_table_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_context_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_context_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_parent_context_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_type_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_and_version_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_properties_by_contexts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_child_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_properties_by_artifacts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_properties_by_executions_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_artifacts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_executions_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_contexts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_executions_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_contexts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_artifacts_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_event_paths_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_properties_by_type_id_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_external_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_id_and_child_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_external_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_external_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_external_ids_;
    ::PROTOBUF_NAMESPACE_ID::Any* metadata_source_type_specific_options_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_and_versions_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_type_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_context_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_parent_context_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_existence_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_associations_by_execution_ids_;
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attributions_by_artifact_ids_;
    int64_t schema_version_;
    int metadata_source_type_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// -------------------------------------------------------------------

class MySQLSourceErrorInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.MySQLSourceErrorInfo) */ {
 public:
  inline MySQLSourceErrorInfo() : MySQLSourceErrorInfo(nullptr) {}
  ~MySQLSourceErrorInfo() override;
  explicit PROTOBUF_CONSTEXPR MySQLSourceErrorInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MySQLSourceErrorInfo(const MySQLSourceErrorInfo& from);
  MySQLSourceErrorInfo(MySQLSourceErrorInfo&& from) noexcept
    : MySQLSourceErrorInfo() {
    *this = ::std::move(from);
  }

  inline MySQLSourceErrorInfo& operator=(const MySQLSourceErrorInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MySQLSourceErrorInfo& operator=(MySQLSourceErrorInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MySQLSourceErrorInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const MySQLSourceErrorInfo* internal_default_instance() {
    return reinterpret_cast<const MySQLSourceErrorInfo*>(
               &_MySQLSourceErrorInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MySQLSourceErrorInfo& a, MySQLSourceErrorInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(MySQLSourceErrorInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MySQLSourceErrorInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MySQLSourceErrorInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MySQLSourceErrorInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MySQLSourceErrorInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MySQLSourceErrorInfo& from) {
    MySQLSourceErrorInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MySQLSourceErrorInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.MySQLSourceErrorInfo";
  }
  protected:
  explicit MySQLSourceErrorInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMysqlErrorCodeFieldNumber = 1,
  };
  // int64 mysql_error_code = 1;
  void clear_mysql_error_code();
  int64_t mysql_error_code() const;
  void set_mysql_error_code(int64_t value);
  private:
  int64_t _internal_mysql_error_code() const;
  void _internal_set_mysql_error_code(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.MySQLSourceErrorInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t mysql_error_code_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RecordSet_Record

// repeated string values = 1;
inline int RecordSet_Record::_internal_values_size() const {
  return _impl_.values_.size();
}
inline int RecordSet_Record::values_size() const {
  return _internal_values_size();
}
inline void RecordSet_Record::clear_values() {
  _impl_.values_.Clear();
}
inline std::string* RecordSet_Record::add_values() {
  std::string* _s = _internal_add_values();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.RecordSet.Record.values)
  return _s;
}
inline const std::string& RecordSet_Record::_internal_values(int index) const {
  return _impl_.values_.Get(index);
}
inline const std::string& RecordSet_Record::values(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.RecordSet.Record.values)
  return _internal_values(index);
}
inline std::string* RecordSet_Record::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.RecordSet.Record.values)
  return _impl_.values_.Mutable(index);
}
inline void RecordSet_Record::set_values(int index, const std::string& value) {
  _impl_.values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::set_values(int index, std::string&& value) {
  _impl_.values_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::set_values(int index, const char* value, size_t size) {
  _impl_.values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.RecordSet.Record.values)
}
inline std::string* RecordSet_Record::_internal_add_values() {
  return _impl_.values_.Add();
}
inline void RecordSet_Record::add_values(const std::string& value) {
  _impl_.values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::add_values(std::string&& value) {
  _impl_.values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::add_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.RecordSet.Record.values)
}
inline void RecordSet_Record::add_values(const char* value, size_t size) {
  _impl_.values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.RecordSet.Record.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
RecordSet_Record::values() const {
  // @@protoc_insertion_point(field_list:ml_metadata.RecordSet.Record.values)
  return _impl_.values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
RecordSet_Record::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.RecordSet.Record.values)
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// RecordSet

// repeated string column_names = 1;
inline int RecordSet::_internal_column_names_size() const {
  return _impl_.column_names_.size();
}
inline int RecordSet::column_names_size() const {
  return _internal_column_names_size();
}
inline void RecordSet::clear_column_names() {
  _impl_.column_names_.Clear();
}
inline std::string* RecordSet::add_column_names() {
  std::string* _s = _internal_add_column_names();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.RecordSet.column_names)
  return _s;
}
inline const std::string& RecordSet::_internal_column_names(int index) const {
  return _impl_.column_names_.Get(index);
}
inline const std::string& RecordSet::column_names(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.RecordSet.column_names)
  return _internal_column_names(index);
}
inline std::string* RecordSet::mutable_column_names(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.RecordSet.column_names)
  return _impl_.column_names_.Mutable(index);
}
inline void RecordSet::set_column_names(int index, const std::string& value) {
  _impl_.column_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::set_column_names(int index, std::string&& value) {
  _impl_.column_names_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::set_column_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.column_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::set_column_names(int index, const char* value, size_t size) {
  _impl_.column_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.RecordSet.column_names)
}
inline std::string* RecordSet::_internal_add_column_names() {
  return _impl_.column_names_.Add();
}
inline void RecordSet::add_column_names(const std::string& value) {
  _impl_.column_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::add_column_names(std::string&& value) {
  _impl_.column_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::add_column_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.column_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.RecordSet.column_names)
}
inline void RecordSet::add_column_names(const char* value, size_t size) {
  _impl_.column_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.RecordSet.column_names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
RecordSet::column_names() const {
  // @@protoc_insertion_point(field_list:ml_metadata.RecordSet.column_names)
  return _impl_.column_names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
RecordSet::mutable_column_names() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.RecordSet.column_names)
  return &_impl_.column_names_;
}

// repeated .ml_metadata.RecordSet.Record records = 2;
inline int RecordSet::_internal_records_size() const {
  return _impl_.records_.size();
}
inline int RecordSet::records_size() const {
  return _internal_records_size();
}
inline void RecordSet::clear_records() {
  _impl_.records_.Clear();
}
inline ::ml_metadata::RecordSet_Record* RecordSet::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.RecordSet.records)
  return _impl_.records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::RecordSet_Record >*
RecordSet::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.RecordSet.records)
  return &_impl_.records_;
}
inline const ::ml_metadata::RecordSet_Record& RecordSet::_internal_records(int index) const {
  return _impl_.records_.Get(index);
}
inline const ::ml_metadata::RecordSet_Record& RecordSet::records(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.RecordSet.records)
  return _internal_records(index);
}
inline ::ml_metadata::RecordSet_Record* RecordSet::_internal_add_records() {
  return _impl_.records_.Add();
}
inline ::ml_metadata::RecordSet_Record* RecordSet::add_records() {
  ::ml_metadata::RecordSet_Record* _add = _internal_add_records();
  // @@protoc_insertion_point(field_add:ml_metadata.RecordSet.records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::RecordSet_Record >&
RecordSet::records() const {
  // @@protoc_insertion_point(field_list:ml_metadata.RecordSet.records)
  return _impl_.records_;
}

// -------------------------------------------------------------------

// MetadataSourceQueryConfig_TemplateQuery

// string query = 1;
inline void MetadataSourceQueryConfig_TemplateQuery::clear_query() {
  _impl_.query_.ClearToEmpty();
}
inline const std::string& MetadataSourceQueryConfig_TemplateQuery::query() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.query)
  return _internal_query();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MetadataSourceQueryConfig_TemplateQuery::set_query(ArgT0&& arg0, ArgT... args) {
 
 _impl_.query_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.query)
}
inline std::string* MetadataSourceQueryConfig_TemplateQuery::mutable_query() {
  std::string* _s = _internal_mutable_query();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.query)
  return _s;
}
inline const std::string& MetadataSourceQueryConfig_TemplateQuery::_internal_query() const {
  return _impl_.query_.Get();
}
inline void MetadataSourceQueryConfig_TemplateQuery::_internal_set_query(const std::string& value) {
  
  _impl_.query_.Set(value, GetArenaForAllocation());
}
inline std::string* MetadataSourceQueryConfig_TemplateQuery::_internal_mutable_query() {
  
  return _impl_.query_.Mutable(GetArenaForAllocation());
}
inline std::string* MetadataSourceQueryConfig_TemplateQuery::release_query() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.query)
  return _impl_.query_.Release();
}
inline void MetadataSourceQueryConfig_TemplateQuery::set_allocated_query(std::string* query) {
  if (query != nullptr) {
    
  } else {
    
  }
  _impl_.query_.SetAllocated(query, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.query_.IsDefault()) {
    _impl_.query_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.query)
}

// int32 parameter_num = 2;
inline void MetadataSourceQueryConfig_TemplateQuery::clear_parameter_num() {
  _impl_.parameter_num_ = 0;
}
inline int32_t MetadataSourceQueryConfig_TemplateQuery::_internal_parameter_num() const {
  return _impl_.parameter_num_;
}
inline int32_t MetadataSourceQueryConfig_TemplateQuery::parameter_num() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.parameter_num)
  return _internal_parameter_num();
}
inline void MetadataSourceQueryConfig_TemplateQuery::_internal_set_parameter_num(int32_t value) {
  
  _impl_.parameter_num_ = value;
}
inline void MetadataSourceQueryConfig_TemplateQuery::set_parameter_num(int32_t value) {
  _internal_set_parameter_num(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.TemplateQuery.parameter_num)
}

// -------------------------------------------------------------------

// MetadataSourceQueryConfig_DbVerification

// int32 total_num_tables = 1;
inline void MetadataSourceQueryConfig_DbVerification::clear_total_num_tables() {
  _impl_.total_num_tables_ = 0;
}
inline int32_t MetadataSourceQueryConfig_DbVerification::_internal_total_num_tables() const {
  return _impl_.total_num_tables_;
}
inline int32_t MetadataSourceQueryConfig_DbVerification::total_num_tables() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.DbVerification.total_num_tables)
  return _internal_total_num_tables();
}
inline void MetadataSourceQueryConfig_DbVerification::_internal_set_total_num_tables(int32_t value) {
  
  _impl_.total_num_tables_ = value;
}
inline void MetadataSourceQueryConfig_DbVerification::set_total_num_tables(int32_t value) {
  _internal_set_total_num_tables(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.DbVerification.total_num_tables)
}

// int32 total_num_indexes = 2;
inline void MetadataSourceQueryConfig_DbVerification::clear_total_num_indexes() {
  _impl_.total_num_indexes_ = 0;
}
inline int32_t MetadataSourceQueryConfig_DbVerification::_internal_total_num_indexes() const {
  return _impl_.total_num_indexes_;
}
inline int32_t MetadataSourceQueryConfig_DbVerification::total_num_indexes() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.DbVerification.total_num_indexes)
  return _internal_total_num_indexes();
}
inline void MetadataSourceQueryConfig_DbVerification::_internal_set_total_num_indexes(int32_t value) {
  
  _impl_.total_num_indexes_ = value;
}
inline void MetadataSourceQueryConfig_DbVerification::set_total_num_indexes(int32_t value) {
  _internal_set_total_num_indexes(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.DbVerification.total_num_indexes)
}

// -------------------------------------------------------------------

// MetadataSourceQueryConfig_MigrationScheme_VerificationScheme

// repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery previous_version_setup_queries = 1;
inline int MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_previous_version_setup_queries_size() const {
  return _impl_.previous_version_setup_queries_.size();
}
inline int MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::previous_version_setup_queries_size() const {
  return _internal_previous_version_setup_queries_size();
}
inline void MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::clear_previous_version_setup_queries() {
  _impl_.previous_version_setup_queries_.Clear();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::mutable_previous_version_setup_queries(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.previous_version_setup_queries)
  return _impl_.previous_version_setup_queries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::mutable_previous_version_setup_queries() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.previous_version_setup_queries)
  return &_impl_.previous_version_setup_queries_;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_previous_version_setup_queries(int index) const {
  return _impl_.previous_version_setup_queries_.Get(index);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::previous_version_setup_queries(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.previous_version_setup_queries)
  return _internal_previous_version_setup_queries(index);
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_add_previous_version_setup_queries() {
  return _impl_.previous_version_setup_queries_.Add();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::add_previous_version_setup_queries() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _add = _internal_add_previous_version_setup_queries();
  // @@protoc_insertion_point(field_add:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.previous_version_setup_queries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::previous_version_setup_queries() const {
  // @@protoc_insertion_point(field_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.previous_version_setup_queries)
  return _impl_.previous_version_setup_queries_;
}

// repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery post_migration_verification_queries = 2;
inline int MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_post_migration_verification_queries_size() const {
  return _impl_.post_migration_verification_queries_.size();
}
inline int MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::post_migration_verification_queries_size() const {
  return _internal_post_migration_verification_queries_size();
}
inline void MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::clear_post_migration_verification_queries() {
  _impl_.post_migration_verification_queries_.Clear();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::mutable_post_migration_verification_queries(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.post_migration_verification_queries)
  return _impl_.post_migration_verification_queries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::mutable_post_migration_verification_queries() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.post_migration_verification_queries)
  return &_impl_.post_migration_verification_queries_;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_post_migration_verification_queries(int index) const {
  return _impl_.post_migration_verification_queries_.Get(index);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::post_migration_verification_queries(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.post_migration_verification_queries)
  return _internal_post_migration_verification_queries(index);
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::_internal_add_post_migration_verification_queries() {
  return _impl_.post_migration_verification_queries_.Add();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::add_post_migration_verification_queries() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _add = _internal_add_post_migration_verification_queries();
  // @@protoc_insertion_point(field_add:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.post_migration_verification_queries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
MetadataSourceQueryConfig_MigrationScheme_VerificationScheme::post_migration_verification_queries() const {
  // @@protoc_insertion_point(field_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme.post_migration_verification_queries)
  return _impl_.post_migration_verification_queries_;
}

// -------------------------------------------------------------------

// MetadataSourceQueryConfig_MigrationScheme

// repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery upgrade_queries = 1;
inline int MetadataSourceQueryConfig_MigrationScheme::_internal_upgrade_queries_size() const {
  return _impl_.upgrade_queries_.size();
}
inline int MetadataSourceQueryConfig_MigrationScheme::upgrade_queries_size() const {
  return _internal_upgrade_queries_size();
}
inline void MetadataSourceQueryConfig_MigrationScheme::clear_upgrade_queries() {
  _impl_.upgrade_queries_.Clear();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::mutable_upgrade_queries(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_queries)
  return _impl_.upgrade_queries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
MetadataSourceQueryConfig_MigrationScheme::mutable_upgrade_queries() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_queries)
  return &_impl_.upgrade_queries_;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme::_internal_upgrade_queries(int index) const {
  return _impl_.upgrade_queries_.Get(index);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme::upgrade_queries(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_queries)
  return _internal_upgrade_queries(index);
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::_internal_add_upgrade_queries() {
  return _impl_.upgrade_queries_.Add();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::add_upgrade_queries() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _add = _internal_add_upgrade_queries();
  // @@protoc_insertion_point(field_add:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_queries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
MetadataSourceQueryConfig_MigrationScheme::upgrade_queries() const {
  // @@protoc_insertion_point(field_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_queries)
  return _impl_.upgrade_queries_;
}

// repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery downgrade_queries = 3;
inline int MetadataSourceQueryConfig_MigrationScheme::_internal_downgrade_queries_size() const {
  return _impl_.downgrade_queries_.size();
}
inline int MetadataSourceQueryConfig_MigrationScheme::downgrade_queries_size() const {
  return _internal_downgrade_queries_size();
}
inline void MetadataSourceQueryConfig_MigrationScheme::clear_downgrade_queries() {
  _impl_.downgrade_queries_.Clear();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::mutable_downgrade_queries(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_queries)
  return _impl_.downgrade_queries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
MetadataSourceQueryConfig_MigrationScheme::mutable_downgrade_queries() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_queries)
  return &_impl_.downgrade_queries_;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme::_internal_downgrade_queries(int index) const {
  return _impl_.downgrade_queries_.Get(index);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig_MigrationScheme::downgrade_queries(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_queries)
  return _internal_downgrade_queries(index);
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::_internal_add_downgrade_queries() {
  return _impl_.downgrade_queries_.Add();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig_MigrationScheme::add_downgrade_queries() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _add = _internal_add_downgrade_queries();
  // @@protoc_insertion_point(field_add:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_queries)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
MetadataSourceQueryConfig_MigrationScheme::downgrade_queries() const {
  // @@protoc_insertion_point(field_list:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_queries)
  return _impl_.downgrade_queries_;
}

// .ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme upgrade_verification = 2;
inline bool MetadataSourceQueryConfig_MigrationScheme::_internal_has_upgrade_verification() const {
  return this != internal_default_instance() && _impl_.upgrade_verification_ != nullptr;
}
inline bool MetadataSourceQueryConfig_MigrationScheme::has_upgrade_verification() const {
  return _internal_has_upgrade_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::clear_upgrade_verification() {
  if (GetArenaForAllocation() == nullptr && _impl_.upgrade_verification_ != nullptr) {
    delete _impl_.upgrade_verification_;
  }
  _impl_.upgrade_verification_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& MetadataSourceQueryConfig_MigrationScheme::_internal_upgrade_verification() const {
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* p = _impl_.upgrade_verification_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme&>(
      ::ml_metadata::_MetadataSourceQueryConfig_MigrationScheme_VerificationScheme_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& MetadataSourceQueryConfig_MigrationScheme::upgrade_verification() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_verification)
  return _internal_upgrade_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_set_allocated_upgrade_verification(
    ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* upgrade_verification) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.upgrade_verification_);
  }
  _impl_.upgrade_verification_ = upgrade_verification;
  if (upgrade_verification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_verification)
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::release_upgrade_verification() {
  
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* temp = _impl_.upgrade_verification_;
  _impl_.upgrade_verification_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_release_upgrade_verification() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_verification)
  
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* temp = _impl_.upgrade_verification_;
  _impl_.upgrade_verification_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::_internal_mutable_upgrade_verification() {
  
  if (_impl_.upgrade_verification_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme>(GetArenaForAllocation());
    _impl_.upgrade_verification_ = p;
  }
  return _impl_.upgrade_verification_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::mutable_upgrade_verification() {
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* _msg = _internal_mutable_upgrade_verification();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_verification)
  return _msg;
}
inline void MetadataSourceQueryConfig_MigrationScheme::set_allocated_upgrade_verification(::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* upgrade_verification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.upgrade_verification_;
  }
  if (upgrade_verification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(upgrade_verification);
    if (message_arena != submessage_arena) {
      upgrade_verification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, upgrade_verification, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.upgrade_verification_ = upgrade_verification;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.upgrade_verification)
}

// .ml_metadata.MetadataSourceQueryConfig.MigrationScheme.VerificationScheme downgrade_verification = 4;
inline bool MetadataSourceQueryConfig_MigrationScheme::_internal_has_downgrade_verification() const {
  return this != internal_default_instance() && _impl_.downgrade_verification_ != nullptr;
}
inline bool MetadataSourceQueryConfig_MigrationScheme::has_downgrade_verification() const {
  return _internal_has_downgrade_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::clear_downgrade_verification() {
  if (GetArenaForAllocation() == nullptr && _impl_.downgrade_verification_ != nullptr) {
    delete _impl_.downgrade_verification_;
  }
  _impl_.downgrade_verification_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& MetadataSourceQueryConfig_MigrationScheme::_internal_downgrade_verification() const {
  const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* p = _impl_.downgrade_verification_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme&>(
      ::ml_metadata::_MetadataSourceQueryConfig_MigrationScheme_VerificationScheme_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme& MetadataSourceQueryConfig_MigrationScheme::downgrade_verification() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_verification)
  return _internal_downgrade_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_set_allocated_downgrade_verification(
    ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* downgrade_verification) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.downgrade_verification_);
  }
  _impl_.downgrade_verification_ = downgrade_verification;
  if (downgrade_verification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_verification)
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::release_downgrade_verification() {
  
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* temp = _impl_.downgrade_verification_;
  _impl_.downgrade_verification_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_release_downgrade_verification() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_verification)
  
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* temp = _impl_.downgrade_verification_;
  _impl_.downgrade_verification_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::_internal_mutable_downgrade_verification() {
  
  if (_impl_.downgrade_verification_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme>(GetArenaForAllocation());
    _impl_.downgrade_verification_ = p;
  }
  return _impl_.downgrade_verification_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* MetadataSourceQueryConfig_MigrationScheme::mutable_downgrade_verification() {
  ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* _msg = _internal_mutable_downgrade_verification();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_verification)
  return _msg;
}
inline void MetadataSourceQueryConfig_MigrationScheme::set_allocated_downgrade_verification(::ml_metadata::MetadataSourceQueryConfig_MigrationScheme_VerificationScheme* downgrade_verification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.downgrade_verification_;
  }
  if (downgrade_verification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(downgrade_verification);
    if (message_arena != submessage_arena) {
      downgrade_verification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, downgrade_verification, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.downgrade_verification_ = downgrade_verification;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.downgrade_verification)
}

// .ml_metadata.MetadataSourceQueryConfig.DbVerification db_verification = 5;
inline bool MetadataSourceQueryConfig_MigrationScheme::_internal_has_db_verification() const {
  return this != internal_default_instance() && _impl_.db_verification_ != nullptr;
}
inline bool MetadataSourceQueryConfig_MigrationScheme::has_db_verification() const {
  return _internal_has_db_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::clear_db_verification() {
  if (GetArenaForAllocation() == nullptr && _impl_.db_verification_ != nullptr) {
    delete _impl_.db_verification_;
  }
  _impl_.db_verification_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_DbVerification& MetadataSourceQueryConfig_MigrationScheme::_internal_db_verification() const {
  const ::ml_metadata::MetadataSourceQueryConfig_DbVerification* p = _impl_.db_verification_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_DbVerification&>(
      ::ml_metadata::_MetadataSourceQueryConfig_DbVerification_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_DbVerification& MetadataSourceQueryConfig_MigrationScheme::db_verification() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.db_verification)
  return _internal_db_verification();
}
inline void MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_set_allocated_db_verification(
    ::ml_metadata::MetadataSourceQueryConfig_DbVerification* db_verification) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.db_verification_);
  }
  _impl_.db_verification_ = db_verification;
  if (db_verification) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.db_verification)
}
inline ::ml_metadata::MetadataSourceQueryConfig_DbVerification* MetadataSourceQueryConfig_MigrationScheme::release_db_verification() {
  
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* temp = _impl_.db_verification_;
  _impl_.db_verification_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_DbVerification* MetadataSourceQueryConfig_MigrationScheme::unsafe_arena_release_db_verification() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.db_verification)
  
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* temp = _impl_.db_verification_;
  _impl_.db_verification_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_DbVerification* MetadataSourceQueryConfig_MigrationScheme::_internal_mutable_db_verification() {
  
  if (_impl_.db_verification_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_DbVerification>(GetArenaForAllocation());
    _impl_.db_verification_ = p;
  }
  return _impl_.db_verification_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_DbVerification* MetadataSourceQueryConfig_MigrationScheme::mutable_db_verification() {
  ::ml_metadata::MetadataSourceQueryConfig_DbVerification* _msg = _internal_mutable_db_verification();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.db_verification)
  return _msg;
}
inline void MetadataSourceQueryConfig_MigrationScheme::set_allocated_db_verification(::ml_metadata::MetadataSourceQueryConfig_DbVerification* db_verification) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.db_verification_;
  }
  if (db_verification) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(db_verification);
    if (message_arena != submessage_arena) {
      db_verification = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, db_verification, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.db_verification_ = db_verification;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.MigrationScheme.db_verification)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MetadataSourceQueryConfig

// .ml_metadata.MetadataSourceType metadata_source_type = 1;
inline void MetadataSourceQueryConfig::clear_metadata_source_type() {
  _impl_.metadata_source_type_ = 0;
}
inline ::ml_metadata::MetadataSourceType MetadataSourceQueryConfig::_internal_metadata_source_type() const {
  return static_cast< ::ml_metadata::MetadataSourceType >(_impl_.metadata_source_type_);
}
inline ::ml_metadata::MetadataSourceType MetadataSourceQueryConfig::metadata_source_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.metadata_source_type)
  return _internal_metadata_source_type();
}
inline void MetadataSourceQueryConfig::_internal_set_metadata_source_type(::ml_metadata::MetadataSourceType value) {
  
  _impl_.metadata_source_type_ = value;
}
inline void MetadataSourceQueryConfig::set_metadata_source_type(::ml_metadata::MetadataSourceType value) {
  _internal_set_metadata_source_type(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.metadata_source_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_type_table = 3;
inline bool MetadataSourceQueryConfig::_internal_has_drop_type_table() const {
  return this != internal_default_instance() && _impl_.drop_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_type_table() const {
  return _internal_has_drop_type_table();
}
inline void MetadataSourceQueryConfig::clear_drop_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_type_table_ != nullptr) {
    delete _impl_.drop_type_table_;
  }
  _impl_.drop_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_type_table)
  return _internal_drop_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_type_table_);
  }
  _impl_.drop_type_table_ = drop_type_table;
  if (drop_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_type_table_;
  _impl_.drop_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_type_table_;
  _impl_.drop_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_type_table() {
  
  if (_impl_.drop_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_type_table_ = p;
  }
  return _impl_.drop_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_type_table_;
  }
  if (drop_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_type_table);
    if (message_arena != submessage_arena) {
      drop_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_type_table_ = drop_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_type_table = 4;
inline bool MetadataSourceQueryConfig::_internal_has_create_type_table() const {
  return this != internal_default_instance() && _impl_.create_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_type_table() const {
  return _internal_has_create_type_table();
}
inline void MetadataSourceQueryConfig::clear_create_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_type_table_ != nullptr) {
    delete _impl_.create_type_table_;
  }
  _impl_.create_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_type_table)
  return _internal_create_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_type_table_);
  }
  _impl_.create_type_table_ = create_type_table;
  if (create_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_type_table_;
  _impl_.create_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_type_table_;
  _impl_.create_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_type_table() {
  
  if (_impl_.create_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_type_table_ = p;
  }
  return _impl_.create_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_type_table_;
  }
  if (create_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_type_table);
    if (message_arena != submessage_arena) {
      create_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_type_table_ = create_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_type_table = 44;
inline bool MetadataSourceQueryConfig::_internal_has_check_type_table() const {
  return this != internal_default_instance() && _impl_.check_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_type_table() const {
  return _internal_has_check_type_table();
}
inline void MetadataSourceQueryConfig::clear_check_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_type_table_ != nullptr) {
    delete _impl_.check_type_table_;
  }
  _impl_.check_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_type_table)
  return _internal_check_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_type_table_);
  }
  _impl_.check_type_table_ = check_type_table;
  if (check_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_type_table_;
  _impl_.check_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_type_table_;
  _impl_.check_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_type_table() {
  
  if (_impl_.check_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_type_table_ = p;
  }
  return _impl_.check_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_type_table_;
  }
  if (check_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_type_table);
    if (message_arena != submessage_arena) {
      check_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_type_table_ = check_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact_type = 54;
inline bool MetadataSourceQueryConfig::_internal_has_insert_artifact_type() const {
  return this != internal_default_instance() && _impl_.insert_artifact_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_artifact_type() const {
  return _internal_has_insert_artifact_type();
}
inline void MetadataSourceQueryConfig::clear_insert_artifact_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_artifact_type_ != nullptr) {
    delete _impl_.insert_artifact_type_;
  }
  _impl_.insert_artifact_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_artifact_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_artifact_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_artifact_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_artifact_type)
  return _internal_insert_artifact_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_artifact_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_artifact_type_);
  }
  _impl_.insert_artifact_type_ = insert_artifact_type;
  if (insert_artifact_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_artifact_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_type_;
  _impl_.insert_artifact_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_artifact_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_artifact_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_type_;
  _impl_.insert_artifact_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_artifact_type() {
  
  if (_impl_.insert_artifact_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_artifact_type_ = p;
  }
  return _impl_.insert_artifact_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_artifact_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_artifact_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_artifact_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_artifact_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_artifact_type_;
  }
  if (insert_artifact_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_artifact_type);
    if (message_arena != submessage_arena) {
      insert_artifact_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_artifact_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_artifact_type_ = insert_artifact_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution_type = 55;
inline bool MetadataSourceQueryConfig::_internal_has_insert_execution_type() const {
  return this != internal_default_instance() && _impl_.insert_execution_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_execution_type() const {
  return _internal_has_insert_execution_type();
}
inline void MetadataSourceQueryConfig::clear_insert_execution_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_execution_type_ != nullptr) {
    delete _impl_.insert_execution_type_;
  }
  _impl_.insert_execution_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_execution_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_execution_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_execution_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_execution_type)
  return _internal_insert_execution_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_execution_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_execution_type_);
  }
  _impl_.insert_execution_type_ = insert_execution_type;
  if (insert_execution_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_execution_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_type_;
  _impl_.insert_execution_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_execution_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_execution_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_type_;
  _impl_.insert_execution_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_execution_type() {
  
  if (_impl_.insert_execution_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_execution_type_ = p;
  }
  return _impl_.insert_execution_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_execution_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_execution_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_execution_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_execution_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_execution_type_;
  }
  if (insert_execution_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_execution_type);
    if (message_arena != submessage_arena) {
      insert_execution_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_execution_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_execution_type_ = insert_execution_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context_type = 58;
inline bool MetadataSourceQueryConfig::_internal_has_insert_context_type() const {
  return this != internal_default_instance() && _impl_.insert_context_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_context_type() const {
  return _internal_has_insert_context_type();
}
inline void MetadataSourceQueryConfig::clear_insert_context_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_context_type_ != nullptr) {
    delete _impl_.insert_context_type_;
  }
  _impl_.insert_context_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_context_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_context_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_context_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_context_type)
  return _internal_insert_context_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_context_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_context_type_);
  }
  _impl_.insert_context_type_ = insert_context_type;
  if (insert_context_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_context_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_type_;
  _impl_.insert_context_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_context_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_context_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_type_;
  _impl_.insert_context_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_context_type() {
  
  if (_impl_.insert_context_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_context_type_ = p;
  }
  return _impl_.insert_context_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_context_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_context_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_context_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_context_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_context_type_;
  }
  if (insert_context_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_context_type);
    if (message_arena != submessage_arena) {
      insert_context_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_context_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_context_type_ = insert_context_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_id = 128;
inline bool MetadataSourceQueryConfig::_internal_has_select_types_by_id() const {
  return this != internal_default_instance() && _impl_.select_types_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_types_by_id() const {
  return _internal_has_select_types_by_id();
}
inline void MetadataSourceQueryConfig::clear_select_types_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_types_by_id_ != nullptr) {
    delete _impl_.select_types_by_id_;
  }
  _impl_.select_types_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_types_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_types_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_types_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_types_by_id)
  return _internal_select_types_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_types_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_types_by_id_);
  }
  _impl_.select_types_by_id_ = select_types_by_id;
  if (select_types_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_types_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_id_;
  _impl_.select_types_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_types_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_types_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_id_;
  _impl_.select_types_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_types_by_id() {
  
  if (_impl_.select_types_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_types_by_id_ = p;
  }
  return _impl_.select_types_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_types_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_types_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_types_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_types_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_types_by_id_;
  }
  if (select_types_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_types_by_id);
    if (message_arena != submessage_arena) {
      select_types_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_types_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_types_by_id_ = select_types_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_external_ids = 134;
inline bool MetadataSourceQueryConfig::_internal_has_select_types_by_external_ids() const {
  return this != internal_default_instance() && _impl_.select_types_by_external_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_types_by_external_ids() const {
  return _internal_has_select_types_by_external_ids();
}
inline void MetadataSourceQueryConfig::clear_select_types_by_external_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_types_by_external_ids_ != nullptr) {
    delete _impl_.select_types_by_external_ids_;
  }
  _impl_.select_types_by_external_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_types_by_external_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_types_by_external_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_types_by_external_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_types_by_external_ids)
  return _internal_select_types_by_external_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_types_by_external_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_external_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_types_by_external_ids_);
  }
  _impl_.select_types_by_external_ids_ = select_types_by_external_ids;
  if (select_types_by_external_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_external_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_types_by_external_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_external_ids_;
  _impl_.select_types_by_external_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_types_by_external_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_types_by_external_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_external_ids_;
  _impl_.select_types_by_external_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_types_by_external_ids() {
  
  if (_impl_.select_types_by_external_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_types_by_external_ids_ = p;
  }
  return _impl_.select_types_by_external_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_types_by_external_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_types_by_external_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_types_by_external_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_types_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_external_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_types_by_external_ids_;
  }
  if (select_types_by_external_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_types_by_external_ids);
    if (message_arena != submessage_arena) {
      select_types_by_external_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_types_by_external_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_types_by_external_ids_ = select_types_by_external_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_external_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_id = 6;
inline bool MetadataSourceQueryConfig::_internal_has_select_type_by_id() const {
  return this != internal_default_instance() && _impl_.select_type_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_type_by_id() const {
  return _internal_has_select_type_by_id();
}
inline void MetadataSourceQueryConfig::clear_select_type_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_type_by_id_ != nullptr) {
    delete _impl_.select_type_by_id_;
  }
  _impl_.select_type_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_type_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_type_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_type_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_type_by_id)
  return _internal_select_type_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_type_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_type_by_id_);
  }
  _impl_.select_type_by_id_ = select_type_by_id;
  if (select_type_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_type_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_id_;
  _impl_.select_type_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_type_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_type_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_id_;
  _impl_.select_type_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_type_by_id() {
  
  if (_impl_.select_type_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_type_by_id_ = p;
  }
  return _impl_.select_type_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_type_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_type_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_type_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_type_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_type_by_id_;
  }
  if (select_type_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_type_by_id);
    if (message_arena != submessage_arena) {
      select_type_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_type_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_type_by_id_ = select_type_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_name = 20;
inline bool MetadataSourceQueryConfig::_internal_has_select_type_by_name() const {
  return this != internal_default_instance() && _impl_.select_type_by_name_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_type_by_name() const {
  return _internal_has_select_type_by_name();
}
inline void MetadataSourceQueryConfig::clear_select_type_by_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_type_by_name_ != nullptr) {
    delete _impl_.select_type_by_name_;
  }
  _impl_.select_type_by_name_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_type_by_name() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_type_by_name_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_type_by_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_type_by_name)
  return _internal_select_type_by_name();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_type_by_name(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_type_by_name_);
  }
  _impl_.select_type_by_name_ = select_type_by_name;
  if (select_type_by_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_name)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_type_by_name() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_name_;
  _impl_.select_type_by_name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_type_by_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_type_by_name)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_name_;
  _impl_.select_type_by_name_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_type_by_name() {
  
  if (_impl_.select_type_by_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_type_by_name_ = p;
  }
  return _impl_.select_type_by_name_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_type_by_name() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_type_by_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_type_by_name)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_type_by_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_type_by_name_;
  }
  if (select_type_by_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_type_by_name);
    if (message_arena != submessage_arena) {
      select_type_by_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_type_by_name, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_type_by_name_ = select_type_by_name;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_name)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_type_by_name_and_version = 111;
inline bool MetadataSourceQueryConfig::_internal_has_select_type_by_name_and_version() const {
  return this != internal_default_instance() && _impl_.select_type_by_name_and_version_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_type_by_name_and_version() const {
  return _internal_has_select_type_by_name_and_version();
}
inline void MetadataSourceQueryConfig::clear_select_type_by_name_and_version() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_type_by_name_and_version_ != nullptr) {
    delete _impl_.select_type_by_name_and_version_;
  }
  _impl_.select_type_by_name_and_version_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_type_by_name_and_version() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_type_by_name_and_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_type_by_name_and_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_type_by_name_and_version)
  return _internal_select_type_by_name_and_version();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_type_by_name_and_version(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_and_version) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_type_by_name_and_version_);
  }
  _impl_.select_type_by_name_and_version_ = select_type_by_name_and_version;
  if (select_type_by_name_and_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_name_and_version)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_type_by_name_and_version() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_name_and_version_;
  _impl_.select_type_by_name_and_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_type_by_name_and_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_type_by_name_and_version)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_type_by_name_and_version_;
  _impl_.select_type_by_name_and_version_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_type_by_name_and_version() {
  
  if (_impl_.select_type_by_name_and_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_type_by_name_and_version_ = p;
  }
  return _impl_.select_type_by_name_and_version_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_type_by_name_and_version() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_type_by_name_and_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_type_by_name_and_version)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_type_by_name_and_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_type_by_name_and_version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_type_by_name_and_version_;
  }
  if (select_type_by_name_and_version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_type_by_name_and_version);
    if (message_arena != submessage_arena) {
      select_type_by_name_and_version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_type_by_name_and_version, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_type_by_name_and_version_ = select_type_by_name_and_version;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_type_by_name_and_version)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_names = 136;
inline bool MetadataSourceQueryConfig::_internal_has_select_types_by_names() const {
  return this != internal_default_instance() && _impl_.select_types_by_names_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_types_by_names() const {
  return _internal_has_select_types_by_names();
}
inline void MetadataSourceQueryConfig::clear_select_types_by_names() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_types_by_names_ != nullptr) {
    delete _impl_.select_types_by_names_;
  }
  _impl_.select_types_by_names_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_types_by_names() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_types_by_names_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_types_by_names() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_types_by_names)
  return _internal_select_types_by_names();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_types_by_names(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_types_by_names_);
  }
  _impl_.select_types_by_names_ = select_types_by_names;
  if (select_types_by_names) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_names)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_types_by_names() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_names_;
  _impl_.select_types_by_names_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_types_by_names() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_types_by_names)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_names_;
  _impl_.select_types_by_names_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_types_by_names() {
  
  if (_impl_.select_types_by_names_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_types_by_names_ = p;
  }
  return _impl_.select_types_by_names_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_types_by_names() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_types_by_names();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_types_by_names)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_types_by_names(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_types_by_names_;
  }
  if (select_types_by_names) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_types_by_names);
    if (message_arena != submessage_arena) {
      select_types_by_names = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_types_by_names, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_types_by_names_ = select_types_by_names;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_names)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_types_by_names_and_versions = 137;
inline bool MetadataSourceQueryConfig::_internal_has_select_types_by_names_and_versions() const {
  return this != internal_default_instance() && _impl_.select_types_by_names_and_versions_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_types_by_names_and_versions() const {
  return _internal_has_select_types_by_names_and_versions();
}
inline void MetadataSourceQueryConfig::clear_select_types_by_names_and_versions() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_types_by_names_and_versions_ != nullptr) {
    delete _impl_.select_types_by_names_and_versions_;
  }
  _impl_.select_types_by_names_and_versions_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_types_by_names_and_versions() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_types_by_names_and_versions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_types_by_names_and_versions() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_types_by_names_and_versions)
  return _internal_select_types_by_names_and_versions();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_types_by_names_and_versions(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_and_versions) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_types_by_names_and_versions_);
  }
  _impl_.select_types_by_names_and_versions_ = select_types_by_names_and_versions;
  if (select_types_by_names_and_versions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_names_and_versions)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_types_by_names_and_versions() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_names_and_versions_;
  _impl_.select_types_by_names_and_versions_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_types_by_names_and_versions() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_types_by_names_and_versions)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_types_by_names_and_versions_;
  _impl_.select_types_by_names_and_versions_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_types_by_names_and_versions() {
  
  if (_impl_.select_types_by_names_and_versions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_types_by_names_and_versions_ = p;
  }
  return _impl_.select_types_by_names_and_versions_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_types_by_names_and_versions() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_types_by_names_and_versions();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_types_by_names_and_versions)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_types_by_names_and_versions(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_types_by_names_and_versions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_types_by_names_and_versions_;
  }
  if (select_types_by_names_and_versions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_types_by_names_and_versions);
    if (message_arena != submessage_arena) {
      select_types_by_names_and_versions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_types_by_names_and_versions, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_types_by_names_and_versions_ = select_types_by_names_and_versions;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_types_by_names_and_versions)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_all_types = 57;
inline bool MetadataSourceQueryConfig::_internal_has_select_all_types() const {
  return this != internal_default_instance() && _impl_.select_all_types_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_all_types() const {
  return _internal_has_select_all_types();
}
inline void MetadataSourceQueryConfig::clear_select_all_types() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_all_types_ != nullptr) {
    delete _impl_.select_all_types_;
  }
  _impl_.select_all_types_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_all_types() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_all_types_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_all_types() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_all_types)
  return _internal_select_all_types();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_all_types(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_all_types) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_all_types_);
  }
  _impl_.select_all_types_ = select_all_types;
  if (select_all_types) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_all_types)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_all_types() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_all_types_;
  _impl_.select_all_types_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_all_types() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_all_types)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_all_types_;
  _impl_.select_all_types_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_all_types() {
  
  if (_impl_.select_all_types_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_all_types_ = p;
  }
  return _impl_.select_all_types_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_all_types() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_all_types();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_all_types)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_all_types(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_all_types) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_all_types_;
  }
  if (select_all_types) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_all_types);
    if (message_arena != submessage_arena) {
      select_all_types = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_all_types, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_all_types_ = select_all_types;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_all_types)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_type = 138;
inline bool MetadataSourceQueryConfig::_internal_has_update_type() const {
  return this != internal_default_instance() && _impl_.update_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_type() const {
  return _internal_has_update_type();
}
inline void MetadataSourceQueryConfig::clear_update_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_type_ != nullptr) {
    delete _impl_.update_type_;
  }
  _impl_.update_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_type)
  return _internal_update_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_type_);
  }
  _impl_.update_type_ = update_type;
  if (update_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_type_;
  _impl_.update_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_type_;
  _impl_.update_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_type() {
  
  if (_impl_.update_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_type_ = p;
  }
  return _impl_.update_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_type_;
  }
  if (update_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_type);
    if (message_arena != submessage_arena) {
      update_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_type_ = update_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_parent_type_table = 99;
inline bool MetadataSourceQueryConfig::_internal_has_drop_parent_type_table() const {
  return this != internal_default_instance() && _impl_.drop_parent_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_parent_type_table() const {
  return _internal_has_drop_parent_type_table();
}
inline void MetadataSourceQueryConfig::clear_drop_parent_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_parent_type_table_ != nullptr) {
    delete _impl_.drop_parent_type_table_;
  }
  _impl_.drop_parent_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_parent_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_parent_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_parent_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_parent_type_table)
  return _internal_drop_parent_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_parent_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_parent_type_table_);
  }
  _impl_.drop_parent_type_table_ = drop_parent_type_table;
  if (drop_parent_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_parent_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_parent_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_parent_type_table_;
  _impl_.drop_parent_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_parent_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_parent_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_parent_type_table_;
  _impl_.drop_parent_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_parent_type_table() {
  
  if (_impl_.drop_parent_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_parent_type_table_ = p;
  }
  return _impl_.drop_parent_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_parent_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_parent_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_parent_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_parent_type_table_;
  }
  if (drop_parent_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_parent_type_table);
    if (message_arena != submessage_arena) {
      drop_parent_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_parent_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_parent_type_table_ = drop_parent_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_parent_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_parent_type_table = 100;
inline bool MetadataSourceQueryConfig::_internal_has_create_parent_type_table() const {
  return this != internal_default_instance() && _impl_.create_parent_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_parent_type_table() const {
  return _internal_has_create_parent_type_table();
}
inline void MetadataSourceQueryConfig::clear_create_parent_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_parent_type_table_ != nullptr) {
    delete _impl_.create_parent_type_table_;
  }
  _impl_.create_parent_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_parent_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_parent_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_parent_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_parent_type_table)
  return _internal_create_parent_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_parent_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_parent_type_table_);
  }
  _impl_.create_parent_type_table_ = create_parent_type_table;
  if (create_parent_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_parent_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_parent_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_parent_type_table_;
  _impl_.create_parent_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_parent_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_parent_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_parent_type_table_;
  _impl_.create_parent_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_parent_type_table() {
  
  if (_impl_.create_parent_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_parent_type_table_ = p;
  }
  return _impl_.create_parent_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_parent_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_parent_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_parent_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_parent_type_table_;
  }
  if (create_parent_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_parent_type_table);
    if (message_arena != submessage_arena) {
      create_parent_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_parent_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_parent_type_table_ = create_parent_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_parent_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_parent_type_table = 101;
inline bool MetadataSourceQueryConfig::_internal_has_check_parent_type_table() const {
  return this != internal_default_instance() && _impl_.check_parent_type_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_parent_type_table() const {
  return _internal_has_check_parent_type_table();
}
inline void MetadataSourceQueryConfig::clear_check_parent_type_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_parent_type_table_ != nullptr) {
    delete _impl_.check_parent_type_table_;
  }
  _impl_.check_parent_type_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_parent_type_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_parent_type_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_parent_type_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_parent_type_table)
  return _internal_check_parent_type_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_parent_type_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_type_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_parent_type_table_);
  }
  _impl_.check_parent_type_table_ = check_parent_type_table;
  if (check_parent_type_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_parent_type_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_parent_type_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_parent_type_table_;
  _impl_.check_parent_type_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_parent_type_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_parent_type_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_parent_type_table_;
  _impl_.check_parent_type_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_parent_type_table() {
  
  if (_impl_.check_parent_type_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_parent_type_table_ = p;
  }
  return _impl_.check_parent_type_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_parent_type_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_parent_type_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_parent_type_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_parent_type_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_type_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_parent_type_table_;
  }
  if (check_parent_type_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_parent_type_table);
    if (message_arena != submessage_arena) {
      check_parent_type_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_parent_type_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_parent_type_table_ = check_parent_type_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_parent_type_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_parent_type = 109;
inline bool MetadataSourceQueryConfig::_internal_has_insert_parent_type() const {
  return this != internal_default_instance() && _impl_.insert_parent_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_parent_type() const {
  return _internal_has_insert_parent_type();
}
inline void MetadataSourceQueryConfig::clear_insert_parent_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_parent_type_ != nullptr) {
    delete _impl_.insert_parent_type_;
  }
  _impl_.insert_parent_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_parent_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_parent_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_parent_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_parent_type)
  return _internal_insert_parent_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_parent_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_parent_type_);
  }
  _impl_.insert_parent_type_ = insert_parent_type;
  if (insert_parent_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_parent_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_parent_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_parent_type_;
  _impl_.insert_parent_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_parent_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_parent_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_parent_type_;
  _impl_.insert_parent_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_parent_type() {
  
  if (_impl_.insert_parent_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_parent_type_ = p;
  }
  return _impl_.insert_parent_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_parent_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_parent_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_parent_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_parent_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_parent_type_;
  }
  if (insert_parent_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_parent_type);
    if (message_arena != submessage_arena) {
      insert_parent_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_parent_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_parent_type_ = insert_parent_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_parent_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_type_by_type_id = 110;
inline bool MetadataSourceQueryConfig::_internal_has_select_parent_type_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_parent_type_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_parent_type_by_type_id() const {
  return _internal_has_select_parent_type_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_parent_type_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_parent_type_by_type_id_ != nullptr) {
    delete _impl_.select_parent_type_by_type_id_;
  }
  _impl_.select_parent_type_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_parent_type_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_parent_type_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_parent_type_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_parent_type_by_type_id)
  return _internal_select_parent_type_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_parent_type_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_type_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_parent_type_by_type_id_);
  }
  _impl_.select_parent_type_by_type_id_ = select_parent_type_by_type_id;
  if (select_parent_type_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_type_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_parent_type_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_type_by_type_id_;
  _impl_.select_parent_type_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_parent_type_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_parent_type_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_type_by_type_id_;
  _impl_.select_parent_type_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_parent_type_by_type_id() {
  
  if (_impl_.select_parent_type_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_parent_type_by_type_id_ = p;
  }
  return _impl_.select_parent_type_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_parent_type_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_parent_type_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_parent_type_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_parent_type_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_type_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_parent_type_by_type_id_;
  }
  if (select_parent_type_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_parent_type_by_type_id);
    if (message_arena != submessage_arena) {
      select_parent_type_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_parent_type_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_parent_type_by_type_id_ = select_parent_type_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_type_by_type_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_type_property_table = 7;
inline bool MetadataSourceQueryConfig::_internal_has_drop_type_property_table() const {
  return this != internal_default_instance() && _impl_.drop_type_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_type_property_table() const {
  return _internal_has_drop_type_property_table();
}
inline void MetadataSourceQueryConfig::clear_drop_type_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_type_property_table_ != nullptr) {
    delete _impl_.drop_type_property_table_;
  }
  _impl_.drop_type_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_type_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_type_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_type_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_type_property_table)
  return _internal_drop_type_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_type_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_type_property_table_);
  }
  _impl_.drop_type_property_table_ = drop_type_property_table;
  if (drop_type_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_type_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_type_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_type_property_table_;
  _impl_.drop_type_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_type_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_type_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_type_property_table_;
  _impl_.drop_type_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_type_property_table() {
  
  if (_impl_.drop_type_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_type_property_table_ = p;
  }
  return _impl_.drop_type_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_type_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_type_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_type_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_type_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_type_property_table_;
  }
  if (drop_type_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_type_property_table);
    if (message_arena != submessage_arena) {
      drop_type_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_type_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_type_property_table_ = drop_type_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_type_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_type_property_table = 8;
inline bool MetadataSourceQueryConfig::_internal_has_create_type_property_table() const {
  return this != internal_default_instance() && _impl_.create_type_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_type_property_table() const {
  return _internal_has_create_type_property_table();
}
inline void MetadataSourceQueryConfig::clear_create_type_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_type_property_table_ != nullptr) {
    delete _impl_.create_type_property_table_;
  }
  _impl_.create_type_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_type_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_type_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_type_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_type_property_table)
  return _internal_create_type_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_type_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_type_property_table_);
  }
  _impl_.create_type_property_table_ = create_type_property_table;
  if (create_type_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_type_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_type_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_type_property_table_;
  _impl_.create_type_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_type_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_type_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_type_property_table_;
  _impl_.create_type_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_type_property_table() {
  
  if (_impl_.create_type_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_type_property_table_ = p;
  }
  return _impl_.create_type_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_type_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_type_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_type_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_type_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_type_property_table_;
  }
  if (create_type_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_type_property_table);
    if (message_arena != submessage_arena) {
      create_type_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_type_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_type_property_table_ = create_type_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_type_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_type_property_table = 45;
inline bool MetadataSourceQueryConfig::_internal_has_check_type_property_table() const {
  return this != internal_default_instance() && _impl_.check_type_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_type_property_table() const {
  return _internal_has_check_type_property_table();
}
inline void MetadataSourceQueryConfig::clear_check_type_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_type_property_table_ != nullptr) {
    delete _impl_.check_type_property_table_;
  }
  _impl_.check_type_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_type_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_type_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_type_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_type_property_table)
  return _internal_check_type_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_type_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_type_property_table_);
  }
  _impl_.check_type_property_table_ = check_type_property_table;
  if (check_type_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_type_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_type_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_type_property_table_;
  _impl_.check_type_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_type_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_type_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_type_property_table_;
  _impl_.check_type_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_type_property_table() {
  
  if (_impl_.check_type_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_type_property_table_ = p;
  }
  return _impl_.check_type_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_type_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_type_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_type_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_type_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_type_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_type_property_table_;
  }
  if (check_type_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_type_property_table);
    if (message_arena != submessage_arena) {
      check_type_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_type_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_type_property_table_ = check_type_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_type_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_type_property = 9;
inline bool MetadataSourceQueryConfig::_internal_has_insert_type_property() const {
  return this != internal_default_instance() && _impl_.insert_type_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_type_property() const {
  return _internal_has_insert_type_property();
}
inline void MetadataSourceQueryConfig::clear_insert_type_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_type_property_ != nullptr) {
    delete _impl_.insert_type_property_;
  }
  _impl_.insert_type_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_type_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_type_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_type_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_type_property)
  return _internal_insert_type_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_type_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_type_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_type_property_);
  }
  _impl_.insert_type_property_ = insert_type_property;
  if (insert_type_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_type_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_type_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_type_property_;
  _impl_.insert_type_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_type_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_type_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_type_property_;
  _impl_.insert_type_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_type_property() {
  
  if (_impl_.insert_type_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_type_property_ = p;
  }
  return _impl_.insert_type_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_type_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_type_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_type_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_type_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_type_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_type_property_;
  }
  if (insert_type_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_type_property);
    if (message_arena != submessage_arena) {
      insert_type_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_type_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_type_property_ = insert_type_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_type_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_property_by_type_id = 10;
inline bool MetadataSourceQueryConfig::_internal_has_select_property_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_property_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_property_by_type_id() const {
  return _internal_has_select_property_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_property_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_property_by_type_id_ != nullptr) {
    delete _impl_.select_property_by_type_id_;
  }
  _impl_.select_property_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_property_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_property_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_property_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_property_by_type_id)
  return _internal_select_property_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_property_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_property_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_property_by_type_id_);
  }
  _impl_.select_property_by_type_id_ = select_property_by_type_id;
  if (select_property_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_property_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_property_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_property_by_type_id_;
  _impl_.select_property_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_property_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_property_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_property_by_type_id_;
  _impl_.select_property_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_property_by_type_id() {
  
  if (_impl_.select_property_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_property_by_type_id_ = p;
  }
  return _impl_.select_property_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_property_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_property_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_property_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_property_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_property_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_property_by_type_id_;
  }
  if (select_property_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_property_by_type_id);
    if (message_arena != submessage_arena) {
      select_property_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_property_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_property_by_type_id_ = select_property_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_property_by_type_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_last_insert_id = 11;
inline bool MetadataSourceQueryConfig::_internal_has_select_last_insert_id() const {
  return this != internal_default_instance() && _impl_.select_last_insert_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_last_insert_id() const {
  return _internal_has_select_last_insert_id();
}
inline void MetadataSourceQueryConfig::clear_select_last_insert_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_last_insert_id_ != nullptr) {
    delete _impl_.select_last_insert_id_;
  }
  _impl_.select_last_insert_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_last_insert_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_last_insert_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_last_insert_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_last_insert_id)
  return _internal_select_last_insert_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_last_insert_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_last_insert_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_last_insert_id_);
  }
  _impl_.select_last_insert_id_ = select_last_insert_id;
  if (select_last_insert_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_last_insert_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_last_insert_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_last_insert_id_;
  _impl_.select_last_insert_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_last_insert_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_last_insert_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_last_insert_id_;
  _impl_.select_last_insert_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_last_insert_id() {
  
  if (_impl_.select_last_insert_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_last_insert_id_ = p;
  }
  return _impl_.select_last_insert_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_last_insert_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_last_insert_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_last_insert_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_last_insert_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_last_insert_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_last_insert_id_;
  }
  if (select_last_insert_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_last_insert_id);
    if (message_arena != submessage_arena) {
      select_last_insert_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_last_insert_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_last_insert_id_ = select_last_insert_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_last_insert_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_artifact_table = 12;
inline bool MetadataSourceQueryConfig::_internal_has_drop_artifact_table() const {
  return this != internal_default_instance() && _impl_.drop_artifact_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_artifact_table() const {
  return _internal_has_drop_artifact_table();
}
inline void MetadataSourceQueryConfig::clear_drop_artifact_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_artifact_table_ != nullptr) {
    delete _impl_.drop_artifact_table_;
  }
  _impl_.drop_artifact_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_artifact_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_artifact_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_artifact_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_artifact_table)
  return _internal_drop_artifact_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_artifact_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_artifact_table_);
  }
  _impl_.drop_artifact_table_ = drop_artifact_table;
  if (drop_artifact_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_artifact_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_artifact_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_artifact_table_;
  _impl_.drop_artifact_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_artifact_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_artifact_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_artifact_table_;
  _impl_.drop_artifact_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_artifact_table() {
  
  if (_impl_.drop_artifact_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_artifact_table_ = p;
  }
  return _impl_.drop_artifact_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_artifact_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_artifact_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_artifact_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_artifact_table_;
  }
  if (drop_artifact_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_artifact_table);
    if (message_arena != submessage_arena) {
      drop_artifact_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_artifact_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_artifact_table_ = drop_artifact_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_artifact_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_artifact_table = 13;
inline bool MetadataSourceQueryConfig::_internal_has_create_artifact_table() const {
  return this != internal_default_instance() && _impl_.create_artifact_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_artifact_table() const {
  return _internal_has_create_artifact_table();
}
inline void MetadataSourceQueryConfig::clear_create_artifact_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_artifact_table_ != nullptr) {
    delete _impl_.create_artifact_table_;
  }
  _impl_.create_artifact_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_artifact_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_artifact_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_artifact_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_artifact_table)
  return _internal_create_artifact_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_artifact_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_artifact_table_);
  }
  _impl_.create_artifact_table_ = create_artifact_table;
  if (create_artifact_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_artifact_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_artifact_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_artifact_table_;
  _impl_.create_artifact_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_artifact_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_artifact_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_artifact_table_;
  _impl_.create_artifact_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_artifact_table() {
  
  if (_impl_.create_artifact_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_artifact_table_ = p;
  }
  return _impl_.create_artifact_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_artifact_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_artifact_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_artifact_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_artifact_table_;
  }
  if (create_artifact_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_artifact_table);
    if (message_arena != submessage_arena) {
      create_artifact_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_artifact_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_artifact_table_ = create_artifact_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_artifact_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_artifact_table = 46;
inline bool MetadataSourceQueryConfig::_internal_has_check_artifact_table() const {
  return this != internal_default_instance() && _impl_.check_artifact_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_artifact_table() const {
  return _internal_has_check_artifact_table();
}
inline void MetadataSourceQueryConfig::clear_check_artifact_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_artifact_table_ != nullptr) {
    delete _impl_.check_artifact_table_;
  }
  _impl_.check_artifact_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_artifact_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_artifact_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_artifact_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_artifact_table)
  return _internal_check_artifact_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_artifact_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_artifact_table_);
  }
  _impl_.check_artifact_table_ = check_artifact_table;
  if (check_artifact_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_artifact_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_artifact_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_artifact_table_;
  _impl_.check_artifact_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_artifact_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_artifact_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_artifact_table_;
  _impl_.check_artifact_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_artifact_table() {
  
  if (_impl_.check_artifact_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_artifact_table_ = p;
  }
  return _impl_.check_artifact_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_artifact_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_artifact_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_artifact_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_artifact_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_artifact_table_;
  }
  if (check_artifact_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_artifact_table);
    if (message_arena != submessage_arena) {
      check_artifact_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_artifact_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_artifact_table_ = check_artifact_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_artifact_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact = 14;
inline bool MetadataSourceQueryConfig::_internal_has_insert_artifact() const {
  return this != internal_default_instance() && _impl_.insert_artifact_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_artifact() const {
  return _internal_has_insert_artifact();
}
inline void MetadataSourceQueryConfig::clear_insert_artifact() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_artifact_ != nullptr) {
    delete _impl_.insert_artifact_;
  }
  _impl_.insert_artifact_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_artifact() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_artifact_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_artifact)
  return _internal_insert_artifact();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_artifact(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_artifact_);
  }
  _impl_.insert_artifact_ = insert_artifact;
  if (insert_artifact) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_artifact() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_;
  _impl_.insert_artifact_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_artifact)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_;
  _impl_.insert_artifact_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_artifact() {
  
  if (_impl_.insert_artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_artifact_ = p;
  }
  return _impl_.insert_artifact_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_artifact() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_artifact)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_artifact(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_artifact_;
  }
  if (insert_artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_artifact);
    if (message_arena != submessage_arena) {
      insert_artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_artifact, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_artifact_ = insert_artifact;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_by_id = 15;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifact_by_id() const {
  return this != internal_default_instance() && _impl_.select_artifact_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifact_by_id() const {
  return _internal_has_select_artifact_by_id();
}
inline void MetadataSourceQueryConfig::clear_select_artifact_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifact_by_id_ != nullptr) {
    delete _impl_.select_artifact_by_id_;
  }
  _impl_.select_artifact_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifact_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifact_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifact_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_id)
  return _internal_select_artifact_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifact_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifact_by_id_);
  }
  _impl_.select_artifact_by_id_ = select_artifact_by_id;
  if (select_artifact_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifact_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_by_id_;
  _impl_.select_artifact_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifact_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_by_id_;
  _impl_.select_artifact_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifact_by_id() {
  
  if (_impl_.select_artifact_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifact_by_id_ = p;
  }
  return _impl_.select_artifact_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifact_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifact_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifact_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifact_by_id_;
  }
  if (select_artifact_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifact_by_id);
    if (message_arena != submessage_arena) {
      select_artifact_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifact_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifact_by_id_ = select_artifact_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_by_type_id_and_name = 94;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifact_by_type_id_and_name() const {
  return this != internal_default_instance() && _impl_.select_artifact_by_type_id_and_name_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifact_by_type_id_and_name() const {
  return _internal_has_select_artifact_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::clear_select_artifact_by_type_id_and_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifact_by_type_id_and_name_ != nullptr) {
    delete _impl_.select_artifact_by_type_id_and_name_;
  }
  _impl_.select_artifact_by_type_id_and_name_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifact_by_type_id_and_name() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifact_by_type_id_and_name_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifact_by_type_id_and_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_type_id_and_name)
  return _internal_select_artifact_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifact_by_type_id_and_name(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_type_id_and_name) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifact_by_type_id_and_name_);
  }
  _impl_.select_artifact_by_type_id_and_name_ = select_artifact_by_type_id_and_name;
  if (select_artifact_by_type_id_and_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_type_id_and_name)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifact_by_type_id_and_name() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_by_type_id_and_name_;
  _impl_.select_artifact_by_type_id_and_name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifact_by_type_id_and_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_type_id_and_name)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_by_type_id_and_name_;
  _impl_.select_artifact_by_type_id_and_name_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifact_by_type_id_and_name() {
  
  if (_impl_.select_artifact_by_type_id_and_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifact_by_type_id_and_name_ = p;
  }
  return _impl_.select_artifact_by_type_id_and_name_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifact_by_type_id_and_name() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifact_by_type_id_and_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_type_id_and_name)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifact_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_by_type_id_and_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifact_by_type_id_and_name_;
  }
  if (select_artifact_by_type_id_and_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifact_by_type_id_and_name);
    if (message_arena != submessage_arena) {
      select_artifact_by_type_id_and_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifact_by_type_id_and_name, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifact_by_type_id_and_name_ = select_artifact_by_type_id_and_name;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_by_type_id_and_name)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_type_id = 52;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifacts_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_artifacts_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifacts_by_type_id() const {
  return _internal_has_select_artifacts_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_artifacts_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifacts_by_type_id_ != nullptr) {
    delete _impl_.select_artifacts_by_type_id_;
  }
  _impl_.select_artifacts_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifacts_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifacts_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifacts_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_type_id)
  return _internal_select_artifacts_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifacts_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifacts_by_type_id_);
  }
  _impl_.select_artifacts_by_type_id_ = select_artifacts_by_type_id;
  if (select_artifacts_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifacts_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_type_id_;
  _impl_.select_artifacts_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifacts_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_type_id_;
  _impl_.select_artifacts_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifacts_by_type_id() {
  
  if (_impl_.select_artifacts_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifacts_by_type_id_ = p;
  }
  return _impl_.select_artifacts_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifacts_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifacts_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifacts_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifacts_by_type_id_;
  }
  if (select_artifacts_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifacts_by_type_id);
    if (message_arena != submessage_arena) {
      select_artifacts_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifacts_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifacts_by_type_id_ = select_artifacts_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_type_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_uri = 56;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifacts_by_uri() const {
  return this != internal_default_instance() && _impl_.select_artifacts_by_uri_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifacts_by_uri() const {
  return _internal_has_select_artifacts_by_uri();
}
inline void MetadataSourceQueryConfig::clear_select_artifacts_by_uri() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifacts_by_uri_ != nullptr) {
    delete _impl_.select_artifacts_by_uri_;
  }
  _impl_.select_artifacts_by_uri_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifacts_by_uri() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifacts_by_uri_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifacts_by_uri() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_uri)
  return _internal_select_artifacts_by_uri();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifacts_by_uri(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_uri) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifacts_by_uri_);
  }
  _impl_.select_artifacts_by_uri_ = select_artifacts_by_uri;
  if (select_artifacts_by_uri) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_uri)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifacts_by_uri() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_uri_;
  _impl_.select_artifacts_by_uri_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifacts_by_uri() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_uri)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_uri_;
  _impl_.select_artifacts_by_uri_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifacts_by_uri() {
  
  if (_impl_.select_artifacts_by_uri_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifacts_by_uri_ = p;
  }
  return _impl_.select_artifacts_by_uri_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifacts_by_uri() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifacts_by_uri();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_uri)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifacts_by_uri(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_uri) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifacts_by_uri_;
  }
  if (select_artifacts_by_uri) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifacts_by_uri);
    if (message_arena != submessage_arena) {
      select_artifacts_by_uri = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifacts_by_uri, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifacts_by_uri_ = select_artifacts_by_uri;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_uri)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifacts_by_external_ids = 130;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifacts_by_external_ids() const {
  return this != internal_default_instance() && _impl_.select_artifacts_by_external_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifacts_by_external_ids() const {
  return _internal_has_select_artifacts_by_external_ids();
}
inline void MetadataSourceQueryConfig::clear_select_artifacts_by_external_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifacts_by_external_ids_ != nullptr) {
    delete _impl_.select_artifacts_by_external_ids_;
  }
  _impl_.select_artifacts_by_external_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifacts_by_external_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifacts_by_external_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifacts_by_external_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_external_ids)
  return _internal_select_artifacts_by_external_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifacts_by_external_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_external_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifacts_by_external_ids_);
  }
  _impl_.select_artifacts_by_external_ids_ = select_artifacts_by_external_ids;
  if (select_artifacts_by_external_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_external_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifacts_by_external_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_external_ids_;
  _impl_.select_artifacts_by_external_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifacts_by_external_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_external_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifacts_by_external_ids_;
  _impl_.select_artifacts_by_external_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifacts_by_external_ids() {
  
  if (_impl_.select_artifacts_by_external_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifacts_by_external_ids_ = p;
  }
  return _impl_.select_artifacts_by_external_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifacts_by_external_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifacts_by_external_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_external_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifacts_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifacts_by_external_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifacts_by_external_ids_;
  }
  if (select_artifacts_by_external_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifacts_by_external_ids);
    if (message_arena != submessage_arena) {
      select_artifacts_by_external_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifacts_by_external_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifacts_by_external_ids_ = select_artifacts_by_external_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifacts_by_external_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_artifact = 21;
inline bool MetadataSourceQueryConfig::_internal_has_update_artifact() const {
  return this != internal_default_instance() && _impl_.update_artifact_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_artifact() const {
  return _internal_has_update_artifact();
}
inline void MetadataSourceQueryConfig::clear_update_artifact() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_artifact_ != nullptr) {
    delete _impl_.update_artifact_;
  }
  _impl_.update_artifact_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_artifact() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_artifact_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_artifact)
  return _internal_update_artifact();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_artifact(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_artifact_);
  }
  _impl_.update_artifact_ = update_artifact;
  if (update_artifact) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_artifact)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_artifact() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_artifact_;
  _impl_.update_artifact_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_artifact)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_artifact_;
  _impl_.update_artifact_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_artifact() {
  
  if (_impl_.update_artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_artifact_ = p;
  }
  return _impl_.update_artifact_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_artifact() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_artifact)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_artifact(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_artifact_;
  }
  if (update_artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_artifact);
    if (message_arena != submessage_arena) {
      update_artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_artifact, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_artifact_ = update_artifact;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_artifact)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_artifact_property_table = 16;
inline bool MetadataSourceQueryConfig::_internal_has_drop_artifact_property_table() const {
  return this != internal_default_instance() && _impl_.drop_artifact_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_artifact_property_table() const {
  return _internal_has_drop_artifact_property_table();
}
inline void MetadataSourceQueryConfig::clear_drop_artifact_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_artifact_property_table_ != nullptr) {
    delete _impl_.drop_artifact_property_table_;
  }
  _impl_.drop_artifact_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_artifact_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_artifact_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_artifact_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_artifact_property_table)
  return _internal_drop_artifact_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_artifact_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_artifact_property_table_);
  }
  _impl_.drop_artifact_property_table_ = drop_artifact_property_table;
  if (drop_artifact_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_artifact_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_artifact_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_artifact_property_table_;
  _impl_.drop_artifact_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_artifact_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_artifact_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_artifact_property_table_;
  _impl_.drop_artifact_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_artifact_property_table() {
  
  if (_impl_.drop_artifact_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_artifact_property_table_ = p;
  }
  return _impl_.drop_artifact_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_artifact_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_artifact_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_artifact_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_artifact_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_artifact_property_table_;
  }
  if (drop_artifact_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_artifact_property_table);
    if (message_arena != submessage_arena) {
      drop_artifact_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_artifact_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_artifact_property_table_ = drop_artifact_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_artifact_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_artifact_property_table = 17;
inline bool MetadataSourceQueryConfig::_internal_has_create_artifact_property_table() const {
  return this != internal_default_instance() && _impl_.create_artifact_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_artifact_property_table() const {
  return _internal_has_create_artifact_property_table();
}
inline void MetadataSourceQueryConfig::clear_create_artifact_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_artifact_property_table_ != nullptr) {
    delete _impl_.create_artifact_property_table_;
  }
  _impl_.create_artifact_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_artifact_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_artifact_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_artifact_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_artifact_property_table)
  return _internal_create_artifact_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_artifact_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_artifact_property_table_);
  }
  _impl_.create_artifact_property_table_ = create_artifact_property_table;
  if (create_artifact_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_artifact_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_artifact_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_artifact_property_table_;
  _impl_.create_artifact_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_artifact_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_artifact_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_artifact_property_table_;
  _impl_.create_artifact_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_artifact_property_table() {
  
  if (_impl_.create_artifact_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_artifact_property_table_ = p;
  }
  return _impl_.create_artifact_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_artifact_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_artifact_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_artifact_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_artifact_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_artifact_property_table_;
  }
  if (create_artifact_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_artifact_property_table);
    if (message_arena != submessage_arena) {
      create_artifact_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_artifact_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_artifact_property_table_ = create_artifact_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_artifact_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_artifact_property_table = 47;
inline bool MetadataSourceQueryConfig::_internal_has_check_artifact_property_table() const {
  return this != internal_default_instance() && _impl_.check_artifact_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_artifact_property_table() const {
  return _internal_has_check_artifact_property_table();
}
inline void MetadataSourceQueryConfig::clear_check_artifact_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_artifact_property_table_ != nullptr) {
    delete _impl_.check_artifact_property_table_;
  }
  _impl_.check_artifact_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_artifact_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_artifact_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_artifact_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_artifact_property_table)
  return _internal_check_artifact_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_artifact_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_artifact_property_table_);
  }
  _impl_.check_artifact_property_table_ = check_artifact_property_table;
  if (check_artifact_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_artifact_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_artifact_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_artifact_property_table_;
  _impl_.check_artifact_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_artifact_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_artifact_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_artifact_property_table_;
  _impl_.check_artifact_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_artifact_property_table() {
  
  if (_impl_.check_artifact_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_artifact_property_table_ = p;
  }
  return _impl_.check_artifact_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_artifact_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_artifact_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_artifact_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_artifact_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_artifact_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_artifact_property_table_;
  }
  if (check_artifact_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_artifact_property_table);
    if (message_arena != submessage_arena) {
      check_artifact_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_artifact_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_artifact_property_table_ = check_artifact_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_artifact_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_artifact_property = 18;
inline bool MetadataSourceQueryConfig::_internal_has_insert_artifact_property() const {
  return this != internal_default_instance() && _impl_.insert_artifact_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_artifact_property() const {
  return _internal_has_insert_artifact_property();
}
inline void MetadataSourceQueryConfig::clear_insert_artifact_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_artifact_property_ != nullptr) {
    delete _impl_.insert_artifact_property_;
  }
  _impl_.insert_artifact_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_artifact_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_artifact_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_artifact_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_artifact_property)
  return _internal_insert_artifact_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_artifact_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_artifact_property_);
  }
  _impl_.insert_artifact_property_ = insert_artifact_property;
  if (insert_artifact_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_artifact_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_property_;
  _impl_.insert_artifact_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_artifact_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_artifact_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_artifact_property_;
  _impl_.insert_artifact_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_artifact_property() {
  
  if (_impl_.insert_artifact_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_artifact_property_ = p;
  }
  return _impl_.insert_artifact_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_artifact_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_artifact_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_artifact_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_artifact_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_artifact_property_;
  }
  if (insert_artifact_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_artifact_property);
    if (message_arena != submessage_arena) {
      insert_artifact_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_artifact_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_artifact_property_ = insert_artifact_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_artifact_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_artifact_property_by_artifact_id = 19;
inline bool MetadataSourceQueryConfig::_internal_has_select_artifact_property_by_artifact_id() const {
  return this != internal_default_instance() && _impl_.select_artifact_property_by_artifact_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_artifact_property_by_artifact_id() const {
  return _internal_has_select_artifact_property_by_artifact_id();
}
inline void MetadataSourceQueryConfig::clear_select_artifact_property_by_artifact_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_artifact_property_by_artifact_id_ != nullptr) {
    delete _impl_.select_artifact_property_by_artifact_id_;
  }
  _impl_.select_artifact_property_by_artifact_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_artifact_property_by_artifact_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_artifact_property_by_artifact_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_artifact_property_by_artifact_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_artifact_property_by_artifact_id)
  return _internal_select_artifact_property_by_artifact_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_artifact_property_by_artifact_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_property_by_artifact_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_artifact_property_by_artifact_id_);
  }
  _impl_.select_artifact_property_by_artifact_id_ = select_artifact_property_by_artifact_id;
  if (select_artifact_property_by_artifact_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_property_by_artifact_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_artifact_property_by_artifact_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_property_by_artifact_id_;
  _impl_.select_artifact_property_by_artifact_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_artifact_property_by_artifact_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_artifact_property_by_artifact_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_artifact_property_by_artifact_id_;
  _impl_.select_artifact_property_by_artifact_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_artifact_property_by_artifact_id() {
  
  if (_impl_.select_artifact_property_by_artifact_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_artifact_property_by_artifact_id_ = p;
  }
  return _impl_.select_artifact_property_by_artifact_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_artifact_property_by_artifact_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_artifact_property_by_artifact_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_artifact_property_by_artifact_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_artifact_property_by_artifact_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_artifact_property_by_artifact_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_artifact_property_by_artifact_id_;
  }
  if (select_artifact_property_by_artifact_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_artifact_property_by_artifact_id);
    if (message_arena != submessage_arena) {
      select_artifact_property_by_artifact_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_artifact_property_by_artifact_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_artifact_property_by_artifact_id_ = select_artifact_property_by_artifact_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_artifact_property_by_artifact_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_artifact_property = 22;
inline bool MetadataSourceQueryConfig::_internal_has_update_artifact_property() const {
  return this != internal_default_instance() && _impl_.update_artifact_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_artifact_property() const {
  return _internal_has_update_artifact_property();
}
inline void MetadataSourceQueryConfig::clear_update_artifact_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_artifact_property_ != nullptr) {
    delete _impl_.update_artifact_property_;
  }
  _impl_.update_artifact_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_artifact_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_artifact_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_artifact_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_artifact_property)
  return _internal_update_artifact_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_artifact_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_artifact_property_);
  }
  _impl_.update_artifact_property_ = update_artifact_property;
  if (update_artifact_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_artifact_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_artifact_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_artifact_property_;
  _impl_.update_artifact_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_artifact_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_artifact_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_artifact_property_;
  _impl_.update_artifact_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_artifact_property() {
  
  if (_impl_.update_artifact_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_artifact_property_ = p;
  }
  return _impl_.update_artifact_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_artifact_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_artifact_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_artifact_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_artifact_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_artifact_property_;
  }
  if (update_artifact_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_artifact_property);
    if (message_arena != submessage_arena) {
      update_artifact_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_artifact_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_artifact_property_ = update_artifact_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_artifact_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifact_property = 23;
inline bool MetadataSourceQueryConfig::_internal_has_delete_artifact_property() const {
  return this != internal_default_instance() && _impl_.delete_artifact_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_artifact_property() const {
  return _internal_has_delete_artifact_property();
}
inline void MetadataSourceQueryConfig::clear_delete_artifact_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_artifact_property_ != nullptr) {
    delete _impl_.delete_artifact_property_;
  }
  _impl_.delete_artifact_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_artifact_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_artifact_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_artifact_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_artifact_property)
  return _internal_delete_artifact_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_artifact_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifact_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_artifact_property_);
  }
  _impl_.delete_artifact_property_ = delete_artifact_property;
  if (delete_artifact_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifact_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_artifact_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifact_property_;
  _impl_.delete_artifact_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_artifact_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_artifact_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifact_property_;
  _impl_.delete_artifact_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_artifact_property() {
  
  if (_impl_.delete_artifact_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_artifact_property_ = p;
  }
  return _impl_.delete_artifact_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_artifact_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_artifact_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_artifact_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_artifact_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifact_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_artifact_property_;
  }
  if (delete_artifact_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_artifact_property);
    if (message_arena != submessage_arena) {
      delete_artifact_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_artifact_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_artifact_property_ = delete_artifact_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifact_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_execution_table = 24;
inline bool MetadataSourceQueryConfig::_internal_has_drop_execution_table() const {
  return this != internal_default_instance() && _impl_.drop_execution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_execution_table() const {
  return _internal_has_drop_execution_table();
}
inline void MetadataSourceQueryConfig::clear_drop_execution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_execution_table_ != nullptr) {
    delete _impl_.drop_execution_table_;
  }
  _impl_.drop_execution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_execution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_execution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_execution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_execution_table)
  return _internal_drop_execution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_execution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_execution_table_);
  }
  _impl_.drop_execution_table_ = drop_execution_table;
  if (drop_execution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_execution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_execution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_execution_table_;
  _impl_.drop_execution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_execution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_execution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_execution_table_;
  _impl_.drop_execution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_execution_table() {
  
  if (_impl_.drop_execution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_execution_table_ = p;
  }
  return _impl_.drop_execution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_execution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_execution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_execution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_execution_table_;
  }
  if (drop_execution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_execution_table);
    if (message_arena != submessage_arena) {
      drop_execution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_execution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_execution_table_ = drop_execution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_execution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_execution_table = 25;
inline bool MetadataSourceQueryConfig::_internal_has_create_execution_table() const {
  return this != internal_default_instance() && _impl_.create_execution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_execution_table() const {
  return _internal_has_create_execution_table();
}
inline void MetadataSourceQueryConfig::clear_create_execution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_execution_table_ != nullptr) {
    delete _impl_.create_execution_table_;
  }
  _impl_.create_execution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_execution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_execution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_execution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_execution_table)
  return _internal_create_execution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_execution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_execution_table_);
  }
  _impl_.create_execution_table_ = create_execution_table;
  if (create_execution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_execution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_execution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_execution_table_;
  _impl_.create_execution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_execution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_execution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_execution_table_;
  _impl_.create_execution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_execution_table() {
  
  if (_impl_.create_execution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_execution_table_ = p;
  }
  return _impl_.create_execution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_execution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_execution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_execution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_execution_table_;
  }
  if (create_execution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_execution_table);
    if (message_arena != submessage_arena) {
      create_execution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_execution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_execution_table_ = create_execution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_execution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_execution_table = 48;
inline bool MetadataSourceQueryConfig::_internal_has_check_execution_table() const {
  return this != internal_default_instance() && _impl_.check_execution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_execution_table() const {
  return _internal_has_check_execution_table();
}
inline void MetadataSourceQueryConfig::clear_check_execution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_execution_table_ != nullptr) {
    delete _impl_.check_execution_table_;
  }
  _impl_.check_execution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_execution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_execution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_execution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_execution_table)
  return _internal_check_execution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_execution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_execution_table_);
  }
  _impl_.check_execution_table_ = check_execution_table;
  if (check_execution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_execution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_execution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_execution_table_;
  _impl_.check_execution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_execution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_execution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_execution_table_;
  _impl_.check_execution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_execution_table() {
  
  if (_impl_.check_execution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_execution_table_ = p;
  }
  return _impl_.check_execution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_execution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_execution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_execution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_execution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_execution_table_;
  }
  if (check_execution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_execution_table);
    if (message_arena != submessage_arena) {
      check_execution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_execution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_execution_table_ = check_execution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_execution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution = 28;
inline bool MetadataSourceQueryConfig::_internal_has_insert_execution() const {
  return this != internal_default_instance() && _impl_.insert_execution_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_execution() const {
  return _internal_has_insert_execution();
}
inline void MetadataSourceQueryConfig::clear_insert_execution() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_execution_ != nullptr) {
    delete _impl_.insert_execution_;
  }
  _impl_.insert_execution_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_execution() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_execution_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_execution() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_execution)
  return _internal_insert_execution();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_execution(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_execution_);
  }
  _impl_.insert_execution_ = insert_execution;
  if (insert_execution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_execution() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_;
  _impl_.insert_execution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_execution() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_execution)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_;
  _impl_.insert_execution_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_execution() {
  
  if (_impl_.insert_execution_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_execution_ = p;
  }
  return _impl_.insert_execution_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_execution() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_execution();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_execution)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_execution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_execution_;
  }
  if (insert_execution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_execution);
    if (message_arena != submessage_arena) {
      insert_execution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_execution, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_execution_ = insert_execution;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_by_id = 29;
inline bool MetadataSourceQueryConfig::_internal_has_select_execution_by_id() const {
  return this != internal_default_instance() && _impl_.select_execution_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_execution_by_id() const {
  return _internal_has_select_execution_by_id();
}
inline void MetadataSourceQueryConfig::clear_select_execution_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_execution_by_id_ != nullptr) {
    delete _impl_.select_execution_by_id_;
  }
  _impl_.select_execution_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_execution_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_execution_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_execution_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_execution_by_id)
  return _internal_select_execution_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_execution_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_execution_by_id_);
  }
  _impl_.select_execution_by_id_ = select_execution_by_id;
  if (select_execution_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_execution_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_by_id_;
  _impl_.select_execution_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_execution_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_execution_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_by_id_;
  _impl_.select_execution_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_execution_by_id() {
  
  if (_impl_.select_execution_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_execution_by_id_ = p;
  }
  return _impl_.select_execution_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_execution_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_execution_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_execution_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_execution_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_execution_by_id_;
  }
  if (select_execution_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_execution_by_id);
    if (message_arena != submessage_arena) {
      select_execution_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_execution_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_execution_by_id_ = select_execution_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_by_type_id_and_name = 95;
inline bool MetadataSourceQueryConfig::_internal_has_select_execution_by_type_id_and_name() const {
  return this != internal_default_instance() && _impl_.select_execution_by_type_id_and_name_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_execution_by_type_id_and_name() const {
  return _internal_has_select_execution_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::clear_select_execution_by_type_id_and_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_execution_by_type_id_and_name_ != nullptr) {
    delete _impl_.select_execution_by_type_id_and_name_;
  }
  _impl_.select_execution_by_type_id_and_name_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_execution_by_type_id_and_name() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_execution_by_type_id_and_name_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_execution_by_type_id_and_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_execution_by_type_id_and_name)
  return _internal_select_execution_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_execution_by_type_id_and_name(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_type_id_and_name) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_execution_by_type_id_and_name_);
  }
  _impl_.select_execution_by_type_id_and_name_ = select_execution_by_type_id_and_name;
  if (select_execution_by_type_id_and_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_by_type_id_and_name)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_execution_by_type_id_and_name() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_by_type_id_and_name_;
  _impl_.select_execution_by_type_id_and_name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_execution_by_type_id_and_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_execution_by_type_id_and_name)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_by_type_id_and_name_;
  _impl_.select_execution_by_type_id_and_name_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_execution_by_type_id_and_name() {
  
  if (_impl_.select_execution_by_type_id_and_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_execution_by_type_id_and_name_ = p;
  }
  return _impl_.select_execution_by_type_id_and_name_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_execution_by_type_id_and_name() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_execution_by_type_id_and_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_execution_by_type_id_and_name)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_execution_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_by_type_id_and_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_execution_by_type_id_and_name_;
  }
  if (select_execution_by_type_id_and_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_execution_by_type_id_and_name);
    if (message_arena != submessage_arena) {
      select_execution_by_type_id_and_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_execution_by_type_id_and_name, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_execution_by_type_id_and_name_ = select_execution_by_type_id_and_name;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_by_type_id_and_name)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_executions_by_type_id = 53;
inline bool MetadataSourceQueryConfig::_internal_has_select_executions_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_executions_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_executions_by_type_id() const {
  return _internal_has_select_executions_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_executions_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_executions_by_type_id_ != nullptr) {
    delete _impl_.select_executions_by_type_id_;
  }
  _impl_.select_executions_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_executions_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_executions_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_executions_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_executions_by_type_id)
  return _internal_select_executions_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_executions_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_executions_by_type_id_);
  }
  _impl_.select_executions_by_type_id_ = select_executions_by_type_id;
  if (select_executions_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_executions_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_executions_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_executions_by_type_id_;
  _impl_.select_executions_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_executions_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_executions_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_executions_by_type_id_;
  _impl_.select_executions_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_executions_by_type_id() {
  
  if (_impl_.select_executions_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_executions_by_type_id_ = p;
  }
  return _impl_.select_executions_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_executions_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_executions_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_executions_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_executions_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_executions_by_type_id_;
  }
  if (select_executions_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_executions_by_type_id);
    if (message_arena != submessage_arena) {
      select_executions_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_executions_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_executions_by_type_id_ = select_executions_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_executions_by_type_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_executions_by_external_ids = 132;
inline bool MetadataSourceQueryConfig::_internal_has_select_executions_by_external_ids() const {
  return this != internal_default_instance() && _impl_.select_executions_by_external_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_executions_by_external_ids() const {
  return _internal_has_select_executions_by_external_ids();
}
inline void MetadataSourceQueryConfig::clear_select_executions_by_external_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_executions_by_external_ids_ != nullptr) {
    delete _impl_.select_executions_by_external_ids_;
  }
  _impl_.select_executions_by_external_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_executions_by_external_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_executions_by_external_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_executions_by_external_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_executions_by_external_ids)
  return _internal_select_executions_by_external_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_executions_by_external_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_external_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_executions_by_external_ids_);
  }
  _impl_.select_executions_by_external_ids_ = select_executions_by_external_ids;
  if (select_executions_by_external_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_executions_by_external_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_executions_by_external_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_executions_by_external_ids_;
  _impl_.select_executions_by_external_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_executions_by_external_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_executions_by_external_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_executions_by_external_ids_;
  _impl_.select_executions_by_external_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_executions_by_external_ids() {
  
  if (_impl_.select_executions_by_external_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_executions_by_external_ids_ = p;
  }
  return _impl_.select_executions_by_external_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_executions_by_external_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_executions_by_external_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_executions_by_external_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_executions_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_executions_by_external_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_executions_by_external_ids_;
  }
  if (select_executions_by_external_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_executions_by_external_ids);
    if (message_arena != submessage_arena) {
      select_executions_by_external_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_executions_by_external_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_executions_by_external_ids_ = select_executions_by_external_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_executions_by_external_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_execution = 34;
inline bool MetadataSourceQueryConfig::_internal_has_update_execution() const {
  return this != internal_default_instance() && _impl_.update_execution_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_execution() const {
  return _internal_has_update_execution();
}
inline void MetadataSourceQueryConfig::clear_update_execution() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_execution_ != nullptr) {
    delete _impl_.update_execution_;
  }
  _impl_.update_execution_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_execution() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_execution_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_execution() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_execution)
  return _internal_update_execution();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_execution(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_execution_);
  }
  _impl_.update_execution_ = update_execution;
  if (update_execution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_execution)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_execution() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_execution_;
  _impl_.update_execution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_execution() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_execution)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_execution_;
  _impl_.update_execution_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_execution() {
  
  if (_impl_.update_execution_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_execution_ = p;
  }
  return _impl_.update_execution_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_execution() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_execution();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_execution)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_execution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_execution_;
  }
  if (update_execution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_execution);
    if (message_arena != submessage_arena) {
      update_execution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_execution, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_execution_ = update_execution;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_execution)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_execution_property_table = 26;
inline bool MetadataSourceQueryConfig::_internal_has_drop_execution_property_table() const {
  return this != internal_default_instance() && _impl_.drop_execution_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_execution_property_table() const {
  return _internal_has_drop_execution_property_table();
}
inline void MetadataSourceQueryConfig::clear_drop_execution_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_execution_property_table_ != nullptr) {
    delete _impl_.drop_execution_property_table_;
  }
  _impl_.drop_execution_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_execution_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_execution_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_execution_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_execution_property_table)
  return _internal_drop_execution_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_execution_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_execution_property_table_);
  }
  _impl_.drop_execution_property_table_ = drop_execution_property_table;
  if (drop_execution_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_execution_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_execution_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_execution_property_table_;
  _impl_.drop_execution_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_execution_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_execution_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_execution_property_table_;
  _impl_.drop_execution_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_execution_property_table() {
  
  if (_impl_.drop_execution_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_execution_property_table_ = p;
  }
  return _impl_.drop_execution_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_execution_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_execution_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_execution_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_execution_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_execution_property_table_;
  }
  if (drop_execution_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_execution_property_table);
    if (message_arena != submessage_arena) {
      drop_execution_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_execution_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_execution_property_table_ = drop_execution_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_execution_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_execution_property_table = 27;
inline bool MetadataSourceQueryConfig::_internal_has_create_execution_property_table() const {
  return this != internal_default_instance() && _impl_.create_execution_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_execution_property_table() const {
  return _internal_has_create_execution_property_table();
}
inline void MetadataSourceQueryConfig::clear_create_execution_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_execution_property_table_ != nullptr) {
    delete _impl_.create_execution_property_table_;
  }
  _impl_.create_execution_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_execution_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_execution_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_execution_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_execution_property_table)
  return _internal_create_execution_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_execution_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_execution_property_table_);
  }
  _impl_.create_execution_property_table_ = create_execution_property_table;
  if (create_execution_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_execution_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_execution_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_execution_property_table_;
  _impl_.create_execution_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_execution_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_execution_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_execution_property_table_;
  _impl_.create_execution_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_execution_property_table() {
  
  if (_impl_.create_execution_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_execution_property_table_ = p;
  }
  return _impl_.create_execution_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_execution_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_execution_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_execution_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_execution_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_execution_property_table_;
  }
  if (create_execution_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_execution_property_table);
    if (message_arena != submessage_arena) {
      create_execution_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_execution_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_execution_property_table_ = create_execution_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_execution_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_execution_property_table = 49;
inline bool MetadataSourceQueryConfig::_internal_has_check_execution_property_table() const {
  return this != internal_default_instance() && _impl_.check_execution_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_execution_property_table() const {
  return _internal_has_check_execution_property_table();
}
inline void MetadataSourceQueryConfig::clear_check_execution_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_execution_property_table_ != nullptr) {
    delete _impl_.check_execution_property_table_;
  }
  _impl_.check_execution_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_execution_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_execution_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_execution_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_execution_property_table)
  return _internal_check_execution_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_execution_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_execution_property_table_);
  }
  _impl_.check_execution_property_table_ = check_execution_property_table;
  if (check_execution_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_execution_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_execution_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_execution_property_table_;
  _impl_.check_execution_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_execution_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_execution_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_execution_property_table_;
  _impl_.check_execution_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_execution_property_table() {
  
  if (_impl_.check_execution_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_execution_property_table_ = p;
  }
  return _impl_.check_execution_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_execution_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_execution_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_execution_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_execution_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_execution_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_execution_property_table_;
  }
  if (check_execution_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_execution_property_table);
    if (message_arena != submessage_arena) {
      check_execution_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_execution_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_execution_property_table_ = check_execution_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_execution_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_execution_property = 30;
inline bool MetadataSourceQueryConfig::_internal_has_insert_execution_property() const {
  return this != internal_default_instance() && _impl_.insert_execution_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_execution_property() const {
  return _internal_has_insert_execution_property();
}
inline void MetadataSourceQueryConfig::clear_insert_execution_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_execution_property_ != nullptr) {
    delete _impl_.insert_execution_property_;
  }
  _impl_.insert_execution_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_execution_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_execution_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_execution_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_execution_property)
  return _internal_insert_execution_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_execution_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_execution_property_);
  }
  _impl_.insert_execution_property_ = insert_execution_property;
  if (insert_execution_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_execution_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_property_;
  _impl_.insert_execution_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_execution_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_execution_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_execution_property_;
  _impl_.insert_execution_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_execution_property() {
  
  if (_impl_.insert_execution_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_execution_property_ = p;
  }
  return _impl_.insert_execution_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_execution_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_execution_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_execution_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_execution_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_execution_property_;
  }
  if (insert_execution_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_execution_property);
    if (message_arena != submessage_arena) {
      insert_execution_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_execution_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_execution_property_ = insert_execution_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_execution_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_execution_property_by_execution_id = 31;
inline bool MetadataSourceQueryConfig::_internal_has_select_execution_property_by_execution_id() const {
  return this != internal_default_instance() && _impl_.select_execution_property_by_execution_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_execution_property_by_execution_id() const {
  return _internal_has_select_execution_property_by_execution_id();
}
inline void MetadataSourceQueryConfig::clear_select_execution_property_by_execution_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_execution_property_by_execution_id_ != nullptr) {
    delete _impl_.select_execution_property_by_execution_id_;
  }
  _impl_.select_execution_property_by_execution_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_execution_property_by_execution_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_execution_property_by_execution_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_execution_property_by_execution_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_execution_property_by_execution_id)
  return _internal_select_execution_property_by_execution_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_execution_property_by_execution_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_property_by_execution_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_execution_property_by_execution_id_);
  }
  _impl_.select_execution_property_by_execution_id_ = select_execution_property_by_execution_id;
  if (select_execution_property_by_execution_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_property_by_execution_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_execution_property_by_execution_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_property_by_execution_id_;
  _impl_.select_execution_property_by_execution_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_execution_property_by_execution_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_execution_property_by_execution_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_execution_property_by_execution_id_;
  _impl_.select_execution_property_by_execution_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_execution_property_by_execution_id() {
  
  if (_impl_.select_execution_property_by_execution_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_execution_property_by_execution_id_ = p;
  }
  return _impl_.select_execution_property_by_execution_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_execution_property_by_execution_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_execution_property_by_execution_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_execution_property_by_execution_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_execution_property_by_execution_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_execution_property_by_execution_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_execution_property_by_execution_id_;
  }
  if (select_execution_property_by_execution_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_execution_property_by_execution_id);
    if (message_arena != submessage_arena) {
      select_execution_property_by_execution_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_execution_property_by_execution_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_execution_property_by_execution_id_ = select_execution_property_by_execution_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_execution_property_by_execution_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_execution_property = 32;
inline bool MetadataSourceQueryConfig::_internal_has_update_execution_property() const {
  return this != internal_default_instance() && _impl_.update_execution_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_execution_property() const {
  return _internal_has_update_execution_property();
}
inline void MetadataSourceQueryConfig::clear_update_execution_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_execution_property_ != nullptr) {
    delete _impl_.update_execution_property_;
  }
  _impl_.update_execution_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_execution_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_execution_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_execution_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_execution_property)
  return _internal_update_execution_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_execution_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_execution_property_);
  }
  _impl_.update_execution_property_ = update_execution_property;
  if (update_execution_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_execution_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_execution_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_execution_property_;
  _impl_.update_execution_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_execution_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_execution_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_execution_property_;
  _impl_.update_execution_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_execution_property() {
  
  if (_impl_.update_execution_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_execution_property_ = p;
  }
  return _impl_.update_execution_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_execution_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_execution_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_execution_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_execution_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_execution_property_;
  }
  if (update_execution_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_execution_property);
    if (message_arena != submessage_arena) {
      update_execution_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_execution_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_execution_property_ = update_execution_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_execution_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_execution_property = 33;
inline bool MetadataSourceQueryConfig::_internal_has_delete_execution_property() const {
  return this != internal_default_instance() && _impl_.delete_execution_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_execution_property() const {
  return _internal_has_delete_execution_property();
}
inline void MetadataSourceQueryConfig::clear_delete_execution_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_execution_property_ != nullptr) {
    delete _impl_.delete_execution_property_;
  }
  _impl_.delete_execution_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_execution_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_execution_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_execution_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_execution_property)
  return _internal_delete_execution_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_execution_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_execution_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_execution_property_);
  }
  _impl_.delete_execution_property_ = delete_execution_property;
  if (delete_execution_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_execution_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_execution_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_execution_property_;
  _impl_.delete_execution_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_execution_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_execution_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_execution_property_;
  _impl_.delete_execution_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_execution_property() {
  
  if (_impl_.delete_execution_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_execution_property_ = p;
  }
  return _impl_.delete_execution_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_execution_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_execution_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_execution_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_execution_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_execution_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_execution_property_;
  }
  if (delete_execution_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_execution_property);
    if (message_arena != submessage_arena) {
      delete_execution_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_execution_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_execution_property_ = delete_execution_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_execution_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_context_table = 67;
inline bool MetadataSourceQueryConfig::_internal_has_drop_context_table() const {
  return this != internal_default_instance() && _impl_.drop_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_context_table() const {
  return _internal_has_drop_context_table();
}
inline void MetadataSourceQueryConfig::clear_drop_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_context_table_ != nullptr) {
    delete _impl_.drop_context_table_;
  }
  _impl_.drop_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_context_table)
  return _internal_drop_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_context_table_);
  }
  _impl_.drop_context_table_ = drop_context_table;
  if (drop_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_context_table_;
  _impl_.drop_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_context_table_;
  _impl_.drop_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_context_table() {
  
  if (_impl_.drop_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_context_table_ = p;
  }
  return _impl_.drop_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_context_table_;
  }
  if (drop_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_context_table);
    if (message_arena != submessage_arena) {
      drop_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_context_table_ = drop_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_context_table = 68;
inline bool MetadataSourceQueryConfig::_internal_has_create_context_table() const {
  return this != internal_default_instance() && _impl_.create_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_context_table() const {
  return _internal_has_create_context_table();
}
inline void MetadataSourceQueryConfig::clear_create_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_context_table_ != nullptr) {
    delete _impl_.create_context_table_;
  }
  _impl_.create_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_context_table)
  return _internal_create_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_context_table_);
  }
  _impl_.create_context_table_ = create_context_table;
  if (create_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_context_table_;
  _impl_.create_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_context_table_;
  _impl_.create_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_context_table() {
  
  if (_impl_.create_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_context_table_ = p;
  }
  return _impl_.create_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_context_table_;
  }
  if (create_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_context_table);
    if (message_arena != submessage_arena) {
      create_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_context_table_ = create_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_context_table = 69;
inline bool MetadataSourceQueryConfig::_internal_has_check_context_table() const {
  return this != internal_default_instance() && _impl_.check_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_context_table() const {
  return _internal_has_check_context_table();
}
inline void MetadataSourceQueryConfig::clear_check_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_context_table_ != nullptr) {
    delete _impl_.check_context_table_;
  }
  _impl_.check_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_context_table)
  return _internal_check_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_context_table_);
  }
  _impl_.check_context_table_ = check_context_table;
  if (check_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_context_table_;
  _impl_.check_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_context_table_;
  _impl_.check_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_context_table() {
  
  if (_impl_.check_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_context_table_ = p;
  }
  return _impl_.check_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_context_table_;
  }
  if (check_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_context_table);
    if (message_arena != submessage_arena) {
      check_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_context_table_ = check_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context = 70;
inline bool MetadataSourceQueryConfig::_internal_has_insert_context() const {
  return this != internal_default_instance() && _impl_.insert_context_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_context() const {
  return _internal_has_insert_context();
}
inline void MetadataSourceQueryConfig::clear_insert_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_context_ != nullptr) {
    delete _impl_.insert_context_;
  }
  _impl_.insert_context_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_context() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_context_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_context() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_context)
  return _internal_insert_context();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_context(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_context_);
  }
  _impl_.insert_context_ = insert_context;
  if (insert_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_context() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_;
  _impl_.insert_context_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_context() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_context)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_;
  _impl_.insert_context_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_context() {
  
  if (_impl_.insert_context_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_context_ = p;
  }
  return _impl_.insert_context_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_context() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_context();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_context)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_context_;
  }
  if (insert_context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_context);
    if (message_arena != submessage_arena) {
      insert_context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_context, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_context_ = insert_context;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_by_id = 71;
inline bool MetadataSourceQueryConfig::_internal_has_select_context_by_id() const {
  return this != internal_default_instance() && _impl_.select_context_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_context_by_id() const {
  return _internal_has_select_context_by_id();
}
inline void MetadataSourceQueryConfig::clear_select_context_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_context_by_id_ != nullptr) {
    delete _impl_.select_context_by_id_;
  }
  _impl_.select_context_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_context_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_context_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_context_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_context_by_id)
  return _internal_select_context_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_context_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_context_by_id_);
  }
  _impl_.select_context_by_id_ = select_context_by_id;
  if (select_context_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_context_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_by_id_;
  _impl_.select_context_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_context_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_context_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_by_id_;
  _impl_.select_context_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_context_by_id() {
  
  if (_impl_.select_context_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_context_by_id_ = p;
  }
  return _impl_.select_context_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_context_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_context_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_context_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_context_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_context_by_id_;
  }
  if (select_context_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_context_by_id);
    if (message_arena != submessage_arena) {
      select_context_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_context_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_context_by_id_ = select_context_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_contexts_by_type_id = 72;
inline bool MetadataSourceQueryConfig::_internal_has_select_contexts_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_contexts_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_contexts_by_type_id() const {
  return _internal_has_select_contexts_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_contexts_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_contexts_by_type_id_ != nullptr) {
    delete _impl_.select_contexts_by_type_id_;
  }
  _impl_.select_contexts_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_contexts_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_contexts_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_contexts_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_type_id)
  return _internal_select_contexts_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_contexts_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_contexts_by_type_id_);
  }
  _impl_.select_contexts_by_type_id_ = select_contexts_by_type_id;
  if (select_contexts_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_contexts_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_contexts_by_type_id_;
  _impl_.select_contexts_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_contexts_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_contexts_by_type_id_;
  _impl_.select_contexts_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_contexts_by_type_id() {
  
  if (_impl_.select_contexts_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_contexts_by_type_id_ = p;
  }
  return _impl_.select_contexts_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_contexts_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_contexts_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_contexts_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_contexts_by_type_id_;
  }
  if (select_contexts_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_contexts_by_type_id);
    if (message_arena != submessage_arena) {
      select_contexts_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_contexts_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_contexts_by_type_id_ = select_contexts_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_type_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_by_type_id_and_name = 93;
inline bool MetadataSourceQueryConfig::_internal_has_select_context_by_type_id_and_name() const {
  return this != internal_default_instance() && _impl_.select_context_by_type_id_and_name_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_context_by_type_id_and_name() const {
  return _internal_has_select_context_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::clear_select_context_by_type_id_and_name() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_context_by_type_id_and_name_ != nullptr) {
    delete _impl_.select_context_by_type_id_and_name_;
  }
  _impl_.select_context_by_type_id_and_name_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_context_by_type_id_and_name() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_context_by_type_id_and_name_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_context_by_type_id_and_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_context_by_type_id_and_name)
  return _internal_select_context_by_type_id_and_name();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_context_by_type_id_and_name(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_type_id_and_name) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_context_by_type_id_and_name_);
  }
  _impl_.select_context_by_type_id_and_name_ = select_context_by_type_id_and_name;
  if (select_context_by_type_id_and_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_by_type_id_and_name)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_context_by_type_id_and_name() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_by_type_id_and_name_;
  _impl_.select_context_by_type_id_and_name_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_context_by_type_id_and_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_context_by_type_id_and_name)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_by_type_id_and_name_;
  _impl_.select_context_by_type_id_and_name_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_context_by_type_id_and_name() {
  
  if (_impl_.select_context_by_type_id_and_name_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_context_by_type_id_and_name_ = p;
  }
  return _impl_.select_context_by_type_id_and_name_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_context_by_type_id_and_name() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_context_by_type_id_and_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_context_by_type_id_and_name)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_context_by_type_id_and_name(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_by_type_id_and_name) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_context_by_type_id_and_name_;
  }
  if (select_context_by_type_id_and_name) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_context_by_type_id_and_name);
    if (message_arena != submessage_arena) {
      select_context_by_type_id_and_name = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_context_by_type_id_and_name, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_context_by_type_id_and_name_ = select_context_by_type_id_and_name;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_by_type_id_and_name)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_contexts_by_external_ids = 133;
inline bool MetadataSourceQueryConfig::_internal_has_select_contexts_by_external_ids() const {
  return this != internal_default_instance() && _impl_.select_contexts_by_external_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_contexts_by_external_ids() const {
  return _internal_has_select_contexts_by_external_ids();
}
inline void MetadataSourceQueryConfig::clear_select_contexts_by_external_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_contexts_by_external_ids_ != nullptr) {
    delete _impl_.select_contexts_by_external_ids_;
  }
  _impl_.select_contexts_by_external_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_contexts_by_external_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_contexts_by_external_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_contexts_by_external_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_external_ids)
  return _internal_select_contexts_by_external_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_contexts_by_external_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_external_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_contexts_by_external_ids_);
  }
  _impl_.select_contexts_by_external_ids_ = select_contexts_by_external_ids;
  if (select_contexts_by_external_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_external_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_contexts_by_external_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_contexts_by_external_ids_;
  _impl_.select_contexts_by_external_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_contexts_by_external_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_external_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_contexts_by_external_ids_;
  _impl_.select_contexts_by_external_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_contexts_by_external_ids() {
  
  if (_impl_.select_contexts_by_external_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_contexts_by_external_ids_ = p;
  }
  return _impl_.select_contexts_by_external_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_contexts_by_external_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_contexts_by_external_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_external_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_contexts_by_external_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_contexts_by_external_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_contexts_by_external_ids_;
  }
  if (select_contexts_by_external_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_contexts_by_external_ids);
    if (message_arena != submessage_arena) {
      select_contexts_by_external_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_contexts_by_external_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_contexts_by_external_ids_ = select_contexts_by_external_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_contexts_by_external_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_context = 73;
inline bool MetadataSourceQueryConfig::_internal_has_update_context() const {
  return this != internal_default_instance() && _impl_.update_context_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_context() const {
  return _internal_has_update_context();
}
inline void MetadataSourceQueryConfig::clear_update_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_context_ != nullptr) {
    delete _impl_.update_context_;
  }
  _impl_.update_context_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_context() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_context_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_context() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_context)
  return _internal_update_context();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_context(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_context_);
  }
  _impl_.update_context_ = update_context;
  if (update_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_context)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_context() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_context_;
  _impl_.update_context_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_context() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_context)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_context_;
  _impl_.update_context_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_context() {
  
  if (_impl_.update_context_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_context_ = p;
  }
  return _impl_.update_context_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_context() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_context();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_context)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_context_;
  }
  if (update_context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_context);
    if (message_arena != submessage_arena) {
      update_context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_context, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_context_ = update_context;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_context)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_context_property_table = 74;
inline bool MetadataSourceQueryConfig::_internal_has_drop_context_property_table() const {
  return this != internal_default_instance() && _impl_.drop_context_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_context_property_table() const {
  return _internal_has_drop_context_property_table();
}
inline void MetadataSourceQueryConfig::clear_drop_context_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_context_property_table_ != nullptr) {
    delete _impl_.drop_context_property_table_;
  }
  _impl_.drop_context_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_context_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_context_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_context_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_context_property_table)
  return _internal_drop_context_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_context_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_context_property_table_);
  }
  _impl_.drop_context_property_table_ = drop_context_property_table;
  if (drop_context_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_context_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_context_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_context_property_table_;
  _impl_.drop_context_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_context_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_context_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_context_property_table_;
  _impl_.drop_context_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_context_property_table() {
  
  if (_impl_.drop_context_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_context_property_table_ = p;
  }
  return _impl_.drop_context_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_context_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_context_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_context_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_context_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_context_property_table_;
  }
  if (drop_context_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_context_property_table);
    if (message_arena != submessage_arena) {
      drop_context_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_context_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_context_property_table_ = drop_context_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_context_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_context_property_table = 75;
inline bool MetadataSourceQueryConfig::_internal_has_create_context_property_table() const {
  return this != internal_default_instance() && _impl_.create_context_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_context_property_table() const {
  return _internal_has_create_context_property_table();
}
inline void MetadataSourceQueryConfig::clear_create_context_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_context_property_table_ != nullptr) {
    delete _impl_.create_context_property_table_;
  }
  _impl_.create_context_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_context_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_context_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_context_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_context_property_table)
  return _internal_create_context_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_context_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_context_property_table_);
  }
  _impl_.create_context_property_table_ = create_context_property_table;
  if (create_context_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_context_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_context_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_context_property_table_;
  _impl_.create_context_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_context_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_context_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_context_property_table_;
  _impl_.create_context_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_context_property_table() {
  
  if (_impl_.create_context_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_context_property_table_ = p;
  }
  return _impl_.create_context_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_context_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_context_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_context_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_context_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_context_property_table_;
  }
  if (create_context_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_context_property_table);
    if (message_arena != submessage_arena) {
      create_context_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_context_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_context_property_table_ = create_context_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_context_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_context_property_table = 76;
inline bool MetadataSourceQueryConfig::_internal_has_check_context_property_table() const {
  return this != internal_default_instance() && _impl_.check_context_property_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_context_property_table() const {
  return _internal_has_check_context_property_table();
}
inline void MetadataSourceQueryConfig::clear_check_context_property_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_context_property_table_ != nullptr) {
    delete _impl_.check_context_property_table_;
  }
  _impl_.check_context_property_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_context_property_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_context_property_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_context_property_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_context_property_table)
  return _internal_check_context_property_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_context_property_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_property_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_context_property_table_);
  }
  _impl_.check_context_property_table_ = check_context_property_table;
  if (check_context_property_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_context_property_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_context_property_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_context_property_table_;
  _impl_.check_context_property_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_context_property_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_context_property_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_context_property_table_;
  _impl_.check_context_property_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_context_property_table() {
  
  if (_impl_.check_context_property_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_context_property_table_ = p;
  }
  return _impl_.check_context_property_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_context_property_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_context_property_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_context_property_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_context_property_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_context_property_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_context_property_table_;
  }
  if (check_context_property_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_context_property_table);
    if (message_arena != submessage_arena) {
      check_context_property_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_context_property_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_context_property_table_ = check_context_property_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_context_property_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_context_property = 77;
inline bool MetadataSourceQueryConfig::_internal_has_insert_context_property() const {
  return this != internal_default_instance() && _impl_.insert_context_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_context_property() const {
  return _internal_has_insert_context_property();
}
inline void MetadataSourceQueryConfig::clear_insert_context_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_context_property_ != nullptr) {
    delete _impl_.insert_context_property_;
  }
  _impl_.insert_context_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_context_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_context_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_context_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_context_property)
  return _internal_insert_context_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_context_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_context_property_);
  }
  _impl_.insert_context_property_ = insert_context_property;
  if (insert_context_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_context_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_property_;
  _impl_.insert_context_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_context_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_context_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_context_property_;
  _impl_.insert_context_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_context_property() {
  
  if (_impl_.insert_context_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_context_property_ = p;
  }
  return _impl_.insert_context_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_context_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_context_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_context_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_context_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_context_property_;
  }
  if (insert_context_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_context_property);
    if (message_arena != submessage_arena) {
      insert_context_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_context_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_context_property_ = insert_context_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_context_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_context_property_by_context_id = 78;
inline bool MetadataSourceQueryConfig::_internal_has_select_context_property_by_context_id() const {
  return this != internal_default_instance() && _impl_.select_context_property_by_context_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_context_property_by_context_id() const {
  return _internal_has_select_context_property_by_context_id();
}
inline void MetadataSourceQueryConfig::clear_select_context_property_by_context_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_context_property_by_context_id_ != nullptr) {
    delete _impl_.select_context_property_by_context_id_;
  }
  _impl_.select_context_property_by_context_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_context_property_by_context_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_context_property_by_context_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_context_property_by_context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_context_property_by_context_id)
  return _internal_select_context_property_by_context_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_context_property_by_context_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_property_by_context_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_context_property_by_context_id_);
  }
  _impl_.select_context_property_by_context_id_ = select_context_property_by_context_id;
  if (select_context_property_by_context_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_property_by_context_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_context_property_by_context_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_property_by_context_id_;
  _impl_.select_context_property_by_context_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_context_property_by_context_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_context_property_by_context_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_context_property_by_context_id_;
  _impl_.select_context_property_by_context_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_context_property_by_context_id() {
  
  if (_impl_.select_context_property_by_context_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_context_property_by_context_id_ = p;
  }
  return _impl_.select_context_property_by_context_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_context_property_by_context_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_context_property_by_context_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_context_property_by_context_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_context_property_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_context_property_by_context_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_context_property_by_context_id_;
  }
  if (select_context_property_by_context_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_context_property_by_context_id);
    if (message_arena != submessage_arena) {
      select_context_property_by_context_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_context_property_by_context_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_context_property_by_context_id_ = select_context_property_by_context_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_context_property_by_context_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_context_property = 79;
inline bool MetadataSourceQueryConfig::_internal_has_update_context_property() const {
  return this != internal_default_instance() && _impl_.update_context_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_context_property() const {
  return _internal_has_update_context_property();
}
inline void MetadataSourceQueryConfig::clear_update_context_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_context_property_ != nullptr) {
    delete _impl_.update_context_property_;
  }
  _impl_.update_context_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_context_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_context_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_context_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_context_property)
  return _internal_update_context_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_context_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_context_property_);
  }
  _impl_.update_context_property_ = update_context_property;
  if (update_context_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_context_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_context_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_context_property_;
  _impl_.update_context_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_context_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_context_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_context_property_;
  _impl_.update_context_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_context_property() {
  
  if (_impl_.update_context_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_context_property_ = p;
  }
  return _impl_.update_context_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_context_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_context_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_context_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_context_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_context_property_;
  }
  if (update_context_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_context_property);
    if (message_arena != submessage_arena) {
      update_context_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_context_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_context_property_ = update_context_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_context_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_context_property = 80;
inline bool MetadataSourceQueryConfig::_internal_has_delete_context_property() const {
  return this != internal_default_instance() && _impl_.delete_context_property_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_context_property() const {
  return _internal_has_delete_context_property();
}
inline void MetadataSourceQueryConfig::clear_delete_context_property() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_context_property_ != nullptr) {
    delete _impl_.delete_context_property_;
  }
  _impl_.delete_context_property_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_context_property() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_context_property_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_context_property() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_context_property)
  return _internal_delete_context_property();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_context_property(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_context_property) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_context_property_);
  }
  _impl_.delete_context_property_ = delete_context_property;
  if (delete_context_property) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_context_property)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_context_property() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_context_property_;
  _impl_.delete_context_property_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_context_property() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_context_property)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_context_property_;
  _impl_.delete_context_property_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_context_property() {
  
  if (_impl_.delete_context_property_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_context_property_ = p;
  }
  return _impl_.delete_context_property_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_context_property() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_context_property();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_context_property)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_context_property(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_context_property) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_context_property_;
  }
  if (delete_context_property) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_context_property);
    if (message_arena != submessage_arena) {
      delete_context_property = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_context_property, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_context_property_ = delete_context_property;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_context_property)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_parent_context_table = 102;
inline bool MetadataSourceQueryConfig::_internal_has_drop_parent_context_table() const {
  return this != internal_default_instance() && _impl_.drop_parent_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_parent_context_table() const {
  return _internal_has_drop_parent_context_table();
}
inline void MetadataSourceQueryConfig::clear_drop_parent_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_parent_context_table_ != nullptr) {
    delete _impl_.drop_parent_context_table_;
  }
  _impl_.drop_parent_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_parent_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_parent_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_parent_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_parent_context_table)
  return _internal_drop_parent_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_parent_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_parent_context_table_);
  }
  _impl_.drop_parent_context_table_ = drop_parent_context_table;
  if (drop_parent_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_parent_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_parent_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_parent_context_table_;
  _impl_.drop_parent_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_parent_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_parent_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_parent_context_table_;
  _impl_.drop_parent_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_parent_context_table() {
  
  if (_impl_.drop_parent_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_parent_context_table_ = p;
  }
  return _impl_.drop_parent_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_parent_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_parent_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_parent_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_parent_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_parent_context_table_;
  }
  if (drop_parent_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_parent_context_table);
    if (message_arena != submessage_arena) {
      drop_parent_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_parent_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_parent_context_table_ = drop_parent_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_parent_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_parent_context_table = 103;
inline bool MetadataSourceQueryConfig::_internal_has_create_parent_context_table() const {
  return this != internal_default_instance() && _impl_.create_parent_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_parent_context_table() const {
  return _internal_has_create_parent_context_table();
}
inline void MetadataSourceQueryConfig::clear_create_parent_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_parent_context_table_ != nullptr) {
    delete _impl_.create_parent_context_table_;
  }
  _impl_.create_parent_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_parent_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_parent_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_parent_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_parent_context_table)
  return _internal_create_parent_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_parent_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_parent_context_table_);
  }
  _impl_.create_parent_context_table_ = create_parent_context_table;
  if (create_parent_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_parent_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_parent_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_parent_context_table_;
  _impl_.create_parent_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_parent_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_parent_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_parent_context_table_;
  _impl_.create_parent_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_parent_context_table() {
  
  if (_impl_.create_parent_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_parent_context_table_ = p;
  }
  return _impl_.create_parent_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_parent_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_parent_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_parent_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_parent_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_parent_context_table_;
  }
  if (create_parent_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_parent_context_table);
    if (message_arena != submessage_arena) {
      create_parent_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_parent_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_parent_context_table_ = create_parent_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_parent_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_parent_context_table = 104;
inline bool MetadataSourceQueryConfig::_internal_has_check_parent_context_table() const {
  return this != internal_default_instance() && _impl_.check_parent_context_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_parent_context_table() const {
  return _internal_has_check_parent_context_table();
}
inline void MetadataSourceQueryConfig::clear_check_parent_context_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_parent_context_table_ != nullptr) {
    delete _impl_.check_parent_context_table_;
  }
  _impl_.check_parent_context_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_parent_context_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_parent_context_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_parent_context_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_parent_context_table)
  return _internal_check_parent_context_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_parent_context_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_context_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_parent_context_table_);
  }
  _impl_.check_parent_context_table_ = check_parent_context_table;
  if (check_parent_context_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_parent_context_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_parent_context_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_parent_context_table_;
  _impl_.check_parent_context_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_parent_context_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_parent_context_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_parent_context_table_;
  _impl_.check_parent_context_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_parent_context_table() {
  
  if (_impl_.check_parent_context_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_parent_context_table_ = p;
  }
  return _impl_.check_parent_context_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_parent_context_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_parent_context_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_parent_context_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_parent_context_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_parent_context_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_parent_context_table_;
  }
  if (check_parent_context_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_parent_context_table);
    if (message_arena != submessage_arena) {
      check_parent_context_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_parent_context_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_parent_context_table_ = check_parent_context_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_parent_context_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_parent_context = 106;
inline bool MetadataSourceQueryConfig::_internal_has_insert_parent_context() const {
  return this != internal_default_instance() && _impl_.insert_parent_context_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_parent_context() const {
  return _internal_has_insert_parent_context();
}
inline void MetadataSourceQueryConfig::clear_insert_parent_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_parent_context_ != nullptr) {
    delete _impl_.insert_parent_context_;
  }
  _impl_.insert_parent_context_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_parent_context() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_parent_context_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_parent_context() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_parent_context)
  return _internal_insert_parent_context();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_parent_context(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_context) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_parent_context_);
  }
  _impl_.insert_parent_context_ = insert_parent_context;
  if (insert_parent_context) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_parent_context)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_parent_context() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_parent_context_;
  _impl_.insert_parent_context_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_parent_context() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_parent_context)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_parent_context_;
  _impl_.insert_parent_context_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_parent_context() {
  
  if (_impl_.insert_parent_context_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_parent_context_ = p;
  }
  return _impl_.insert_parent_context_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_parent_context() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_parent_context();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_parent_context)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_parent_context(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_parent_context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_parent_context_;
  }
  if (insert_parent_context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_parent_context);
    if (message_arena != submessage_arena) {
      insert_parent_context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_parent_context, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_parent_context_ = insert_parent_context;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_parent_context)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_context_by_context_id = 107;
inline bool MetadataSourceQueryConfig::_internal_has_select_parent_context_by_context_id() const {
  return this != internal_default_instance() && _impl_.select_parent_context_by_context_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_parent_context_by_context_id() const {
  return _internal_has_select_parent_context_by_context_id();
}
inline void MetadataSourceQueryConfig::clear_select_parent_context_by_context_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_parent_context_by_context_id_ != nullptr) {
    delete _impl_.select_parent_context_by_context_id_;
  }
  _impl_.select_parent_context_by_context_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_parent_context_by_context_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_parent_context_by_context_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_parent_context_by_context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_context_id)
  return _internal_select_parent_context_by_context_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_parent_context_by_context_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_context_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_parent_context_by_context_id_);
  }
  _impl_.select_parent_context_by_context_id_ = select_parent_context_by_context_id;
  if (select_parent_context_by_context_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_context_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_parent_context_by_context_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_context_by_context_id_;
  _impl_.select_parent_context_by_context_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_parent_context_by_context_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_context_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_context_by_context_id_;
  _impl_.select_parent_context_by_context_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_parent_context_by_context_id() {
  
  if (_impl_.select_parent_context_by_context_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_parent_context_by_context_id_ = p;
  }
  return _impl_.select_parent_context_by_context_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_parent_context_by_context_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_parent_context_by_context_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_context_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_parent_context_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_context_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_parent_context_by_context_id_;
  }
  if (select_parent_context_by_context_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_parent_context_by_context_id);
    if (message_arena != submessage_arena) {
      select_parent_context_by_context_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_parent_context_by_context_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_parent_context_by_context_id_ = select_parent_context_by_context_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_context_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_context_by_parent_context_id = 108;
inline bool MetadataSourceQueryConfig::_internal_has_select_parent_context_by_parent_context_id() const {
  return this != internal_default_instance() && _impl_.select_parent_context_by_parent_context_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_parent_context_by_parent_context_id() const {
  return _internal_has_select_parent_context_by_parent_context_id();
}
inline void MetadataSourceQueryConfig::clear_select_parent_context_by_parent_context_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_parent_context_by_parent_context_id_ != nullptr) {
    delete _impl_.select_parent_context_by_parent_context_id_;
  }
  _impl_.select_parent_context_by_parent_context_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_parent_context_by_parent_context_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_parent_context_by_parent_context_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_parent_context_by_parent_context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_parent_context_id)
  return _internal_select_parent_context_by_parent_context_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_parent_context_by_parent_context_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_parent_context_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_parent_context_by_parent_context_id_);
  }
  _impl_.select_parent_context_by_parent_context_id_ = select_parent_context_by_parent_context_id;
  if (select_parent_context_by_parent_context_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_parent_context_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_parent_context_by_parent_context_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_context_by_parent_context_id_;
  _impl_.select_parent_context_by_parent_context_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_parent_context_by_parent_context_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_parent_context_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_context_by_parent_context_id_;
  _impl_.select_parent_context_by_parent_context_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_parent_context_by_parent_context_id() {
  
  if (_impl_.select_parent_context_by_parent_context_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_parent_context_by_parent_context_id_ = p;
  }
  return _impl_.select_parent_context_by_parent_context_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_parent_context_by_parent_context_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_parent_context_by_parent_context_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_parent_context_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_parent_context_by_parent_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_context_by_parent_context_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_parent_context_by_parent_context_id_;
  }
  if (select_parent_context_by_parent_context_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_parent_context_by_parent_context_id);
    if (message_arena != submessage_arena) {
      select_parent_context_by_parent_context_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_parent_context_by_parent_context_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_parent_context_by_parent_context_id_ = select_parent_context_by_parent_context_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_context_by_parent_context_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_contexts_by_context_ids = 139;
inline bool MetadataSourceQueryConfig::_internal_has_select_parent_contexts_by_context_ids() const {
  return this != internal_default_instance() && _impl_.select_parent_contexts_by_context_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_parent_contexts_by_context_ids() const {
  return _internal_has_select_parent_contexts_by_context_ids();
}
inline void MetadataSourceQueryConfig::clear_select_parent_contexts_by_context_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_parent_contexts_by_context_ids_ != nullptr) {
    delete _impl_.select_parent_contexts_by_context_ids_;
  }
  _impl_.select_parent_contexts_by_context_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_parent_contexts_by_context_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_parent_contexts_by_context_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_parent_contexts_by_context_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_context_ids)
  return _internal_select_parent_contexts_by_context_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_parent_contexts_by_context_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_context_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_parent_contexts_by_context_ids_);
  }
  _impl_.select_parent_contexts_by_context_ids_ = select_parent_contexts_by_context_ids;
  if (select_parent_contexts_by_context_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_context_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_parent_contexts_by_context_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_contexts_by_context_ids_;
  _impl_.select_parent_contexts_by_context_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_parent_contexts_by_context_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_context_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_contexts_by_context_ids_;
  _impl_.select_parent_contexts_by_context_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_parent_contexts_by_context_ids() {
  
  if (_impl_.select_parent_contexts_by_context_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_parent_contexts_by_context_ids_ = p;
  }
  return _impl_.select_parent_contexts_by_context_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_parent_contexts_by_context_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_parent_contexts_by_context_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_context_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_parent_contexts_by_context_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_context_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_parent_contexts_by_context_ids_;
  }
  if (select_parent_contexts_by_context_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_parent_contexts_by_context_ids);
    if (message_arena != submessage_arena) {
      select_parent_contexts_by_context_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_parent_contexts_by_context_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_parent_contexts_by_context_ids_ = select_parent_contexts_by_context_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_context_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_parent_contexts_by_parent_context_ids = 140;
inline bool MetadataSourceQueryConfig::_internal_has_select_parent_contexts_by_parent_context_ids() const {
  return this != internal_default_instance() && _impl_.select_parent_contexts_by_parent_context_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_parent_contexts_by_parent_context_ids() const {
  return _internal_has_select_parent_contexts_by_parent_context_ids();
}
inline void MetadataSourceQueryConfig::clear_select_parent_contexts_by_parent_context_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_parent_contexts_by_parent_context_ids_ != nullptr) {
    delete _impl_.select_parent_contexts_by_parent_context_ids_;
  }
  _impl_.select_parent_contexts_by_parent_context_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_parent_contexts_by_parent_context_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_parent_contexts_by_parent_context_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_parent_contexts_by_parent_context_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_parent_context_ids)
  return _internal_select_parent_contexts_by_parent_context_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_parent_contexts_by_parent_context_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_parent_context_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_parent_contexts_by_parent_context_ids_);
  }
  _impl_.select_parent_contexts_by_parent_context_ids_ = select_parent_contexts_by_parent_context_ids;
  if (select_parent_contexts_by_parent_context_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_parent_context_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_parent_contexts_by_parent_context_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_contexts_by_parent_context_ids_;
  _impl_.select_parent_contexts_by_parent_context_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_parent_contexts_by_parent_context_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_parent_context_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_parent_contexts_by_parent_context_ids_;
  _impl_.select_parent_contexts_by_parent_context_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_parent_contexts_by_parent_context_ids() {
  
  if (_impl_.select_parent_contexts_by_parent_context_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_parent_contexts_by_parent_context_ids_ = p;
  }
  return _impl_.select_parent_contexts_by_parent_context_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_parent_contexts_by_parent_context_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_parent_contexts_by_parent_context_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_parent_context_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_parent_contexts_by_parent_context_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_parent_contexts_by_parent_context_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_parent_contexts_by_parent_context_ids_;
  }
  if (select_parent_contexts_by_parent_context_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_parent_contexts_by_parent_context_ids);
    if (message_arena != submessage_arena) {
      select_parent_contexts_by_parent_context_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_parent_contexts_by_parent_context_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_parent_contexts_by_parent_context_ids_ = select_parent_contexts_by_parent_context_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_parent_contexts_by_parent_context_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_event_table = 35;
inline bool MetadataSourceQueryConfig::_internal_has_drop_event_table() const {
  return this != internal_default_instance() && _impl_.drop_event_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_event_table() const {
  return _internal_has_drop_event_table();
}
inline void MetadataSourceQueryConfig::clear_drop_event_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_event_table_ != nullptr) {
    delete _impl_.drop_event_table_;
  }
  _impl_.drop_event_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_event_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_event_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_event_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_event_table)
  return _internal_drop_event_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_event_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_event_table_);
  }
  _impl_.drop_event_table_ = drop_event_table;
  if (drop_event_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_event_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_event_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_event_table_;
  _impl_.drop_event_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_event_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_event_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_event_table_;
  _impl_.drop_event_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_event_table() {
  
  if (_impl_.drop_event_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_event_table_ = p;
  }
  return _impl_.drop_event_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_event_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_event_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_event_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_event_table_;
  }
  if (drop_event_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_event_table);
    if (message_arena != submessage_arena) {
      drop_event_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_event_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_event_table_ = drop_event_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_event_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_event_table = 36;
inline bool MetadataSourceQueryConfig::_internal_has_create_event_table() const {
  return this != internal_default_instance() && _impl_.create_event_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_event_table() const {
  return _internal_has_create_event_table();
}
inline void MetadataSourceQueryConfig::clear_create_event_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_event_table_ != nullptr) {
    delete _impl_.create_event_table_;
  }
  _impl_.create_event_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_event_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_event_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_event_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_event_table)
  return _internal_create_event_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_event_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_event_table_);
  }
  _impl_.create_event_table_ = create_event_table;
  if (create_event_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_event_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_event_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_event_table_;
  _impl_.create_event_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_event_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_event_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_event_table_;
  _impl_.create_event_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_event_table() {
  
  if (_impl_.create_event_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_event_table_ = p;
  }
  return _impl_.create_event_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_event_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_event_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_event_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_event_table_;
  }
  if (create_event_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_event_table);
    if (message_arena != submessage_arena) {
      create_event_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_event_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_event_table_ = create_event_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_event_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_event_table = 50;
inline bool MetadataSourceQueryConfig::_internal_has_check_event_table() const {
  return this != internal_default_instance() && _impl_.check_event_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_event_table() const {
  return _internal_has_check_event_table();
}
inline void MetadataSourceQueryConfig::clear_check_event_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_event_table_ != nullptr) {
    delete _impl_.check_event_table_;
  }
  _impl_.check_event_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_event_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_event_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_event_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_event_table)
  return _internal_check_event_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_event_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_event_table_);
  }
  _impl_.check_event_table_ = check_event_table;
  if (check_event_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_event_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_event_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_event_table_;
  _impl_.check_event_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_event_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_event_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_event_table_;
  _impl_.check_event_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_event_table() {
  
  if (_impl_.check_event_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_event_table_ = p;
  }
  return _impl_.check_event_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_event_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_event_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_event_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_event_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_event_table_;
  }
  if (check_event_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_event_table);
    if (message_arena != submessage_arena) {
      check_event_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_event_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_event_table_ = check_event_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_event_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_event = 37;
inline bool MetadataSourceQueryConfig::_internal_has_insert_event() const {
  return this != internal_default_instance() && _impl_.insert_event_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_event() const {
  return _internal_has_insert_event();
}
inline void MetadataSourceQueryConfig::clear_insert_event() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_event_ != nullptr) {
    delete _impl_.insert_event_;
  }
  _impl_.insert_event_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_event() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_event_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_event() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_event)
  return _internal_insert_event();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_event(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_event_);
  }
  _impl_.insert_event_ = insert_event;
  if (insert_event) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_event)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_event() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_event_;
  _impl_.insert_event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_event() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_event)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_event_;
  _impl_.insert_event_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_event() {
  
  if (_impl_.insert_event_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_event_ = p;
  }
  return _impl_.insert_event_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_event() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_event();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_event)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_event(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_event_;
  }
  if (insert_event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_event);
    if (message_arena != submessage_arena) {
      insert_event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_event, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_event_ = insert_event;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_event)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_by_artifact_ids = 96;
inline bool MetadataSourceQueryConfig::_internal_has_select_event_by_artifact_ids() const {
  return this != internal_default_instance() && _impl_.select_event_by_artifact_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_event_by_artifact_ids() const {
  return _internal_has_select_event_by_artifact_ids();
}
inline void MetadataSourceQueryConfig::clear_select_event_by_artifact_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_event_by_artifact_ids_ != nullptr) {
    delete _impl_.select_event_by_artifact_ids_;
  }
  _impl_.select_event_by_artifact_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_event_by_artifact_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_event_by_artifact_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_event_by_artifact_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_event_by_artifact_ids)
  return _internal_select_event_by_artifact_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_event_by_artifact_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_artifact_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_event_by_artifact_ids_);
  }
  _impl_.select_event_by_artifact_ids_ = select_event_by_artifact_ids;
  if (select_event_by_artifact_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_by_artifact_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_event_by_artifact_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_by_artifact_ids_;
  _impl_.select_event_by_artifact_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_event_by_artifact_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_event_by_artifact_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_by_artifact_ids_;
  _impl_.select_event_by_artifact_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_event_by_artifact_ids() {
  
  if (_impl_.select_event_by_artifact_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_event_by_artifact_ids_ = p;
  }
  return _impl_.select_event_by_artifact_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_event_by_artifact_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_event_by_artifact_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_event_by_artifact_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_event_by_artifact_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_artifact_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_event_by_artifact_ids_;
  }
  if (select_event_by_artifact_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_event_by_artifact_ids);
    if (message_arena != submessage_arena) {
      select_event_by_artifact_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_event_by_artifact_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_event_by_artifact_ids_ = select_event_by_artifact_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_by_artifact_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_by_execution_ids = 97;
inline bool MetadataSourceQueryConfig::_internal_has_select_event_by_execution_ids() const {
  return this != internal_default_instance() && _impl_.select_event_by_execution_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_event_by_execution_ids() const {
  return _internal_has_select_event_by_execution_ids();
}
inline void MetadataSourceQueryConfig::clear_select_event_by_execution_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_event_by_execution_ids_ != nullptr) {
    delete _impl_.select_event_by_execution_ids_;
  }
  _impl_.select_event_by_execution_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_event_by_execution_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_event_by_execution_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_event_by_execution_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_event_by_execution_ids)
  return _internal_select_event_by_execution_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_event_by_execution_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_execution_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_event_by_execution_ids_);
  }
  _impl_.select_event_by_execution_ids_ = select_event_by_execution_ids;
  if (select_event_by_execution_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_by_execution_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_event_by_execution_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_by_execution_ids_;
  _impl_.select_event_by_execution_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_event_by_execution_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_event_by_execution_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_by_execution_ids_;
  _impl_.select_event_by_execution_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_event_by_execution_ids() {
  
  if (_impl_.select_event_by_execution_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_event_by_execution_ids_ = p;
  }
  return _impl_.select_event_by_execution_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_event_by_execution_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_event_by_execution_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_event_by_execution_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_event_by_execution_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_by_execution_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_event_by_execution_ids_;
  }
  if (select_event_by_execution_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_event_by_execution_ids);
    if (message_arena != submessage_arena) {
      select_event_by_execution_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_event_by_execution_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_event_by_execution_ids_ = select_event_by_execution_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_by_execution_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_event_path_table = 40;
inline bool MetadataSourceQueryConfig::_internal_has_drop_event_path_table() const {
  return this != internal_default_instance() && _impl_.drop_event_path_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_event_path_table() const {
  return _internal_has_drop_event_path_table();
}
inline void MetadataSourceQueryConfig::clear_drop_event_path_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_event_path_table_ != nullptr) {
    delete _impl_.drop_event_path_table_;
  }
  _impl_.drop_event_path_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_event_path_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_event_path_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_event_path_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_event_path_table)
  return _internal_drop_event_path_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_event_path_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_path_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_event_path_table_);
  }
  _impl_.drop_event_path_table_ = drop_event_path_table;
  if (drop_event_path_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_event_path_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_event_path_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_event_path_table_;
  _impl_.drop_event_path_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_event_path_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_event_path_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_event_path_table_;
  _impl_.drop_event_path_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_event_path_table() {
  
  if (_impl_.drop_event_path_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_event_path_table_ = p;
  }
  return _impl_.drop_event_path_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_event_path_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_event_path_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_event_path_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_event_path_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_event_path_table_;
  }
  if (drop_event_path_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_event_path_table);
    if (message_arena != submessage_arena) {
      drop_event_path_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_event_path_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_event_path_table_ = drop_event_path_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_event_path_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_event_path_table = 41;
inline bool MetadataSourceQueryConfig::_internal_has_create_event_path_table() const {
  return this != internal_default_instance() && _impl_.create_event_path_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_event_path_table() const {
  return _internal_has_create_event_path_table();
}
inline void MetadataSourceQueryConfig::clear_create_event_path_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_event_path_table_ != nullptr) {
    delete _impl_.create_event_path_table_;
  }
  _impl_.create_event_path_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_event_path_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_event_path_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_event_path_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_event_path_table)
  return _internal_create_event_path_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_event_path_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_path_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_event_path_table_);
  }
  _impl_.create_event_path_table_ = create_event_path_table;
  if (create_event_path_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_event_path_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_event_path_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_event_path_table_;
  _impl_.create_event_path_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_event_path_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_event_path_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_event_path_table_;
  _impl_.create_event_path_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_event_path_table() {
  
  if (_impl_.create_event_path_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_event_path_table_ = p;
  }
  return _impl_.create_event_path_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_event_path_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_event_path_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_event_path_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_event_path_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_event_path_table_;
  }
  if (create_event_path_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_event_path_table);
    if (message_arena != submessage_arena) {
      create_event_path_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_event_path_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_event_path_table_ = create_event_path_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_event_path_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_event_path_table = 51;
inline bool MetadataSourceQueryConfig::_internal_has_check_event_path_table() const {
  return this != internal_default_instance() && _impl_.check_event_path_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_event_path_table() const {
  return _internal_has_check_event_path_table();
}
inline void MetadataSourceQueryConfig::clear_check_event_path_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_event_path_table_ != nullptr) {
    delete _impl_.check_event_path_table_;
  }
  _impl_.check_event_path_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_event_path_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_event_path_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_event_path_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_event_path_table)
  return _internal_check_event_path_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_event_path_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_path_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_event_path_table_);
  }
  _impl_.check_event_path_table_ = check_event_path_table;
  if (check_event_path_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_event_path_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_event_path_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_event_path_table_;
  _impl_.check_event_path_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_event_path_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_event_path_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_event_path_table_;
  _impl_.check_event_path_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_event_path_table() {
  
  if (_impl_.check_event_path_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_event_path_table_ = p;
  }
  return _impl_.check_event_path_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_event_path_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_event_path_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_event_path_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_event_path_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_event_path_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_event_path_table_;
  }
  if (check_event_path_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_event_path_table);
    if (message_arena != submessage_arena) {
      check_event_path_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_event_path_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_event_path_table_ = check_event_path_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_event_path_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_event_path = 42;
inline bool MetadataSourceQueryConfig::_internal_has_insert_event_path() const {
  return this != internal_default_instance() && _impl_.insert_event_path_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_event_path() const {
  return _internal_has_insert_event_path();
}
inline void MetadataSourceQueryConfig::clear_insert_event_path() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_event_path_ != nullptr) {
    delete _impl_.insert_event_path_;
  }
  _impl_.insert_event_path_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_event_path() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_event_path_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_event_path() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_event_path)
  return _internal_insert_event_path();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_event_path(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_path) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_event_path_);
  }
  _impl_.insert_event_path_ = insert_event_path;
  if (insert_event_path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_event_path)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_event_path() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_event_path_;
  _impl_.insert_event_path_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_event_path() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_event_path)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_event_path_;
  _impl_.insert_event_path_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_event_path() {
  
  if (_impl_.insert_event_path_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_event_path_ = p;
  }
  return _impl_.insert_event_path_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_event_path() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_event_path();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_event_path)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_event_path(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_event_path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_event_path_;
  }
  if (insert_event_path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_event_path);
    if (message_arena != submessage_arena) {
      insert_event_path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_event_path, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_event_path_ = insert_event_path;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_event_path)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_event_path_by_event_ids = 98;
inline bool MetadataSourceQueryConfig::_internal_has_select_event_path_by_event_ids() const {
  return this != internal_default_instance() && _impl_.select_event_path_by_event_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_event_path_by_event_ids() const {
  return _internal_has_select_event_path_by_event_ids();
}
inline void MetadataSourceQueryConfig::clear_select_event_path_by_event_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_event_path_by_event_ids_ != nullptr) {
    delete _impl_.select_event_path_by_event_ids_;
  }
  _impl_.select_event_path_by_event_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_event_path_by_event_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_event_path_by_event_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_event_path_by_event_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_event_path_by_event_ids)
  return _internal_select_event_path_by_event_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_event_path_by_event_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_path_by_event_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_event_path_by_event_ids_);
  }
  _impl_.select_event_path_by_event_ids_ = select_event_path_by_event_ids;
  if (select_event_path_by_event_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_path_by_event_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_event_path_by_event_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_path_by_event_ids_;
  _impl_.select_event_path_by_event_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_event_path_by_event_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_event_path_by_event_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_event_path_by_event_ids_;
  _impl_.select_event_path_by_event_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_event_path_by_event_ids() {
  
  if (_impl_.select_event_path_by_event_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_event_path_by_event_ids_ = p;
  }
  return _impl_.select_event_path_by_event_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_event_path_by_event_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_event_path_by_event_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_event_path_by_event_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_event_path_by_event_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_event_path_by_event_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_event_path_by_event_ids_;
  }
  if (select_event_path_by_event_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_event_path_by_event_ids);
    if (message_arena != submessage_arena) {
      select_event_path_by_event_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_event_path_by_event_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_event_path_by_event_ids_ = select_event_path_by_event_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_event_path_by_event_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_association_table = 81;
inline bool MetadataSourceQueryConfig::_internal_has_drop_association_table() const {
  return this != internal_default_instance() && _impl_.drop_association_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_association_table() const {
  return _internal_has_drop_association_table();
}
inline void MetadataSourceQueryConfig::clear_drop_association_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_association_table_ != nullptr) {
    delete _impl_.drop_association_table_;
  }
  _impl_.drop_association_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_association_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_association_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_association_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_association_table)
  return _internal_drop_association_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_association_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_association_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_association_table_);
  }
  _impl_.drop_association_table_ = drop_association_table;
  if (drop_association_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_association_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_association_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_association_table_;
  _impl_.drop_association_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_association_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_association_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_association_table_;
  _impl_.drop_association_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_association_table() {
  
  if (_impl_.drop_association_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_association_table_ = p;
  }
  return _impl_.drop_association_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_association_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_association_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_association_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_association_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_association_table_;
  }
  if (drop_association_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_association_table);
    if (message_arena != submessage_arena) {
      drop_association_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_association_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_association_table_ = drop_association_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_association_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_association_table = 82;
inline bool MetadataSourceQueryConfig::_internal_has_create_association_table() const {
  return this != internal_default_instance() && _impl_.create_association_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_association_table() const {
  return _internal_has_create_association_table();
}
inline void MetadataSourceQueryConfig::clear_create_association_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_association_table_ != nullptr) {
    delete _impl_.create_association_table_;
  }
  _impl_.create_association_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_association_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_association_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_association_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_association_table)
  return _internal_create_association_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_association_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_association_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_association_table_);
  }
  _impl_.create_association_table_ = create_association_table;
  if (create_association_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_association_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_association_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_association_table_;
  _impl_.create_association_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_association_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_association_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_association_table_;
  _impl_.create_association_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_association_table() {
  
  if (_impl_.create_association_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_association_table_ = p;
  }
  return _impl_.create_association_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_association_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_association_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_association_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_association_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_association_table_;
  }
  if (create_association_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_association_table);
    if (message_arena != submessage_arena) {
      create_association_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_association_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_association_table_ = create_association_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_association_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_association_table = 83;
inline bool MetadataSourceQueryConfig::_internal_has_check_association_table() const {
  return this != internal_default_instance() && _impl_.check_association_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_association_table() const {
  return _internal_has_check_association_table();
}
inline void MetadataSourceQueryConfig::clear_check_association_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_association_table_ != nullptr) {
    delete _impl_.check_association_table_;
  }
  _impl_.check_association_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_association_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_association_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_association_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_association_table)
  return _internal_check_association_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_association_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_association_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_association_table_);
  }
  _impl_.check_association_table_ = check_association_table;
  if (check_association_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_association_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_association_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_association_table_;
  _impl_.check_association_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_association_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_association_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_association_table_;
  _impl_.check_association_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_association_table() {
  
  if (_impl_.check_association_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_association_table_ = p;
  }
  return _impl_.check_association_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_association_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_association_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_association_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_association_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_association_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_association_table_;
  }
  if (check_association_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_association_table);
    if (message_arena != submessage_arena) {
      check_association_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_association_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_association_table_ = check_association_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_association_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_association = 84;
inline bool MetadataSourceQueryConfig::_internal_has_insert_association() const {
  return this != internal_default_instance() && _impl_.insert_association_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_association() const {
  return _internal_has_insert_association();
}
inline void MetadataSourceQueryConfig::clear_insert_association() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_association_ != nullptr) {
    delete _impl_.insert_association_;
  }
  _impl_.insert_association_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_association() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_association_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_association() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_association)
  return _internal_insert_association();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_association(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_association) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_association_);
  }
  _impl_.insert_association_ = insert_association;
  if (insert_association) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_association)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_association() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_association_;
  _impl_.insert_association_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_association() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_association)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_association_;
  _impl_.insert_association_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_association() {
  
  if (_impl_.insert_association_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_association_ = p;
  }
  return _impl_.insert_association_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_association() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_association();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_association)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_association(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_association) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_association_;
  }
  if (insert_association) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_association);
    if (message_arena != submessage_arena) {
      insert_association = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_association, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_association_ = insert_association;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_association)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_association_by_context_id = 85;
inline bool MetadataSourceQueryConfig::_internal_has_select_association_by_context_id() const {
  return this != internal_default_instance() && _impl_.select_association_by_context_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_association_by_context_id() const {
  return _internal_has_select_association_by_context_id();
}
inline void MetadataSourceQueryConfig::clear_select_association_by_context_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_association_by_context_id_ != nullptr) {
    delete _impl_.select_association_by_context_id_;
  }
  _impl_.select_association_by_context_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_association_by_context_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_association_by_context_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_association_by_context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_association_by_context_id)
  return _internal_select_association_by_context_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_association_by_context_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_association_by_context_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_association_by_context_id_);
  }
  _impl_.select_association_by_context_id_ = select_association_by_context_id;
  if (select_association_by_context_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_association_by_context_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_association_by_context_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_association_by_context_id_;
  _impl_.select_association_by_context_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_association_by_context_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_association_by_context_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_association_by_context_id_;
  _impl_.select_association_by_context_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_association_by_context_id() {
  
  if (_impl_.select_association_by_context_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_association_by_context_id_ = p;
  }
  return _impl_.select_association_by_context_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_association_by_context_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_association_by_context_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_association_by_context_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_association_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_association_by_context_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_association_by_context_id_;
  }
  if (select_association_by_context_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_association_by_context_id);
    if (message_arena != submessage_arena) {
      select_association_by_context_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_association_by_context_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_association_by_context_id_ = select_association_by_context_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_association_by_context_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_associations_by_execution_ids = 142;
inline bool MetadataSourceQueryConfig::_internal_has_select_associations_by_execution_ids() const {
  return this != internal_default_instance() && _impl_.select_associations_by_execution_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_associations_by_execution_ids() const {
  return _internal_has_select_associations_by_execution_ids();
}
inline void MetadataSourceQueryConfig::clear_select_associations_by_execution_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_associations_by_execution_ids_ != nullptr) {
    delete _impl_.select_associations_by_execution_ids_;
  }
  _impl_.select_associations_by_execution_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_associations_by_execution_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_associations_by_execution_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_associations_by_execution_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_associations_by_execution_ids)
  return _internal_select_associations_by_execution_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_associations_by_execution_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_associations_by_execution_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_associations_by_execution_ids_);
  }
  _impl_.select_associations_by_execution_ids_ = select_associations_by_execution_ids;
  if (select_associations_by_execution_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_associations_by_execution_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_associations_by_execution_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_associations_by_execution_ids_;
  _impl_.select_associations_by_execution_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_associations_by_execution_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_associations_by_execution_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_associations_by_execution_ids_;
  _impl_.select_associations_by_execution_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_associations_by_execution_ids() {
  
  if (_impl_.select_associations_by_execution_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_associations_by_execution_ids_ = p;
  }
  return _impl_.select_associations_by_execution_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_associations_by_execution_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_associations_by_execution_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_associations_by_execution_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_associations_by_execution_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_associations_by_execution_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_associations_by_execution_ids_;
  }
  if (select_associations_by_execution_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_associations_by_execution_ids);
    if (message_arena != submessage_arena) {
      select_associations_by_execution_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_associations_by_execution_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_associations_by_execution_ids_ = select_associations_by_execution_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_associations_by_execution_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_attribution_table = 87;
inline bool MetadataSourceQueryConfig::_internal_has_drop_attribution_table() const {
  return this != internal_default_instance() && _impl_.drop_attribution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_attribution_table() const {
  return _internal_has_drop_attribution_table();
}
inline void MetadataSourceQueryConfig::clear_drop_attribution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_attribution_table_ != nullptr) {
    delete _impl_.drop_attribution_table_;
  }
  _impl_.drop_attribution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_attribution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_attribution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_attribution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_attribution_table)
  return _internal_drop_attribution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_attribution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_attribution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_attribution_table_);
  }
  _impl_.drop_attribution_table_ = drop_attribution_table;
  if (drop_attribution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_attribution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_attribution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_attribution_table_;
  _impl_.drop_attribution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_attribution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_attribution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_attribution_table_;
  _impl_.drop_attribution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_attribution_table() {
  
  if (_impl_.drop_attribution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_attribution_table_ = p;
  }
  return _impl_.drop_attribution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_attribution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_attribution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_attribution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_attribution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_attribution_table_;
  }
  if (drop_attribution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_attribution_table);
    if (message_arena != submessage_arena) {
      drop_attribution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_attribution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_attribution_table_ = drop_attribution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_attribution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_attribution_table = 88;
inline bool MetadataSourceQueryConfig::_internal_has_create_attribution_table() const {
  return this != internal_default_instance() && _impl_.create_attribution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_attribution_table() const {
  return _internal_has_create_attribution_table();
}
inline void MetadataSourceQueryConfig::clear_create_attribution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_attribution_table_ != nullptr) {
    delete _impl_.create_attribution_table_;
  }
  _impl_.create_attribution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_attribution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_attribution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_attribution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_attribution_table)
  return _internal_create_attribution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_attribution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_attribution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_attribution_table_);
  }
  _impl_.create_attribution_table_ = create_attribution_table;
  if (create_attribution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_attribution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_attribution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_attribution_table_;
  _impl_.create_attribution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_attribution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_attribution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_attribution_table_;
  _impl_.create_attribution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_attribution_table() {
  
  if (_impl_.create_attribution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_attribution_table_ = p;
  }
  return _impl_.create_attribution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_attribution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_attribution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_attribution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_attribution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_attribution_table_;
  }
  if (create_attribution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_attribution_table);
    if (message_arena != submessage_arena) {
      create_attribution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_attribution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_attribution_table_ = create_attribution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_attribution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_attribution_table = 89;
inline bool MetadataSourceQueryConfig::_internal_has_check_attribution_table() const {
  return this != internal_default_instance() && _impl_.check_attribution_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_attribution_table() const {
  return _internal_has_check_attribution_table();
}
inline void MetadataSourceQueryConfig::clear_check_attribution_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_attribution_table_ != nullptr) {
    delete _impl_.check_attribution_table_;
  }
  _impl_.check_attribution_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_attribution_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_attribution_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_attribution_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_attribution_table)
  return _internal_check_attribution_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_attribution_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_attribution_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_attribution_table_);
  }
  _impl_.check_attribution_table_ = check_attribution_table;
  if (check_attribution_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_attribution_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_attribution_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_attribution_table_;
  _impl_.check_attribution_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_attribution_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_attribution_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_attribution_table_;
  _impl_.check_attribution_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_attribution_table() {
  
  if (_impl_.check_attribution_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_attribution_table_ = p;
  }
  return _impl_.check_attribution_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_attribution_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_attribution_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_attribution_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_attribution_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_attribution_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_attribution_table_;
  }
  if (check_attribution_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_attribution_table);
    if (message_arena != submessage_arena) {
      check_attribution_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_attribution_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_attribution_table_ = check_attribution_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_attribution_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_attribution = 90;
inline bool MetadataSourceQueryConfig::_internal_has_insert_attribution() const {
  return this != internal_default_instance() && _impl_.insert_attribution_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_attribution() const {
  return _internal_has_insert_attribution();
}
inline void MetadataSourceQueryConfig::clear_insert_attribution() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_attribution_ != nullptr) {
    delete _impl_.insert_attribution_;
  }
  _impl_.insert_attribution_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_attribution() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_attribution_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_attribution() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_attribution)
  return _internal_insert_attribution();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_attribution(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_attribution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_attribution_);
  }
  _impl_.insert_attribution_ = insert_attribution;
  if (insert_attribution) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_attribution)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_attribution() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_attribution_;
  _impl_.insert_attribution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_attribution() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_attribution)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_attribution_;
  _impl_.insert_attribution_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_attribution() {
  
  if (_impl_.insert_attribution_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_attribution_ = p;
  }
  return _impl_.insert_attribution_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_attribution() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_attribution();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_attribution)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_attribution(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_attribution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_attribution_;
  }
  if (insert_attribution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_attribution);
    if (message_arena != submessage_arena) {
      insert_attribution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_attribution, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_attribution_ = insert_attribution;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_attribution)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_attribution_by_context_id = 91;
inline bool MetadataSourceQueryConfig::_internal_has_select_attribution_by_context_id() const {
  return this != internal_default_instance() && _impl_.select_attribution_by_context_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_attribution_by_context_id() const {
  return _internal_has_select_attribution_by_context_id();
}
inline void MetadataSourceQueryConfig::clear_select_attribution_by_context_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_attribution_by_context_id_ != nullptr) {
    delete _impl_.select_attribution_by_context_id_;
  }
  _impl_.select_attribution_by_context_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_attribution_by_context_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_attribution_by_context_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_attribution_by_context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_attribution_by_context_id)
  return _internal_select_attribution_by_context_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_attribution_by_context_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attribution_by_context_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_attribution_by_context_id_);
  }
  _impl_.select_attribution_by_context_id_ = select_attribution_by_context_id;
  if (select_attribution_by_context_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_attribution_by_context_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_attribution_by_context_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_attribution_by_context_id_;
  _impl_.select_attribution_by_context_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_attribution_by_context_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_attribution_by_context_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_attribution_by_context_id_;
  _impl_.select_attribution_by_context_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_attribution_by_context_id() {
  
  if (_impl_.select_attribution_by_context_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_attribution_by_context_id_ = p;
  }
  return _impl_.select_attribution_by_context_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_attribution_by_context_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_attribution_by_context_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_attribution_by_context_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_attribution_by_context_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attribution_by_context_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_attribution_by_context_id_;
  }
  if (select_attribution_by_context_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_attribution_by_context_id);
    if (message_arena != submessage_arena) {
      select_attribution_by_context_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_attribution_by_context_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_attribution_by_context_id_ = select_attribution_by_context_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_attribution_by_context_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_attributions_by_artifact_ids = 143;
inline bool MetadataSourceQueryConfig::_internal_has_select_attributions_by_artifact_ids() const {
  return this != internal_default_instance() && _impl_.select_attributions_by_artifact_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_attributions_by_artifact_ids() const {
  return _internal_has_select_attributions_by_artifact_ids();
}
inline void MetadataSourceQueryConfig::clear_select_attributions_by_artifact_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_attributions_by_artifact_ids_ != nullptr) {
    delete _impl_.select_attributions_by_artifact_ids_;
  }
  _impl_.select_attributions_by_artifact_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_attributions_by_artifact_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_attributions_by_artifact_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_attributions_by_artifact_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_attributions_by_artifact_ids)
  return _internal_select_attributions_by_artifact_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_attributions_by_artifact_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attributions_by_artifact_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_attributions_by_artifact_ids_);
  }
  _impl_.select_attributions_by_artifact_ids_ = select_attributions_by_artifact_ids;
  if (select_attributions_by_artifact_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_attributions_by_artifact_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_attributions_by_artifact_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_attributions_by_artifact_ids_;
  _impl_.select_attributions_by_artifact_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_attributions_by_artifact_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_attributions_by_artifact_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_attributions_by_artifact_ids_;
  _impl_.select_attributions_by_artifact_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_attributions_by_artifact_ids() {
  
  if (_impl_.select_attributions_by_artifact_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_attributions_by_artifact_ids_ = p;
  }
  return _impl_.select_attributions_by_artifact_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_attributions_by_artifact_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_attributions_by_artifact_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_attributions_by_artifact_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_attributions_by_artifact_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_attributions_by_artifact_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_attributions_by_artifact_ids_;
  }
  if (select_attributions_by_artifact_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_attributions_by_artifact_ids);
    if (message_arena != submessage_arena) {
      select_attributions_by_artifact_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_attributions_by_artifact_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_attributions_by_artifact_ids_ = select_attributions_by_artifact_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_attributions_by_artifact_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery drop_mlmd_env_table = 60;
inline bool MetadataSourceQueryConfig::_internal_has_drop_mlmd_env_table() const {
  return this != internal_default_instance() && _impl_.drop_mlmd_env_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_drop_mlmd_env_table() const {
  return _internal_has_drop_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::clear_drop_mlmd_env_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.drop_mlmd_env_table_ != nullptr) {
    delete _impl_.drop_mlmd_env_table_;
  }
  _impl_.drop_mlmd_env_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_drop_mlmd_env_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.drop_mlmd_env_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::drop_mlmd_env_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.drop_mlmd_env_table)
  return _internal_drop_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_drop_mlmd_env_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_mlmd_env_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.drop_mlmd_env_table_);
  }
  _impl_.drop_mlmd_env_table_ = drop_mlmd_env_table;
  if (drop_mlmd_env_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_mlmd_env_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_drop_mlmd_env_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_mlmd_env_table_;
  _impl_.drop_mlmd_env_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_drop_mlmd_env_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.drop_mlmd_env_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.drop_mlmd_env_table_;
  _impl_.drop_mlmd_env_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_drop_mlmd_env_table() {
  
  if (_impl_.drop_mlmd_env_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.drop_mlmd_env_table_ = p;
  }
  return _impl_.drop_mlmd_env_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_drop_mlmd_env_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_drop_mlmd_env_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.drop_mlmd_env_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_drop_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* drop_mlmd_env_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.drop_mlmd_env_table_;
  }
  if (drop_mlmd_env_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(drop_mlmd_env_table);
    if (message_arena != submessage_arena) {
      drop_mlmd_env_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drop_mlmd_env_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.drop_mlmd_env_table_ = drop_mlmd_env_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.drop_mlmd_env_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery create_mlmd_env_table = 61;
inline bool MetadataSourceQueryConfig::_internal_has_create_mlmd_env_table() const {
  return this != internal_default_instance() && _impl_.create_mlmd_env_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_create_mlmd_env_table() const {
  return _internal_has_create_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::clear_create_mlmd_env_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.create_mlmd_env_table_ != nullptr) {
    delete _impl_.create_mlmd_env_table_;
  }
  _impl_.create_mlmd_env_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_create_mlmd_env_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.create_mlmd_env_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::create_mlmd_env_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.create_mlmd_env_table)
  return _internal_create_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_create_mlmd_env_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_mlmd_env_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.create_mlmd_env_table_);
  }
  _impl_.create_mlmd_env_table_ = create_mlmd_env_table;
  if (create_mlmd_env_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_mlmd_env_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_create_mlmd_env_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_mlmd_env_table_;
  _impl_.create_mlmd_env_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_create_mlmd_env_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.create_mlmd_env_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.create_mlmd_env_table_;
  _impl_.create_mlmd_env_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_create_mlmd_env_table() {
  
  if (_impl_.create_mlmd_env_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.create_mlmd_env_table_ = p;
  }
  return _impl_.create_mlmd_env_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_create_mlmd_env_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_create_mlmd_env_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.create_mlmd_env_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_create_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* create_mlmd_env_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.create_mlmd_env_table_;
  }
  if (create_mlmd_env_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_mlmd_env_table);
    if (message_arena != submessage_arena) {
      create_mlmd_env_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_mlmd_env_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.create_mlmd_env_table_ = create_mlmd_env_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.create_mlmd_env_table)
}

// int64 schema_version = 59;
inline void MetadataSourceQueryConfig::clear_schema_version() {
  _impl_.schema_version_ = int64_t{0};
}
inline int64_t MetadataSourceQueryConfig::_internal_schema_version() const {
  return _impl_.schema_version_;
}
inline int64_t MetadataSourceQueryConfig::schema_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.schema_version)
  return _internal_schema_version();
}
inline void MetadataSourceQueryConfig::_internal_set_schema_version(int64_t value) {
  
  _impl_.schema_version_ = value;
}
inline void MetadataSourceQueryConfig::set_schema_version(int64_t value) {
  _internal_set_schema_version(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MetadataSourceQueryConfig.schema_version)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_mlmd_env_table = 63;
inline bool MetadataSourceQueryConfig::_internal_has_check_mlmd_env_table() const {
  return this != internal_default_instance() && _impl_.check_mlmd_env_table_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_mlmd_env_table() const {
  return _internal_has_check_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::clear_check_mlmd_env_table() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_mlmd_env_table_ != nullptr) {
    delete _impl_.check_mlmd_env_table_;
  }
  _impl_.check_mlmd_env_table_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_mlmd_env_table() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_mlmd_env_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_mlmd_env_table() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table)
  return _internal_check_mlmd_env_table();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_mlmd_env_table(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_mlmd_env_table_);
  }
  _impl_.check_mlmd_env_table_ = check_mlmd_env_table;
  if (check_mlmd_env_table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_mlmd_env_table() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_mlmd_env_table_;
  _impl_.check_mlmd_env_table_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_mlmd_env_table() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_mlmd_env_table_;
  _impl_.check_mlmd_env_table_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_mlmd_env_table() {
  
  if (_impl_.check_mlmd_env_table_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_mlmd_env_table_ = p;
  }
  return _impl_.check_mlmd_env_table_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_mlmd_env_table() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_mlmd_env_table();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_mlmd_env_table(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_mlmd_env_table_;
  }
  if (check_mlmd_env_table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_mlmd_env_table);
    if (message_arena != submessage_arena) {
      check_mlmd_env_table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_mlmd_env_table, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_mlmd_env_table_ = check_mlmd_env_table;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_mlmd_env_table_existence = 141;
inline bool MetadataSourceQueryConfig::_internal_has_check_mlmd_env_table_existence() const {
  return this != internal_default_instance() && _impl_.check_mlmd_env_table_existence_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_mlmd_env_table_existence() const {
  return _internal_has_check_mlmd_env_table_existence();
}
inline void MetadataSourceQueryConfig::clear_check_mlmd_env_table_existence() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_mlmd_env_table_existence_ != nullptr) {
    delete _impl_.check_mlmd_env_table_existence_;
  }
  _impl_.check_mlmd_env_table_existence_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_mlmd_env_table_existence() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_mlmd_env_table_existence_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_mlmd_env_table_existence() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table_existence)
  return _internal_check_mlmd_env_table_existence();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_mlmd_env_table_existence(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_existence) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_mlmd_env_table_existence_);
  }
  _impl_.check_mlmd_env_table_existence_ = check_mlmd_env_table_existence;
  if (check_mlmd_env_table_existence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table_existence)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_mlmd_env_table_existence() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_mlmd_env_table_existence_;
  _impl_.check_mlmd_env_table_existence_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_mlmd_env_table_existence() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table_existence)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_mlmd_env_table_existence_;
  _impl_.check_mlmd_env_table_existence_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_mlmd_env_table_existence() {
  
  if (_impl_.check_mlmd_env_table_existence_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_mlmd_env_table_existence_ = p;
  }
  return _impl_.check_mlmd_env_table_existence_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_mlmd_env_table_existence() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_mlmd_env_table_existence();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table_existence)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_mlmd_env_table_existence(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_mlmd_env_table_existence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_mlmd_env_table_existence_;
  }
  if (check_mlmd_env_table_existence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_mlmd_env_table_existence);
    if (message_arena != submessage_arena) {
      check_mlmd_env_table_existence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_mlmd_env_table_existence, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_mlmd_env_table_existence_ = check_mlmd_env_table_existence;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_mlmd_env_table_existence)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery insert_schema_version = 66;
inline bool MetadataSourceQueryConfig::_internal_has_insert_schema_version() const {
  return this != internal_default_instance() && _impl_.insert_schema_version_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_insert_schema_version() const {
  return _internal_has_insert_schema_version();
}
inline void MetadataSourceQueryConfig::clear_insert_schema_version() {
  if (GetArenaForAllocation() == nullptr && _impl_.insert_schema_version_ != nullptr) {
    delete _impl_.insert_schema_version_;
  }
  _impl_.insert_schema_version_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_insert_schema_version() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.insert_schema_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::insert_schema_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.insert_schema_version)
  return _internal_insert_schema_version();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_insert_schema_version(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_schema_version) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.insert_schema_version_);
  }
  _impl_.insert_schema_version_ = insert_schema_version;
  if (insert_schema_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_schema_version)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_insert_schema_version() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_schema_version_;
  _impl_.insert_schema_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_insert_schema_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.insert_schema_version)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.insert_schema_version_;
  _impl_.insert_schema_version_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_insert_schema_version() {
  
  if (_impl_.insert_schema_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.insert_schema_version_ = p;
  }
  return _impl_.insert_schema_version_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_insert_schema_version() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_insert_schema_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.insert_schema_version)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_insert_schema_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* insert_schema_version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.insert_schema_version_;
  }
  if (insert_schema_version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(insert_schema_version);
    if (message_arena != submessage_arena) {
      insert_schema_version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, insert_schema_version, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.insert_schema_version_ = insert_schema_version;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.insert_schema_version)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery update_schema_version = 64;
inline bool MetadataSourceQueryConfig::_internal_has_update_schema_version() const {
  return this != internal_default_instance() && _impl_.update_schema_version_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_update_schema_version() const {
  return _internal_has_update_schema_version();
}
inline void MetadataSourceQueryConfig::clear_update_schema_version() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_schema_version_ != nullptr) {
    delete _impl_.update_schema_version_;
  }
  _impl_.update_schema_version_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_update_schema_version() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.update_schema_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::update_schema_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.update_schema_version)
  return _internal_update_schema_version();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_update_schema_version(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_schema_version) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_schema_version_);
  }
  _impl_.update_schema_version_ = update_schema_version;
  if (update_schema_version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_schema_version)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_update_schema_version() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_schema_version_;
  _impl_.update_schema_version_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_update_schema_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.update_schema_version)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.update_schema_version_;
  _impl_.update_schema_version_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_update_schema_version() {
  
  if (_impl_.update_schema_version_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.update_schema_version_ = p;
  }
  return _impl_.update_schema_version_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_update_schema_version() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_update_schema_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.update_schema_version)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_update_schema_version(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* update_schema_version) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.update_schema_version_;
  }
  if (update_schema_version) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_schema_version);
    if (message_arena != submessage_arena) {
      update_schema_version = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_schema_version, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.update_schema_version_ = update_schema_version;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.update_schema_version)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery check_tables_in_v0_13_2 = 65;
inline bool MetadataSourceQueryConfig::_internal_has_check_tables_in_v0_13_2() const {
  return this != internal_default_instance() && _impl_.check_tables_in_v0_13_2_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_check_tables_in_v0_13_2() const {
  return _internal_has_check_tables_in_v0_13_2();
}
inline void MetadataSourceQueryConfig::clear_check_tables_in_v0_13_2() {
  if (GetArenaForAllocation() == nullptr && _impl_.check_tables_in_v0_13_2_ != nullptr) {
    delete _impl_.check_tables_in_v0_13_2_;
  }
  _impl_.check_tables_in_v0_13_2_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_check_tables_in_v0_13_2() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.check_tables_in_v0_13_2_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::check_tables_in_v0_13_2() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.check_tables_in_v0_13_2)
  return _internal_check_tables_in_v0_13_2();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_check_tables_in_v0_13_2(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_tables_in_v0_13_2) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.check_tables_in_v0_13_2_);
  }
  _impl_.check_tables_in_v0_13_2_ = check_tables_in_v0_13_2;
  if (check_tables_in_v0_13_2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_tables_in_v0_13_2)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_check_tables_in_v0_13_2() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_tables_in_v0_13_2_;
  _impl_.check_tables_in_v0_13_2_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_check_tables_in_v0_13_2() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.check_tables_in_v0_13_2)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.check_tables_in_v0_13_2_;
  _impl_.check_tables_in_v0_13_2_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_check_tables_in_v0_13_2() {
  
  if (_impl_.check_tables_in_v0_13_2_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.check_tables_in_v0_13_2_ = p;
  }
  return _impl_.check_tables_in_v0_13_2_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_check_tables_in_v0_13_2() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_check_tables_in_v0_13_2();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.check_tables_in_v0_13_2)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_check_tables_in_v0_13_2(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* check_tables_in_v0_13_2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.check_tables_in_v0_13_2_;
  }
  if (check_tables_in_v0_13_2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(check_tables_in_v0_13_2);
    if (message_arena != submessage_arena) {
      check_tables_in_v0_13_2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, check_tables_in_v0_13_2, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.check_tables_in_v0_13_2_ = check_tables_in_v0_13_2;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.check_tables_in_v0_13_2)
}

// repeated .ml_metadata.MetadataSourceQueryConfig.TemplateQuery secondary_indices = 105;
inline int MetadataSourceQueryConfig::_internal_secondary_indices_size() const {
  return _impl_.secondary_indices_.size();
}
inline int MetadataSourceQueryConfig::secondary_indices_size() const {
  return _internal_secondary_indices_size();
}
inline void MetadataSourceQueryConfig::clear_secondary_indices() {
  _impl_.secondary_indices_.Clear();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_secondary_indices(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.secondary_indices)
  return _impl_.secondary_indices_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >*
MetadataSourceQueryConfig::mutable_secondary_indices() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.MetadataSourceQueryConfig.secondary_indices)
  return &_impl_.secondary_indices_;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_secondary_indices(int index) const {
  return _impl_.secondary_indices_.Get(index);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::secondary_indices(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.secondary_indices)
  return _internal_secondary_indices(index);
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_add_secondary_indices() {
  return _impl_.secondary_indices_.Add();
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::add_secondary_indices() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _add = _internal_add_secondary_indices();
  // @@protoc_insertion_point(field_add:ml_metadata.MetadataSourceQueryConfig.secondary_indices)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery >&
MetadataSourceQueryConfig::secondary_indices() const {
  // @@protoc_insertion_point(field_list:ml_metadata.MetadataSourceQueryConfig.secondary_indices)
  return _impl_.secondary_indices_;
}

// map<int64, .ml_metadata.MetadataSourceQueryConfig.MigrationScheme> migration_schemes = 62;
inline int MetadataSourceQueryConfig::_internal_migration_schemes_size() const {
  return _impl_.migration_schemes_.size();
}
inline int MetadataSourceQueryConfig::migration_schemes_size() const {
  return _internal_migration_schemes_size();
}
inline void MetadataSourceQueryConfig::clear_migration_schemes() {
  _impl_.migration_schemes_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >&
MetadataSourceQueryConfig::_internal_migration_schemes() const {
  return _impl_.migration_schemes_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >&
MetadataSourceQueryConfig::migration_schemes() const {
  // @@protoc_insertion_point(field_map:ml_metadata.MetadataSourceQueryConfig.migration_schemes)
  return _internal_migration_schemes();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >*
MetadataSourceQueryConfig::_internal_mutable_migration_schemes() {
  return _impl_.migration_schemes_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::MetadataSourceQueryConfig_MigrationScheme >*
MetadataSourceQueryConfig::mutable_migration_schemes() {
  // @@protoc_insertion_point(field_mutable_map:ml_metadata.MetadataSourceQueryConfig.migration_schemes)
  return _internal_mutable_migration_schemes();
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_contexts_by_id = 112;
inline bool MetadataSourceQueryConfig::_internal_has_delete_contexts_by_id() const {
  return this != internal_default_instance() && _impl_.delete_contexts_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_contexts_by_id() const {
  return _internal_has_delete_contexts_by_id();
}
inline void MetadataSourceQueryConfig::clear_delete_contexts_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_contexts_by_id_ != nullptr) {
    delete _impl_.delete_contexts_by_id_;
  }
  _impl_.delete_contexts_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_contexts_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_contexts_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_contexts_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_contexts_by_id)
  return _internal_delete_contexts_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_contexts_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_contexts_by_id_);
  }
  _impl_.delete_contexts_by_id_ = delete_contexts_by_id;
  if (delete_contexts_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_contexts_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_contexts_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_contexts_by_id_;
  _impl_.delete_contexts_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_contexts_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_contexts_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_contexts_by_id_;
  _impl_.delete_contexts_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_contexts_by_id() {
  
  if (_impl_.delete_contexts_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_contexts_by_id_ = p;
  }
  return _impl_.delete_contexts_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_contexts_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_contexts_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_contexts_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_contexts_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_contexts_by_id_;
  }
  if (delete_contexts_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_contexts_by_id);
    if (message_arena != submessage_arena) {
      delete_contexts_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_contexts_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_contexts_by_id_ = delete_contexts_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_contexts_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_contexts_properties_by_contexts_id = 113;
inline bool MetadataSourceQueryConfig::_internal_has_delete_contexts_properties_by_contexts_id() const {
  return this != internal_default_instance() && _impl_.delete_contexts_properties_by_contexts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_contexts_properties_by_contexts_id() const {
  return _internal_has_delete_contexts_properties_by_contexts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_contexts_properties_by_contexts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_contexts_properties_by_contexts_id_ != nullptr) {
    delete _impl_.delete_contexts_properties_by_contexts_id_;
  }
  _impl_.delete_contexts_properties_by_contexts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_contexts_properties_by_contexts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_contexts_properties_by_contexts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_contexts_properties_by_contexts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_contexts_properties_by_contexts_id)
  return _internal_delete_contexts_properties_by_contexts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_contexts_properties_by_contexts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_properties_by_contexts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_contexts_properties_by_contexts_id_);
  }
  _impl_.delete_contexts_properties_by_contexts_id_ = delete_contexts_properties_by_contexts_id;
  if (delete_contexts_properties_by_contexts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_contexts_properties_by_contexts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_contexts_properties_by_contexts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_contexts_properties_by_contexts_id_;
  _impl_.delete_contexts_properties_by_contexts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_contexts_properties_by_contexts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_contexts_properties_by_contexts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_contexts_properties_by_contexts_id_;
  _impl_.delete_contexts_properties_by_contexts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_contexts_properties_by_contexts_id() {
  
  if (_impl_.delete_contexts_properties_by_contexts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_contexts_properties_by_contexts_id_ = p;
  }
  return _impl_.delete_contexts_properties_by_contexts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_contexts_properties_by_contexts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_contexts_properties_by_contexts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_contexts_properties_by_contexts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_contexts_properties_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_contexts_properties_by_contexts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_contexts_properties_by_contexts_id_;
  }
  if (delete_contexts_properties_by_contexts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_contexts_properties_by_contexts_id);
    if (message_arena != submessage_arena) {
      delete_contexts_properties_by_contexts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_contexts_properties_by_contexts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_contexts_properties_by_contexts_id_ = delete_contexts_properties_by_contexts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_contexts_properties_by_contexts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_parent_ids = 114;
inline bool MetadataSourceQueryConfig::_internal_has_delete_parent_contexts_by_parent_ids() const {
  return this != internal_default_instance() && _impl_.delete_parent_contexts_by_parent_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_parent_contexts_by_parent_ids() const {
  return _internal_has_delete_parent_contexts_by_parent_ids();
}
inline void MetadataSourceQueryConfig::clear_delete_parent_contexts_by_parent_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_parent_contexts_by_parent_ids_ != nullptr) {
    delete _impl_.delete_parent_contexts_by_parent_ids_;
  }
  _impl_.delete_parent_contexts_by_parent_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_parent_contexts_by_parent_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_parent_contexts_by_parent_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_parent_contexts_by_parent_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_ids)
  return _internal_delete_parent_contexts_by_parent_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_parent_contexts_by_parent_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_parent_contexts_by_parent_ids_);
  }
  _impl_.delete_parent_contexts_by_parent_ids_ = delete_parent_contexts_by_parent_ids;
  if (delete_parent_contexts_by_parent_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_parent_contexts_by_parent_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_parent_ids_;
  _impl_.delete_parent_contexts_by_parent_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_parent_contexts_by_parent_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_parent_ids_;
  _impl_.delete_parent_contexts_by_parent_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_parent_contexts_by_parent_ids() {
  
  if (_impl_.delete_parent_contexts_by_parent_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_parent_contexts_by_parent_ids_ = p;
  }
  return _impl_.delete_parent_contexts_by_parent_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_parent_contexts_by_parent_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_parent_contexts_by_parent_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_parent_contexts_by_parent_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_parent_contexts_by_parent_ids_;
  }
  if (delete_parent_contexts_by_parent_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_parent_contexts_by_parent_ids);
    if (message_arena != submessage_arena) {
      delete_parent_contexts_by_parent_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_parent_contexts_by_parent_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_parent_contexts_by_parent_ids_ = delete_parent_contexts_by_parent_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_child_ids = 115;
inline bool MetadataSourceQueryConfig::_internal_has_delete_parent_contexts_by_child_ids() const {
  return this != internal_default_instance() && _impl_.delete_parent_contexts_by_child_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_parent_contexts_by_child_ids() const {
  return _internal_has_delete_parent_contexts_by_child_ids();
}
inline void MetadataSourceQueryConfig::clear_delete_parent_contexts_by_child_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_parent_contexts_by_child_ids_ != nullptr) {
    delete _impl_.delete_parent_contexts_by_child_ids_;
  }
  _impl_.delete_parent_contexts_by_child_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_parent_contexts_by_child_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_parent_contexts_by_child_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_parent_contexts_by_child_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_child_ids)
  return _internal_delete_parent_contexts_by_child_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_parent_contexts_by_child_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_child_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_parent_contexts_by_child_ids_);
  }
  _impl_.delete_parent_contexts_by_child_ids_ = delete_parent_contexts_by_child_ids;
  if (delete_parent_contexts_by_child_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_child_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_parent_contexts_by_child_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_child_ids_;
  _impl_.delete_parent_contexts_by_child_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_parent_contexts_by_child_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_child_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_child_ids_;
  _impl_.delete_parent_contexts_by_child_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_parent_contexts_by_child_ids() {
  
  if (_impl_.delete_parent_contexts_by_child_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_parent_contexts_by_child_ids_ = p;
  }
  return _impl_.delete_parent_contexts_by_child_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_parent_contexts_by_child_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_parent_contexts_by_child_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_child_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_parent_contexts_by_child_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_child_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_parent_contexts_by_child_ids_;
  }
  if (delete_parent_contexts_by_child_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_parent_contexts_by_child_ids);
    if (message_arena != submessage_arena) {
      delete_parent_contexts_by_child_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_parent_contexts_by_child_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_parent_contexts_by_child_ids_ = delete_parent_contexts_by_child_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_child_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_contexts_by_parent_id_and_child_ids = 131;
inline bool MetadataSourceQueryConfig::_internal_has_delete_parent_contexts_by_parent_id_and_child_ids() const {
  return this != internal_default_instance() && _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_parent_contexts_by_parent_id_and_child_ids() const {
  return _internal_has_delete_parent_contexts_by_parent_id_and_child_ids();
}
inline void MetadataSourceQueryConfig::clear_delete_parent_contexts_by_parent_id_and_child_ids() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ != nullptr) {
    delete _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
  }
  _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_parent_contexts_by_parent_id_and_child_ids() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_parent_contexts_by_parent_id_and_child_ids() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_id_and_child_ids)
  return _internal_delete_parent_contexts_by_parent_id_and_child_ids();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_parent_contexts_by_parent_id_and_child_ids(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_id_and_child_ids) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_parent_contexts_by_parent_id_and_child_ids_);
  }
  _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = delete_parent_contexts_by_parent_id_and_child_ids;
  if (delete_parent_contexts_by_parent_id_and_child_ids) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_id_and_child_ids)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_parent_contexts_by_parent_id_and_child_ids() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
  _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_parent_contexts_by_parent_id_and_child_ids() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_id_and_child_ids)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
  _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_parent_contexts_by_parent_id_and_child_ids() {
  
  if (_impl_.delete_parent_contexts_by_parent_id_and_child_ids_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = p;
  }
  return _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_parent_contexts_by_parent_id_and_child_ids() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_parent_contexts_by_parent_id_and_child_ids();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_id_and_child_ids)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_parent_contexts_by_parent_id_and_child_ids(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_contexts_by_parent_id_and_child_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_parent_contexts_by_parent_id_and_child_ids_;
  }
  if (delete_parent_contexts_by_parent_id_and_child_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_parent_contexts_by_parent_id_and_child_ids);
    if (message_arena != submessage_arena) {
      delete_parent_contexts_by_parent_id_and_child_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_parent_contexts_by_parent_id_and_child_ids, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_parent_contexts_by_parent_id_and_child_ids_ = delete_parent_contexts_by_parent_id_and_child_ids;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_contexts_by_parent_id_and_child_ids)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifacts_by_id = 116;
inline bool MetadataSourceQueryConfig::_internal_has_delete_artifacts_by_id() const {
  return this != internal_default_instance() && _impl_.delete_artifacts_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_artifacts_by_id() const {
  return _internal_has_delete_artifacts_by_id();
}
inline void MetadataSourceQueryConfig::clear_delete_artifacts_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_artifacts_by_id_ != nullptr) {
    delete _impl_.delete_artifacts_by_id_;
  }
  _impl_.delete_artifacts_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_artifacts_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_artifacts_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_artifacts_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_by_id)
  return _internal_delete_artifacts_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_artifacts_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_artifacts_by_id_);
  }
  _impl_.delete_artifacts_by_id_ = delete_artifacts_by_id;
  if (delete_artifacts_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_artifacts_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifacts_by_id_;
  _impl_.delete_artifacts_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_artifacts_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifacts_by_id_;
  _impl_.delete_artifacts_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_artifacts_by_id() {
  
  if (_impl_.delete_artifacts_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_artifacts_by_id_ = p;
  }
  return _impl_.delete_artifacts_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_artifacts_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_artifacts_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_artifacts_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_artifacts_by_id_;
  }
  if (delete_artifacts_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_artifacts_by_id);
    if (message_arena != submessage_arena) {
      delete_artifacts_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_artifacts_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_artifacts_by_id_ = delete_artifacts_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_artifacts_properties_by_artifacts_id = 117;
inline bool MetadataSourceQueryConfig::_internal_has_delete_artifacts_properties_by_artifacts_id() const {
  return this != internal_default_instance() && _impl_.delete_artifacts_properties_by_artifacts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_artifacts_properties_by_artifacts_id() const {
  return _internal_has_delete_artifacts_properties_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_artifacts_properties_by_artifacts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_artifacts_properties_by_artifacts_id_ != nullptr) {
    delete _impl_.delete_artifacts_properties_by_artifacts_id_;
  }
  _impl_.delete_artifacts_properties_by_artifacts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_artifacts_properties_by_artifacts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_artifacts_properties_by_artifacts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_artifacts_properties_by_artifacts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_properties_by_artifacts_id)
  return _internal_delete_artifacts_properties_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_artifacts_properties_by_artifacts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_properties_by_artifacts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_artifacts_properties_by_artifacts_id_);
  }
  _impl_.delete_artifacts_properties_by_artifacts_id_ = delete_artifacts_properties_by_artifacts_id;
  if (delete_artifacts_properties_by_artifacts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_properties_by_artifacts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_artifacts_properties_by_artifacts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifacts_properties_by_artifacts_id_;
  _impl_.delete_artifacts_properties_by_artifacts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_artifacts_properties_by_artifacts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_properties_by_artifacts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_artifacts_properties_by_artifacts_id_;
  _impl_.delete_artifacts_properties_by_artifacts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_artifacts_properties_by_artifacts_id() {
  
  if (_impl_.delete_artifacts_properties_by_artifacts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_artifacts_properties_by_artifacts_id_ = p;
  }
  return _impl_.delete_artifacts_properties_by_artifacts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_artifacts_properties_by_artifacts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_artifacts_properties_by_artifacts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_properties_by_artifacts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_artifacts_properties_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_artifacts_properties_by_artifacts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_artifacts_properties_by_artifacts_id_;
  }
  if (delete_artifacts_properties_by_artifacts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_artifacts_properties_by_artifacts_id);
    if (message_arena != submessage_arena) {
      delete_artifacts_properties_by_artifacts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_artifacts_properties_by_artifacts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_artifacts_properties_by_artifacts_id_ = delete_artifacts_properties_by_artifacts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_artifacts_properties_by_artifacts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_executions_by_id = 118;
inline bool MetadataSourceQueryConfig::_internal_has_delete_executions_by_id() const {
  return this != internal_default_instance() && _impl_.delete_executions_by_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_executions_by_id() const {
  return _internal_has_delete_executions_by_id();
}
inline void MetadataSourceQueryConfig::clear_delete_executions_by_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_executions_by_id_ != nullptr) {
    delete _impl_.delete_executions_by_id_;
  }
  _impl_.delete_executions_by_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_executions_by_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_executions_by_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_executions_by_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_executions_by_id)
  return _internal_delete_executions_by_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_executions_by_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_by_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_executions_by_id_);
  }
  _impl_.delete_executions_by_id_ = delete_executions_by_id;
  if (delete_executions_by_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_executions_by_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_executions_by_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_executions_by_id_;
  _impl_.delete_executions_by_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_executions_by_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_executions_by_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_executions_by_id_;
  _impl_.delete_executions_by_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_executions_by_id() {
  
  if (_impl_.delete_executions_by_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_executions_by_id_ = p;
  }
  return _impl_.delete_executions_by_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_executions_by_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_executions_by_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_executions_by_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_executions_by_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_by_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_executions_by_id_;
  }
  if (delete_executions_by_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_executions_by_id);
    if (message_arena != submessage_arena) {
      delete_executions_by_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_executions_by_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_executions_by_id_ = delete_executions_by_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_executions_by_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_executions_properties_by_executions_id = 119;
inline bool MetadataSourceQueryConfig::_internal_has_delete_executions_properties_by_executions_id() const {
  return this != internal_default_instance() && _impl_.delete_executions_properties_by_executions_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_executions_properties_by_executions_id() const {
  return _internal_has_delete_executions_properties_by_executions_id();
}
inline void MetadataSourceQueryConfig::clear_delete_executions_properties_by_executions_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_executions_properties_by_executions_id_ != nullptr) {
    delete _impl_.delete_executions_properties_by_executions_id_;
  }
  _impl_.delete_executions_properties_by_executions_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_executions_properties_by_executions_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_executions_properties_by_executions_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_executions_properties_by_executions_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_executions_properties_by_executions_id)
  return _internal_delete_executions_properties_by_executions_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_executions_properties_by_executions_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_properties_by_executions_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_executions_properties_by_executions_id_);
  }
  _impl_.delete_executions_properties_by_executions_id_ = delete_executions_properties_by_executions_id;
  if (delete_executions_properties_by_executions_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_executions_properties_by_executions_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_executions_properties_by_executions_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_executions_properties_by_executions_id_;
  _impl_.delete_executions_properties_by_executions_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_executions_properties_by_executions_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_executions_properties_by_executions_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_executions_properties_by_executions_id_;
  _impl_.delete_executions_properties_by_executions_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_executions_properties_by_executions_id() {
  
  if (_impl_.delete_executions_properties_by_executions_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_executions_properties_by_executions_id_ = p;
  }
  return _impl_.delete_executions_properties_by_executions_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_executions_properties_by_executions_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_executions_properties_by_executions_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_executions_properties_by_executions_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_executions_properties_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_executions_properties_by_executions_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_executions_properties_by_executions_id_;
  }
  if (delete_executions_properties_by_executions_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_executions_properties_by_executions_id);
    if (message_arena != submessage_arena) {
      delete_executions_properties_by_executions_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_executions_properties_by_executions_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_executions_properties_by_executions_id_ = delete_executions_properties_by_executions_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_executions_properties_by_executions_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_events_by_artifacts_id = 120;
inline bool MetadataSourceQueryConfig::_internal_has_delete_events_by_artifacts_id() const {
  return this != internal_default_instance() && _impl_.delete_events_by_artifacts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_events_by_artifacts_id() const {
  return _internal_has_delete_events_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_events_by_artifacts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_events_by_artifacts_id_ != nullptr) {
    delete _impl_.delete_events_by_artifacts_id_;
  }
  _impl_.delete_events_by_artifacts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_events_by_artifacts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_events_by_artifacts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_events_by_artifacts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_events_by_artifacts_id)
  return _internal_delete_events_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_events_by_artifacts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_artifacts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_events_by_artifacts_id_);
  }
  _impl_.delete_events_by_artifacts_id_ = delete_events_by_artifacts_id;
  if (delete_events_by_artifacts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_events_by_artifacts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_events_by_artifacts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_events_by_artifacts_id_;
  _impl_.delete_events_by_artifacts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_events_by_artifacts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_events_by_artifacts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_events_by_artifacts_id_;
  _impl_.delete_events_by_artifacts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_events_by_artifacts_id() {
  
  if (_impl_.delete_events_by_artifacts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_events_by_artifacts_id_ = p;
  }
  return _impl_.delete_events_by_artifacts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_events_by_artifacts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_events_by_artifacts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_events_by_artifacts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_events_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_artifacts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_events_by_artifacts_id_;
  }
  if (delete_events_by_artifacts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_events_by_artifacts_id);
    if (message_arena != submessage_arena) {
      delete_events_by_artifacts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_events_by_artifacts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_events_by_artifacts_id_ = delete_events_by_artifacts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_events_by_artifacts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_events_by_executions_id = 121;
inline bool MetadataSourceQueryConfig::_internal_has_delete_events_by_executions_id() const {
  return this != internal_default_instance() && _impl_.delete_events_by_executions_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_events_by_executions_id() const {
  return _internal_has_delete_events_by_executions_id();
}
inline void MetadataSourceQueryConfig::clear_delete_events_by_executions_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_events_by_executions_id_ != nullptr) {
    delete _impl_.delete_events_by_executions_id_;
  }
  _impl_.delete_events_by_executions_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_events_by_executions_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_events_by_executions_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_events_by_executions_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_events_by_executions_id)
  return _internal_delete_events_by_executions_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_events_by_executions_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_executions_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_events_by_executions_id_);
  }
  _impl_.delete_events_by_executions_id_ = delete_events_by_executions_id;
  if (delete_events_by_executions_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_events_by_executions_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_events_by_executions_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_events_by_executions_id_;
  _impl_.delete_events_by_executions_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_events_by_executions_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_events_by_executions_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_events_by_executions_id_;
  _impl_.delete_events_by_executions_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_events_by_executions_id() {
  
  if (_impl_.delete_events_by_executions_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_events_by_executions_id_ = p;
  }
  return _impl_.delete_events_by_executions_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_events_by_executions_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_events_by_executions_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_events_by_executions_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_events_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_events_by_executions_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_events_by_executions_id_;
  }
  if (delete_events_by_executions_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_events_by_executions_id);
    if (message_arena != submessage_arena) {
      delete_events_by_executions_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_events_by_executions_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_events_by_executions_id_ = delete_events_by_executions_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_events_by_executions_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_associations_by_contexts_id = 122;
inline bool MetadataSourceQueryConfig::_internal_has_delete_associations_by_contexts_id() const {
  return this != internal_default_instance() && _impl_.delete_associations_by_contexts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_associations_by_contexts_id() const {
  return _internal_has_delete_associations_by_contexts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_associations_by_contexts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_associations_by_contexts_id_ != nullptr) {
    delete _impl_.delete_associations_by_contexts_id_;
  }
  _impl_.delete_associations_by_contexts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_associations_by_contexts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_associations_by_contexts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_associations_by_contexts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_contexts_id)
  return _internal_delete_associations_by_contexts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_associations_by_contexts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_contexts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_associations_by_contexts_id_);
  }
  _impl_.delete_associations_by_contexts_id_ = delete_associations_by_contexts_id;
  if (delete_associations_by_contexts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_contexts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_associations_by_contexts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_associations_by_contexts_id_;
  _impl_.delete_associations_by_contexts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_associations_by_contexts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_contexts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_associations_by_contexts_id_;
  _impl_.delete_associations_by_contexts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_associations_by_contexts_id() {
  
  if (_impl_.delete_associations_by_contexts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_associations_by_contexts_id_ = p;
  }
  return _impl_.delete_associations_by_contexts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_associations_by_contexts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_associations_by_contexts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_contexts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_associations_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_contexts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_associations_by_contexts_id_;
  }
  if (delete_associations_by_contexts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_associations_by_contexts_id);
    if (message_arena != submessage_arena) {
      delete_associations_by_contexts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_associations_by_contexts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_associations_by_contexts_id_ = delete_associations_by_contexts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_contexts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_associations_by_executions_id = 123;
inline bool MetadataSourceQueryConfig::_internal_has_delete_associations_by_executions_id() const {
  return this != internal_default_instance() && _impl_.delete_associations_by_executions_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_associations_by_executions_id() const {
  return _internal_has_delete_associations_by_executions_id();
}
inline void MetadataSourceQueryConfig::clear_delete_associations_by_executions_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_associations_by_executions_id_ != nullptr) {
    delete _impl_.delete_associations_by_executions_id_;
  }
  _impl_.delete_associations_by_executions_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_associations_by_executions_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_associations_by_executions_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_associations_by_executions_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_executions_id)
  return _internal_delete_associations_by_executions_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_associations_by_executions_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_executions_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_associations_by_executions_id_);
  }
  _impl_.delete_associations_by_executions_id_ = delete_associations_by_executions_id;
  if (delete_associations_by_executions_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_executions_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_associations_by_executions_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_associations_by_executions_id_;
  _impl_.delete_associations_by_executions_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_associations_by_executions_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_executions_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_associations_by_executions_id_;
  _impl_.delete_associations_by_executions_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_associations_by_executions_id() {
  
  if (_impl_.delete_associations_by_executions_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_associations_by_executions_id_ = p;
  }
  return _impl_.delete_associations_by_executions_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_associations_by_executions_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_associations_by_executions_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_executions_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_associations_by_executions_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_associations_by_executions_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_associations_by_executions_id_;
  }
  if (delete_associations_by_executions_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_associations_by_executions_id);
    if (message_arena != submessage_arena) {
      delete_associations_by_executions_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_associations_by_executions_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_associations_by_executions_id_ = delete_associations_by_executions_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_associations_by_executions_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_attributions_by_contexts_id = 124;
inline bool MetadataSourceQueryConfig::_internal_has_delete_attributions_by_contexts_id() const {
  return this != internal_default_instance() && _impl_.delete_attributions_by_contexts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_attributions_by_contexts_id() const {
  return _internal_has_delete_attributions_by_contexts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_attributions_by_contexts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_attributions_by_contexts_id_ != nullptr) {
    delete _impl_.delete_attributions_by_contexts_id_;
  }
  _impl_.delete_attributions_by_contexts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_attributions_by_contexts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_attributions_by_contexts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_attributions_by_contexts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_contexts_id)
  return _internal_delete_attributions_by_contexts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_attributions_by_contexts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_contexts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_attributions_by_contexts_id_);
  }
  _impl_.delete_attributions_by_contexts_id_ = delete_attributions_by_contexts_id;
  if (delete_attributions_by_contexts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_contexts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_attributions_by_contexts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_attributions_by_contexts_id_;
  _impl_.delete_attributions_by_contexts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_attributions_by_contexts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_contexts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_attributions_by_contexts_id_;
  _impl_.delete_attributions_by_contexts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_attributions_by_contexts_id() {
  
  if (_impl_.delete_attributions_by_contexts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_attributions_by_contexts_id_ = p;
  }
  return _impl_.delete_attributions_by_contexts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_attributions_by_contexts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_attributions_by_contexts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_contexts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_attributions_by_contexts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_contexts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_attributions_by_contexts_id_;
  }
  if (delete_attributions_by_contexts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_attributions_by_contexts_id);
    if (message_arena != submessage_arena) {
      delete_attributions_by_contexts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_attributions_by_contexts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_attributions_by_contexts_id_ = delete_attributions_by_contexts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_contexts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_attributions_by_artifacts_id = 125;
inline bool MetadataSourceQueryConfig::_internal_has_delete_attributions_by_artifacts_id() const {
  return this != internal_default_instance() && _impl_.delete_attributions_by_artifacts_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_attributions_by_artifacts_id() const {
  return _internal_has_delete_attributions_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::clear_delete_attributions_by_artifacts_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_attributions_by_artifacts_id_ != nullptr) {
    delete _impl_.delete_attributions_by_artifacts_id_;
  }
  _impl_.delete_attributions_by_artifacts_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_attributions_by_artifacts_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_attributions_by_artifacts_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_attributions_by_artifacts_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_artifacts_id)
  return _internal_delete_attributions_by_artifacts_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_attributions_by_artifacts_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_artifacts_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_attributions_by_artifacts_id_);
  }
  _impl_.delete_attributions_by_artifacts_id_ = delete_attributions_by_artifacts_id;
  if (delete_attributions_by_artifacts_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_artifacts_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_attributions_by_artifacts_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_attributions_by_artifacts_id_;
  _impl_.delete_attributions_by_artifacts_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_attributions_by_artifacts_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_artifacts_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_attributions_by_artifacts_id_;
  _impl_.delete_attributions_by_artifacts_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_attributions_by_artifacts_id() {
  
  if (_impl_.delete_attributions_by_artifacts_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_attributions_by_artifacts_id_ = p;
  }
  return _impl_.delete_attributions_by_artifacts_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_attributions_by_artifacts_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_attributions_by_artifacts_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_artifacts_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_attributions_by_artifacts_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_attributions_by_artifacts_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_attributions_by_artifacts_id_;
  }
  if (delete_attributions_by_artifacts_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_attributions_by_artifacts_id);
    if (message_arena != submessage_arena) {
      delete_attributions_by_artifacts_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_attributions_by_artifacts_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_attributions_by_artifacts_id_ = delete_attributions_by_artifacts_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_attributions_by_artifacts_id)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_event_paths = 126;
inline bool MetadataSourceQueryConfig::_internal_has_delete_event_paths() const {
  return this != internal_default_instance() && _impl_.delete_event_paths_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_event_paths() const {
  return _internal_has_delete_event_paths();
}
inline void MetadataSourceQueryConfig::clear_delete_event_paths() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_event_paths_ != nullptr) {
    delete _impl_.delete_event_paths_;
  }
  _impl_.delete_event_paths_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_event_paths() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_event_paths_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_event_paths() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_event_paths)
  return _internal_delete_event_paths();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_event_paths(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_event_paths) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_event_paths_);
  }
  _impl_.delete_event_paths_ = delete_event_paths;
  if (delete_event_paths) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_event_paths)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_event_paths() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_event_paths_;
  _impl_.delete_event_paths_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_event_paths() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_event_paths)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_event_paths_;
  _impl_.delete_event_paths_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_event_paths() {
  
  if (_impl_.delete_event_paths_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_event_paths_ = p;
  }
  return _impl_.delete_event_paths_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_event_paths() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_event_paths();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_event_paths)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_event_paths(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_event_paths) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_event_paths_;
  }
  if (delete_event_paths) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_event_paths);
    if (message_arena != submessage_arena) {
      delete_event_paths = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_event_paths, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_event_paths_ = delete_event_paths;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_event_paths)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery delete_parent_type = 127;
inline bool MetadataSourceQueryConfig::_internal_has_delete_parent_type() const {
  return this != internal_default_instance() && _impl_.delete_parent_type_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_delete_parent_type() const {
  return _internal_has_delete_parent_type();
}
inline void MetadataSourceQueryConfig::clear_delete_parent_type() {
  if (GetArenaForAllocation() == nullptr && _impl_.delete_parent_type_ != nullptr) {
    delete _impl_.delete_parent_type_;
  }
  _impl_.delete_parent_type_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_delete_parent_type() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.delete_parent_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::delete_parent_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.delete_parent_type)
  return _internal_delete_parent_type();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_delete_parent_type(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.delete_parent_type_);
  }
  _impl_.delete_parent_type_ = delete_parent_type;
  if (delete_parent_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_type)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_delete_parent_type() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_type_;
  _impl_.delete_parent_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_delete_parent_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.delete_parent_type)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.delete_parent_type_;
  _impl_.delete_parent_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_delete_parent_type() {
  
  if (_impl_.delete_parent_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.delete_parent_type_ = p;
  }
  return _impl_.delete_parent_type_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_delete_parent_type() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_delete_parent_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.delete_parent_type)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_delete_parent_type(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* delete_parent_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.delete_parent_type_;
  }
  if (delete_parent_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(delete_parent_type);
    if (message_arena != submessage_arena) {
      delete_parent_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_parent_type, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.delete_parent_type_ = delete_parent_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.delete_parent_type)
}

// .ml_metadata.MetadataSourceQueryConfig.TemplateQuery select_properties_by_type_id = 129;
inline bool MetadataSourceQueryConfig::_internal_has_select_properties_by_type_id() const {
  return this != internal_default_instance() && _impl_.select_properties_by_type_id_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_select_properties_by_type_id() const {
  return _internal_has_select_properties_by_type_id();
}
inline void MetadataSourceQueryConfig::clear_select_properties_by_type_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.select_properties_by_type_id_ != nullptr) {
    delete _impl_.select_properties_by_type_id_;
  }
  _impl_.select_properties_by_type_id_ = nullptr;
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::_internal_select_properties_by_type_id() const {
  const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* p = _impl_.select_properties_by_type_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery&>(
      ::ml_metadata::_MetadataSourceQueryConfig_TemplateQuery_default_instance_);
}
inline const ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery& MetadataSourceQueryConfig::select_properties_by_type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.select_properties_by_type_id)
  return _internal_select_properties_by_type_id();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_select_properties_by_type_id(
    ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_properties_by_type_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.select_properties_by_type_id_);
  }
  _impl_.select_properties_by_type_id_ = select_properties_by_type_id;
  if (select_properties_by_type_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_properties_by_type_id)
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::release_select_properties_by_type_id() {
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_properties_by_type_id_;
  _impl_.select_properties_by_type_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::unsafe_arena_release_select_properties_by_type_id() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.select_properties_by_type_id)
  
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* temp = _impl_.select_properties_by_type_id_;
  _impl_.select_properties_by_type_id_ = nullptr;
  return temp;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::_internal_mutable_select_properties_by_type_id() {
  
  if (_impl_.select_properties_by_type_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::MetadataSourceQueryConfig_TemplateQuery>(GetArenaForAllocation());
    _impl_.select_properties_by_type_id_ = p;
  }
  return _impl_.select_properties_by_type_id_;
}
inline ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* MetadataSourceQueryConfig::mutable_select_properties_by_type_id() {
  ::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* _msg = _internal_mutable_select_properties_by_type_id();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.select_properties_by_type_id)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_select_properties_by_type_id(::ml_metadata::MetadataSourceQueryConfig_TemplateQuery* select_properties_by_type_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.select_properties_by_type_id_;
  }
  if (select_properties_by_type_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(select_properties_by_type_id);
    if (message_arena != submessage_arena) {
      select_properties_by_type_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_properties_by_type_id, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.select_properties_by_type_id_ = select_properties_by_type_id;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.select_properties_by_type_id)
}

// .google.protobuf.Any metadata_source_type_specific_options = 135;
inline bool MetadataSourceQueryConfig::_internal_has_metadata_source_type_specific_options() const {
  return this != internal_default_instance() && _impl_.metadata_source_type_specific_options_ != nullptr;
}
inline bool MetadataSourceQueryConfig::has_metadata_source_type_specific_options() const {
  return _internal_has_metadata_source_type_specific_options();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MetadataSourceQueryConfig::_internal_metadata_source_type_specific_options() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.metadata_source_type_specific_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MetadataSourceQueryConfig::metadata_source_type_specific_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MetadataSourceQueryConfig.metadata_source_type_specific_options)
  return _internal_metadata_source_type_specific_options();
}
inline void MetadataSourceQueryConfig::unsafe_arena_set_allocated_metadata_source_type_specific_options(
    ::PROTOBUF_NAMESPACE_ID::Any* metadata_source_type_specific_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.metadata_source_type_specific_options_);
  }
  _impl_.metadata_source_type_specific_options_ = metadata_source_type_specific_options;
  if (metadata_source_type_specific_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.MetadataSourceQueryConfig.metadata_source_type_specific_options)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MetadataSourceQueryConfig::release_metadata_source_type_specific_options() {
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.metadata_source_type_specific_options_;
  _impl_.metadata_source_type_specific_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MetadataSourceQueryConfig::unsafe_arena_release_metadata_source_type_specific_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.MetadataSourceQueryConfig.metadata_source_type_specific_options)
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.metadata_source_type_specific_options_;
  _impl_.metadata_source_type_specific_options_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MetadataSourceQueryConfig::_internal_mutable_metadata_source_type_specific_options() {
  
  if (_impl_.metadata_source_type_specific_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.metadata_source_type_specific_options_ = p;
  }
  return _impl_.metadata_source_type_specific_options_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MetadataSourceQueryConfig::mutable_metadata_source_type_specific_options() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_metadata_source_type_specific_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.MetadataSourceQueryConfig.metadata_source_type_specific_options)
  return _msg;
}
inline void MetadataSourceQueryConfig::set_allocated_metadata_source_type_specific_options(::PROTOBUF_NAMESPACE_ID::Any* metadata_source_type_specific_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.metadata_source_type_specific_options_);
  }
  if (metadata_source_type_specific_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_source_type_specific_options));
    if (message_arena != submessage_arena) {
      metadata_source_type_specific_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata_source_type_specific_options, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.metadata_source_type_specific_options_ = metadata_source_type_specific_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.MetadataSourceQueryConfig.metadata_source_type_specific_options)
}

// -------------------------------------------------------------------

// MySQLSourceErrorInfo

// int64 mysql_error_code = 1;
inline void MySQLSourceErrorInfo::clear_mysql_error_code() {
  _impl_.mysql_error_code_ = int64_t{0};
}
inline int64_t MySQLSourceErrorInfo::_internal_mysql_error_code() const {
  return _impl_.mysql_error_code_;
}
inline int64_t MySQLSourceErrorInfo::mysql_error_code() const {
  // @@protoc_insertion_point(field_get:ml_metadata.MySQLSourceErrorInfo.mysql_error_code)
  return _internal_mysql_error_code();
}
inline void MySQLSourceErrorInfo::_internal_set_mysql_error_code(int64_t value) {
  
  _impl_.mysql_error_code_ = value;
}
inline void MySQLSourceErrorInfo::set_mysql_error_code(int64_t value) {
  _internal_set_mysql_error_code(value);
  // @@protoc_insertion_point(field_set:ml_metadata.MySQLSourceErrorInfo.mysql_error_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ml_metadata

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ml_metadata::MetadataSourceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ml_metadata::MetadataSourceType>() {
  return ::ml_metadata::MetadataSourceType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fsource_2eproto
