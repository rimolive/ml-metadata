// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ml_metadata/proto/metadata_store_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/field_mask.pb.h>
#include "ml_metadata/proto/metadata_store.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
namespace ml_metadata {
class ArtifactAndType;
struct ArtifactAndTypeDefaultTypeInternal;
extern ArtifactAndTypeDefaultTypeInternal _ArtifactAndType_default_instance_;
class ArtifactStruct;
struct ArtifactStructDefaultTypeInternal;
extern ArtifactStructDefaultTypeInternal _ArtifactStruct_default_instance_;
class ArtifactStructList;
struct ArtifactStructListDefaultTypeInternal;
extern ArtifactStructListDefaultTypeInternal _ArtifactStructList_default_instance_;
class ArtifactStructMap;
struct ArtifactStructMapDefaultTypeInternal;
extern ArtifactStructMapDefaultTypeInternal _ArtifactStructMap_default_instance_;
class ArtifactStructMap_PropertiesEntry_DoNotUse;
struct ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal _ArtifactStructMap_PropertiesEntry_DoNotUse_default_instance_;
class GetArtifactByTypeAndNameRequest;
struct GetArtifactByTypeAndNameRequestDefaultTypeInternal;
extern GetArtifactByTypeAndNameRequestDefaultTypeInternal _GetArtifactByTypeAndNameRequest_default_instance_;
class GetArtifactByTypeAndNameResponse;
struct GetArtifactByTypeAndNameResponseDefaultTypeInternal;
extern GetArtifactByTypeAndNameResponseDefaultTypeInternal _GetArtifactByTypeAndNameResponse_default_instance_;
class GetArtifactTypeRequest;
struct GetArtifactTypeRequestDefaultTypeInternal;
extern GetArtifactTypeRequestDefaultTypeInternal _GetArtifactTypeRequest_default_instance_;
class GetArtifactTypeResponse;
struct GetArtifactTypeResponseDefaultTypeInternal;
extern GetArtifactTypeResponseDefaultTypeInternal _GetArtifactTypeResponse_default_instance_;
class GetArtifactTypesByExternalIdsRequest;
struct GetArtifactTypesByExternalIdsRequestDefaultTypeInternal;
extern GetArtifactTypesByExternalIdsRequestDefaultTypeInternal _GetArtifactTypesByExternalIdsRequest_default_instance_;
class GetArtifactTypesByExternalIdsResponse;
struct GetArtifactTypesByExternalIdsResponseDefaultTypeInternal;
extern GetArtifactTypesByExternalIdsResponseDefaultTypeInternal _GetArtifactTypesByExternalIdsResponse_default_instance_;
class GetArtifactTypesByIDRequest;
struct GetArtifactTypesByIDRequestDefaultTypeInternal;
extern GetArtifactTypesByIDRequestDefaultTypeInternal _GetArtifactTypesByIDRequest_default_instance_;
class GetArtifactTypesByIDResponse;
struct GetArtifactTypesByIDResponseDefaultTypeInternal;
extern GetArtifactTypesByIDResponseDefaultTypeInternal _GetArtifactTypesByIDResponse_default_instance_;
class GetArtifactTypesRequest;
struct GetArtifactTypesRequestDefaultTypeInternal;
extern GetArtifactTypesRequestDefaultTypeInternal _GetArtifactTypesRequest_default_instance_;
class GetArtifactTypesResponse;
struct GetArtifactTypesResponseDefaultTypeInternal;
extern GetArtifactTypesResponseDefaultTypeInternal _GetArtifactTypesResponse_default_instance_;
class GetArtifactsByContextRequest;
struct GetArtifactsByContextRequestDefaultTypeInternal;
extern GetArtifactsByContextRequestDefaultTypeInternal _GetArtifactsByContextRequest_default_instance_;
class GetArtifactsByContextResponse;
struct GetArtifactsByContextResponseDefaultTypeInternal;
extern GetArtifactsByContextResponseDefaultTypeInternal _GetArtifactsByContextResponse_default_instance_;
class GetArtifactsByExternalIdsRequest;
struct GetArtifactsByExternalIdsRequestDefaultTypeInternal;
extern GetArtifactsByExternalIdsRequestDefaultTypeInternal _GetArtifactsByExternalIdsRequest_default_instance_;
class GetArtifactsByExternalIdsResponse;
struct GetArtifactsByExternalIdsResponseDefaultTypeInternal;
extern GetArtifactsByExternalIdsResponseDefaultTypeInternal _GetArtifactsByExternalIdsResponse_default_instance_;
class GetArtifactsByIDRequest;
struct GetArtifactsByIDRequestDefaultTypeInternal;
extern GetArtifactsByIDRequestDefaultTypeInternal _GetArtifactsByIDRequest_default_instance_;
class GetArtifactsByIDResponse;
struct GetArtifactsByIDResponseDefaultTypeInternal;
extern GetArtifactsByIDResponseDefaultTypeInternal _GetArtifactsByIDResponse_default_instance_;
class GetArtifactsByTypeRequest;
struct GetArtifactsByTypeRequestDefaultTypeInternal;
extern GetArtifactsByTypeRequestDefaultTypeInternal _GetArtifactsByTypeRequest_default_instance_;
class GetArtifactsByTypeResponse;
struct GetArtifactsByTypeResponseDefaultTypeInternal;
extern GetArtifactsByTypeResponseDefaultTypeInternal _GetArtifactsByTypeResponse_default_instance_;
class GetArtifactsByURIRequest;
struct GetArtifactsByURIRequestDefaultTypeInternal;
extern GetArtifactsByURIRequestDefaultTypeInternal _GetArtifactsByURIRequest_default_instance_;
class GetArtifactsByURIResponse;
struct GetArtifactsByURIResponseDefaultTypeInternal;
extern GetArtifactsByURIResponseDefaultTypeInternal _GetArtifactsByURIResponse_default_instance_;
class GetArtifactsRequest;
struct GetArtifactsRequestDefaultTypeInternal;
extern GetArtifactsRequestDefaultTypeInternal _GetArtifactsRequest_default_instance_;
class GetArtifactsResponse;
struct GetArtifactsResponseDefaultTypeInternal;
extern GetArtifactsResponseDefaultTypeInternal _GetArtifactsResponse_default_instance_;
class GetChildrenContextsByContextRequest;
struct GetChildrenContextsByContextRequestDefaultTypeInternal;
extern GetChildrenContextsByContextRequestDefaultTypeInternal _GetChildrenContextsByContextRequest_default_instance_;
class GetChildrenContextsByContextResponse;
struct GetChildrenContextsByContextResponseDefaultTypeInternal;
extern GetChildrenContextsByContextResponseDefaultTypeInternal _GetChildrenContextsByContextResponse_default_instance_;
class GetChildrenContextsByContextsRequest;
struct GetChildrenContextsByContextsRequestDefaultTypeInternal;
extern GetChildrenContextsByContextsRequestDefaultTypeInternal _GetChildrenContextsByContextsRequest_default_instance_;
class GetChildrenContextsByContextsResponse;
struct GetChildrenContextsByContextsResponseDefaultTypeInternal;
extern GetChildrenContextsByContextsResponseDefaultTypeInternal _GetChildrenContextsByContextsResponse_default_instance_;
class GetChildrenContextsByContextsResponse_ChildrenContextsPerParent;
struct GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal;
extern GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal _GetChildrenContextsByContextsResponse_ChildrenContextsPerParent_default_instance_;
class GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse;
struct GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal;
extern GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal _GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_;
class GetContextByTypeAndNameRequest;
struct GetContextByTypeAndNameRequestDefaultTypeInternal;
extern GetContextByTypeAndNameRequestDefaultTypeInternal _GetContextByTypeAndNameRequest_default_instance_;
class GetContextByTypeAndNameResponse;
struct GetContextByTypeAndNameResponseDefaultTypeInternal;
extern GetContextByTypeAndNameResponseDefaultTypeInternal _GetContextByTypeAndNameResponse_default_instance_;
class GetContextTypeRequest;
struct GetContextTypeRequestDefaultTypeInternal;
extern GetContextTypeRequestDefaultTypeInternal _GetContextTypeRequest_default_instance_;
class GetContextTypeResponse;
struct GetContextTypeResponseDefaultTypeInternal;
extern GetContextTypeResponseDefaultTypeInternal _GetContextTypeResponse_default_instance_;
class GetContextTypesByExternalIdsRequest;
struct GetContextTypesByExternalIdsRequestDefaultTypeInternal;
extern GetContextTypesByExternalIdsRequestDefaultTypeInternal _GetContextTypesByExternalIdsRequest_default_instance_;
class GetContextTypesByExternalIdsResponse;
struct GetContextTypesByExternalIdsResponseDefaultTypeInternal;
extern GetContextTypesByExternalIdsResponseDefaultTypeInternal _GetContextTypesByExternalIdsResponse_default_instance_;
class GetContextTypesByIDRequest;
struct GetContextTypesByIDRequestDefaultTypeInternal;
extern GetContextTypesByIDRequestDefaultTypeInternal _GetContextTypesByIDRequest_default_instance_;
class GetContextTypesByIDResponse;
struct GetContextTypesByIDResponseDefaultTypeInternal;
extern GetContextTypesByIDResponseDefaultTypeInternal _GetContextTypesByIDResponse_default_instance_;
class GetContextTypesRequest;
struct GetContextTypesRequestDefaultTypeInternal;
extern GetContextTypesRequestDefaultTypeInternal _GetContextTypesRequest_default_instance_;
class GetContextTypesResponse;
struct GetContextTypesResponseDefaultTypeInternal;
extern GetContextTypesResponseDefaultTypeInternal _GetContextTypesResponse_default_instance_;
class GetContextsByArtifactRequest;
struct GetContextsByArtifactRequestDefaultTypeInternal;
extern GetContextsByArtifactRequestDefaultTypeInternal _GetContextsByArtifactRequest_default_instance_;
class GetContextsByArtifactResponse;
struct GetContextsByArtifactResponseDefaultTypeInternal;
extern GetContextsByArtifactResponseDefaultTypeInternal _GetContextsByArtifactResponse_default_instance_;
class GetContextsByExecutionRequest;
struct GetContextsByExecutionRequestDefaultTypeInternal;
extern GetContextsByExecutionRequestDefaultTypeInternal _GetContextsByExecutionRequest_default_instance_;
class GetContextsByExecutionResponse;
struct GetContextsByExecutionResponseDefaultTypeInternal;
extern GetContextsByExecutionResponseDefaultTypeInternal _GetContextsByExecutionResponse_default_instance_;
class GetContextsByExternalIdsRequest;
struct GetContextsByExternalIdsRequestDefaultTypeInternal;
extern GetContextsByExternalIdsRequestDefaultTypeInternal _GetContextsByExternalIdsRequest_default_instance_;
class GetContextsByExternalIdsResponse;
struct GetContextsByExternalIdsResponseDefaultTypeInternal;
extern GetContextsByExternalIdsResponseDefaultTypeInternal _GetContextsByExternalIdsResponse_default_instance_;
class GetContextsByIDRequest;
struct GetContextsByIDRequestDefaultTypeInternal;
extern GetContextsByIDRequestDefaultTypeInternal _GetContextsByIDRequest_default_instance_;
class GetContextsByIDResponse;
struct GetContextsByIDResponseDefaultTypeInternal;
extern GetContextsByIDResponseDefaultTypeInternal _GetContextsByIDResponse_default_instance_;
class GetContextsByTypeRequest;
struct GetContextsByTypeRequestDefaultTypeInternal;
extern GetContextsByTypeRequestDefaultTypeInternal _GetContextsByTypeRequest_default_instance_;
class GetContextsByTypeResponse;
struct GetContextsByTypeResponseDefaultTypeInternal;
extern GetContextsByTypeResponseDefaultTypeInternal _GetContextsByTypeResponse_default_instance_;
class GetContextsRequest;
struct GetContextsRequestDefaultTypeInternal;
extern GetContextsRequestDefaultTypeInternal _GetContextsRequest_default_instance_;
class GetContextsResponse;
struct GetContextsResponseDefaultTypeInternal;
extern GetContextsResponseDefaultTypeInternal _GetContextsResponse_default_instance_;
class GetEventsByArtifactIDsRequest;
struct GetEventsByArtifactIDsRequestDefaultTypeInternal;
extern GetEventsByArtifactIDsRequestDefaultTypeInternal _GetEventsByArtifactIDsRequest_default_instance_;
class GetEventsByArtifactIDsResponse;
struct GetEventsByArtifactIDsResponseDefaultTypeInternal;
extern GetEventsByArtifactIDsResponseDefaultTypeInternal _GetEventsByArtifactIDsResponse_default_instance_;
class GetEventsByExecutionIDsRequest;
struct GetEventsByExecutionIDsRequestDefaultTypeInternal;
extern GetEventsByExecutionIDsRequestDefaultTypeInternal _GetEventsByExecutionIDsRequest_default_instance_;
class GetEventsByExecutionIDsResponse;
struct GetEventsByExecutionIDsResponseDefaultTypeInternal;
extern GetEventsByExecutionIDsResponseDefaultTypeInternal _GetEventsByExecutionIDsResponse_default_instance_;
class GetExecutionByTypeAndNameRequest;
struct GetExecutionByTypeAndNameRequestDefaultTypeInternal;
extern GetExecutionByTypeAndNameRequestDefaultTypeInternal _GetExecutionByTypeAndNameRequest_default_instance_;
class GetExecutionByTypeAndNameResponse;
struct GetExecutionByTypeAndNameResponseDefaultTypeInternal;
extern GetExecutionByTypeAndNameResponseDefaultTypeInternal _GetExecutionByTypeAndNameResponse_default_instance_;
class GetExecutionTypeRequest;
struct GetExecutionTypeRequestDefaultTypeInternal;
extern GetExecutionTypeRequestDefaultTypeInternal _GetExecutionTypeRequest_default_instance_;
class GetExecutionTypeResponse;
struct GetExecutionTypeResponseDefaultTypeInternal;
extern GetExecutionTypeResponseDefaultTypeInternal _GetExecutionTypeResponse_default_instance_;
class GetExecutionTypesByExternalIdsRequest;
struct GetExecutionTypesByExternalIdsRequestDefaultTypeInternal;
extern GetExecutionTypesByExternalIdsRequestDefaultTypeInternal _GetExecutionTypesByExternalIdsRequest_default_instance_;
class GetExecutionTypesByExternalIdsResponse;
struct GetExecutionTypesByExternalIdsResponseDefaultTypeInternal;
extern GetExecutionTypesByExternalIdsResponseDefaultTypeInternal _GetExecutionTypesByExternalIdsResponse_default_instance_;
class GetExecutionTypesByIDRequest;
struct GetExecutionTypesByIDRequestDefaultTypeInternal;
extern GetExecutionTypesByIDRequestDefaultTypeInternal _GetExecutionTypesByIDRequest_default_instance_;
class GetExecutionTypesByIDResponse;
struct GetExecutionTypesByIDResponseDefaultTypeInternal;
extern GetExecutionTypesByIDResponseDefaultTypeInternal _GetExecutionTypesByIDResponse_default_instance_;
class GetExecutionTypesRequest;
struct GetExecutionTypesRequestDefaultTypeInternal;
extern GetExecutionTypesRequestDefaultTypeInternal _GetExecutionTypesRequest_default_instance_;
class GetExecutionTypesResponse;
struct GetExecutionTypesResponseDefaultTypeInternal;
extern GetExecutionTypesResponseDefaultTypeInternal _GetExecutionTypesResponse_default_instance_;
class GetExecutionsByContextRequest;
struct GetExecutionsByContextRequestDefaultTypeInternal;
extern GetExecutionsByContextRequestDefaultTypeInternal _GetExecutionsByContextRequest_default_instance_;
class GetExecutionsByContextResponse;
struct GetExecutionsByContextResponseDefaultTypeInternal;
extern GetExecutionsByContextResponseDefaultTypeInternal _GetExecutionsByContextResponse_default_instance_;
class GetExecutionsByExternalIdsRequest;
struct GetExecutionsByExternalIdsRequestDefaultTypeInternal;
extern GetExecutionsByExternalIdsRequestDefaultTypeInternal _GetExecutionsByExternalIdsRequest_default_instance_;
class GetExecutionsByExternalIdsResponse;
struct GetExecutionsByExternalIdsResponseDefaultTypeInternal;
extern GetExecutionsByExternalIdsResponseDefaultTypeInternal _GetExecutionsByExternalIdsResponse_default_instance_;
class GetExecutionsByIDRequest;
struct GetExecutionsByIDRequestDefaultTypeInternal;
extern GetExecutionsByIDRequestDefaultTypeInternal _GetExecutionsByIDRequest_default_instance_;
class GetExecutionsByIDResponse;
struct GetExecutionsByIDResponseDefaultTypeInternal;
extern GetExecutionsByIDResponseDefaultTypeInternal _GetExecutionsByIDResponse_default_instance_;
class GetExecutionsByTypeRequest;
struct GetExecutionsByTypeRequestDefaultTypeInternal;
extern GetExecutionsByTypeRequestDefaultTypeInternal _GetExecutionsByTypeRequest_default_instance_;
class GetExecutionsByTypeResponse;
struct GetExecutionsByTypeResponseDefaultTypeInternal;
extern GetExecutionsByTypeResponseDefaultTypeInternal _GetExecutionsByTypeResponse_default_instance_;
class GetExecutionsRequest;
struct GetExecutionsRequestDefaultTypeInternal;
extern GetExecutionsRequestDefaultTypeInternal _GetExecutionsRequest_default_instance_;
class GetExecutionsResponse;
struct GetExecutionsResponseDefaultTypeInternal;
extern GetExecutionsResponseDefaultTypeInternal _GetExecutionsResponse_default_instance_;
class GetLineageGraphRequest;
struct GetLineageGraphRequestDefaultTypeInternal;
extern GetLineageGraphRequestDefaultTypeInternal _GetLineageGraphRequest_default_instance_;
class GetLineageGraphResponse;
struct GetLineageGraphResponseDefaultTypeInternal;
extern GetLineageGraphResponseDefaultTypeInternal _GetLineageGraphResponse_default_instance_;
class GetLineageSubgraphRequest;
struct GetLineageSubgraphRequestDefaultTypeInternal;
extern GetLineageSubgraphRequestDefaultTypeInternal _GetLineageSubgraphRequest_default_instance_;
class GetLineageSubgraphResponse;
struct GetLineageSubgraphResponseDefaultTypeInternal;
extern GetLineageSubgraphResponseDefaultTypeInternal _GetLineageSubgraphResponse_default_instance_;
class GetParentContextsByContextRequest;
struct GetParentContextsByContextRequestDefaultTypeInternal;
extern GetParentContextsByContextRequestDefaultTypeInternal _GetParentContextsByContextRequest_default_instance_;
class GetParentContextsByContextResponse;
struct GetParentContextsByContextResponseDefaultTypeInternal;
extern GetParentContextsByContextResponseDefaultTypeInternal _GetParentContextsByContextResponse_default_instance_;
class GetParentContextsByContextsRequest;
struct GetParentContextsByContextsRequestDefaultTypeInternal;
extern GetParentContextsByContextsRequestDefaultTypeInternal _GetParentContextsByContextsRequest_default_instance_;
class GetParentContextsByContextsResponse;
struct GetParentContextsByContextsResponseDefaultTypeInternal;
extern GetParentContextsByContextsResponseDefaultTypeInternal _GetParentContextsByContextsResponse_default_instance_;
class GetParentContextsByContextsResponse_ContextsEntry_DoNotUse;
struct GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal;
extern GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal _GetParentContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_;
class GetParentContextsByContextsResponse_ParentContextsPerChild;
struct GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal;
extern GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal _GetParentContextsByContextsResponse_ParentContextsPerChild_default_instance_;
class PutArtifactTypeRequest;
struct PutArtifactTypeRequestDefaultTypeInternal;
extern PutArtifactTypeRequestDefaultTypeInternal _PutArtifactTypeRequest_default_instance_;
class PutArtifactTypeResponse;
struct PutArtifactTypeResponseDefaultTypeInternal;
extern PutArtifactTypeResponseDefaultTypeInternal _PutArtifactTypeResponse_default_instance_;
class PutArtifactsRequest;
struct PutArtifactsRequestDefaultTypeInternal;
extern PutArtifactsRequestDefaultTypeInternal _PutArtifactsRequest_default_instance_;
class PutArtifactsRequest_Options;
struct PutArtifactsRequest_OptionsDefaultTypeInternal;
extern PutArtifactsRequest_OptionsDefaultTypeInternal _PutArtifactsRequest_Options_default_instance_;
class PutArtifactsResponse;
struct PutArtifactsResponseDefaultTypeInternal;
extern PutArtifactsResponseDefaultTypeInternal _PutArtifactsResponse_default_instance_;
class PutAttributionsAndAssociationsRequest;
struct PutAttributionsAndAssociationsRequestDefaultTypeInternal;
extern PutAttributionsAndAssociationsRequestDefaultTypeInternal _PutAttributionsAndAssociationsRequest_default_instance_;
class PutAttributionsAndAssociationsResponse;
struct PutAttributionsAndAssociationsResponseDefaultTypeInternal;
extern PutAttributionsAndAssociationsResponseDefaultTypeInternal _PutAttributionsAndAssociationsResponse_default_instance_;
class PutContextTypeRequest;
struct PutContextTypeRequestDefaultTypeInternal;
extern PutContextTypeRequestDefaultTypeInternal _PutContextTypeRequest_default_instance_;
class PutContextTypeResponse;
struct PutContextTypeResponseDefaultTypeInternal;
extern PutContextTypeResponseDefaultTypeInternal _PutContextTypeResponse_default_instance_;
class PutContextsRequest;
struct PutContextsRequestDefaultTypeInternal;
extern PutContextsRequestDefaultTypeInternal _PutContextsRequest_default_instance_;
class PutContextsResponse;
struct PutContextsResponseDefaultTypeInternal;
extern PutContextsResponseDefaultTypeInternal _PutContextsResponse_default_instance_;
class PutEventsRequest;
struct PutEventsRequestDefaultTypeInternal;
extern PutEventsRequestDefaultTypeInternal _PutEventsRequest_default_instance_;
class PutEventsResponse;
struct PutEventsResponseDefaultTypeInternal;
extern PutEventsResponseDefaultTypeInternal _PutEventsResponse_default_instance_;
class PutExecutionRequest;
struct PutExecutionRequestDefaultTypeInternal;
extern PutExecutionRequestDefaultTypeInternal _PutExecutionRequest_default_instance_;
class PutExecutionRequest_ArtifactAndEvent;
struct PutExecutionRequest_ArtifactAndEventDefaultTypeInternal;
extern PutExecutionRequest_ArtifactAndEventDefaultTypeInternal _PutExecutionRequest_ArtifactAndEvent_default_instance_;
class PutExecutionRequest_Options;
struct PutExecutionRequest_OptionsDefaultTypeInternal;
extern PutExecutionRequest_OptionsDefaultTypeInternal _PutExecutionRequest_Options_default_instance_;
class PutExecutionResponse;
struct PutExecutionResponseDefaultTypeInternal;
extern PutExecutionResponseDefaultTypeInternal _PutExecutionResponse_default_instance_;
class PutExecutionTypeRequest;
struct PutExecutionTypeRequestDefaultTypeInternal;
extern PutExecutionTypeRequestDefaultTypeInternal _PutExecutionTypeRequest_default_instance_;
class PutExecutionTypeResponse;
struct PutExecutionTypeResponseDefaultTypeInternal;
extern PutExecutionTypeResponseDefaultTypeInternal _PutExecutionTypeResponse_default_instance_;
class PutExecutionsRequest;
struct PutExecutionsRequestDefaultTypeInternal;
extern PutExecutionsRequestDefaultTypeInternal _PutExecutionsRequest_default_instance_;
class PutExecutionsResponse;
struct PutExecutionsResponseDefaultTypeInternal;
extern PutExecutionsResponseDefaultTypeInternal _PutExecutionsResponse_default_instance_;
class PutLineageSubgraphRequest;
struct PutLineageSubgraphRequestDefaultTypeInternal;
extern PutLineageSubgraphRequestDefaultTypeInternal _PutLineageSubgraphRequest_default_instance_;
class PutLineageSubgraphRequest_EventEdge;
struct PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal;
extern PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal _PutLineageSubgraphRequest_EventEdge_default_instance_;
class PutLineageSubgraphRequest_Options;
struct PutLineageSubgraphRequest_OptionsDefaultTypeInternal;
extern PutLineageSubgraphRequest_OptionsDefaultTypeInternal _PutLineageSubgraphRequest_Options_default_instance_;
class PutLineageSubgraphResponse;
struct PutLineageSubgraphResponseDefaultTypeInternal;
extern PutLineageSubgraphResponseDefaultTypeInternal _PutLineageSubgraphResponse_default_instance_;
class PutParentContextsRequest;
struct PutParentContextsRequestDefaultTypeInternal;
extern PutParentContextsRequestDefaultTypeInternal _PutParentContextsRequest_default_instance_;
class PutParentContextsResponse;
struct PutParentContextsResponseDefaultTypeInternal;
extern PutParentContextsResponseDefaultTypeInternal _PutParentContextsResponse_default_instance_;
class PutTypesRequest;
struct PutTypesRequestDefaultTypeInternal;
extern PutTypesRequestDefaultTypeInternal _PutTypesRequest_default_instance_;
class PutTypesResponse;
struct PutTypesResponseDefaultTypeInternal;
extern PutTypesResponseDefaultTypeInternal _PutTypesResponse_default_instance_;
}  // namespace ml_metadata
PROTOBUF_NAMESPACE_OPEN
template<> ::ml_metadata::ArtifactAndType* Arena::CreateMaybeMessage<::ml_metadata::ArtifactAndType>(Arena*);
template<> ::ml_metadata::ArtifactStruct* Arena::CreateMaybeMessage<::ml_metadata::ArtifactStruct>(Arena*);
template<> ::ml_metadata::ArtifactStructList* Arena::CreateMaybeMessage<::ml_metadata::ArtifactStructList>(Arena*);
template<> ::ml_metadata::ArtifactStructMap* Arena::CreateMaybeMessage<::ml_metadata::ArtifactStructMap>(Arena*);
template<> ::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage<::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse>(Arena*);
template<> ::ml_metadata::GetArtifactByTypeAndNameRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactByTypeAndNameRequest>(Arena*);
template<> ::ml_metadata::GetArtifactByTypeAndNameResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactByTypeAndNameResponse>(Arena*);
template<> ::ml_metadata::GetArtifactTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypeRequest>(Arena*);
template<> ::ml_metadata::GetArtifactTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypeResponse>(Arena*);
template<> ::ml_metadata::GetArtifactTypesByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetArtifactTypesByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetArtifactTypesByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesByIDRequest>(Arena*);
template<> ::ml_metadata::GetArtifactTypesByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesByIDResponse>(Arena*);
template<> ::ml_metadata::GetArtifactTypesRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesRequest>(Arena*);
template<> ::ml_metadata::GetArtifactTypesResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactTypesResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsByContextRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByContextRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsByContextResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByContextResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByIDRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByIDResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsByTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByTypeRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsByTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByTypeResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsByURIRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByURIRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsByURIResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsByURIResponse>(Arena*);
template<> ::ml_metadata::GetArtifactsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsRequest>(Arena*);
template<> ::ml_metadata::GetArtifactsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetArtifactsResponse>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextRequest* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextRequest>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextResponse* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextResponse>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextsRequest>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextsResponse>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent>(Arena*);
template<> ::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse* Arena::CreateMaybeMessage<::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse>(Arena*);
template<> ::ml_metadata::GetContextByTypeAndNameRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextByTypeAndNameRequest>(Arena*);
template<> ::ml_metadata::GetContextByTypeAndNameResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextByTypeAndNameResponse>(Arena*);
template<> ::ml_metadata::GetContextTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypeRequest>(Arena*);
template<> ::ml_metadata::GetContextTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypeResponse>(Arena*);
template<> ::ml_metadata::GetContextTypesByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetContextTypesByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetContextTypesByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesByIDRequest>(Arena*);
template<> ::ml_metadata::GetContextTypesByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesByIDResponse>(Arena*);
template<> ::ml_metadata::GetContextTypesRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesRequest>(Arena*);
template<> ::ml_metadata::GetContextTypesResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextTypesResponse>(Arena*);
template<> ::ml_metadata::GetContextsByArtifactRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByArtifactRequest>(Arena*);
template<> ::ml_metadata::GetContextsByArtifactResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByArtifactResponse>(Arena*);
template<> ::ml_metadata::GetContextsByExecutionRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByExecutionRequest>(Arena*);
template<> ::ml_metadata::GetContextsByExecutionResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByExecutionResponse>(Arena*);
template<> ::ml_metadata::GetContextsByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetContextsByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetContextsByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByIDRequest>(Arena*);
template<> ::ml_metadata::GetContextsByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByIDResponse>(Arena*);
template<> ::ml_metadata::GetContextsByTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByTypeRequest>(Arena*);
template<> ::ml_metadata::GetContextsByTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsByTypeResponse>(Arena*);
template<> ::ml_metadata::GetContextsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetContextsRequest>(Arena*);
template<> ::ml_metadata::GetContextsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetContextsResponse>(Arena*);
template<> ::ml_metadata::GetEventsByArtifactIDsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetEventsByArtifactIDsRequest>(Arena*);
template<> ::ml_metadata::GetEventsByArtifactIDsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetEventsByArtifactIDsResponse>(Arena*);
template<> ::ml_metadata::GetEventsByExecutionIDsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetEventsByExecutionIDsRequest>(Arena*);
template<> ::ml_metadata::GetEventsByExecutionIDsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetEventsByExecutionIDsResponse>(Arena*);
template<> ::ml_metadata::GetExecutionByTypeAndNameRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionByTypeAndNameRequest>(Arena*);
template<> ::ml_metadata::GetExecutionByTypeAndNameResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionByTypeAndNameResponse>(Arena*);
template<> ::ml_metadata::GetExecutionTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypeRequest>(Arena*);
template<> ::ml_metadata::GetExecutionTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypeResponse>(Arena*);
template<> ::ml_metadata::GetExecutionTypesByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetExecutionTypesByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetExecutionTypesByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesByIDRequest>(Arena*);
template<> ::ml_metadata::GetExecutionTypesByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesByIDResponse>(Arena*);
template<> ::ml_metadata::GetExecutionTypesRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesRequest>(Arena*);
template<> ::ml_metadata::GetExecutionTypesResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionTypesResponse>(Arena*);
template<> ::ml_metadata::GetExecutionsByContextRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByContextRequest>(Arena*);
template<> ::ml_metadata::GetExecutionsByContextResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByContextResponse>(Arena*);
template<> ::ml_metadata::GetExecutionsByExternalIdsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByExternalIdsRequest>(Arena*);
template<> ::ml_metadata::GetExecutionsByExternalIdsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByExternalIdsResponse>(Arena*);
template<> ::ml_metadata::GetExecutionsByIDRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByIDRequest>(Arena*);
template<> ::ml_metadata::GetExecutionsByIDResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByIDResponse>(Arena*);
template<> ::ml_metadata::GetExecutionsByTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByTypeRequest>(Arena*);
template<> ::ml_metadata::GetExecutionsByTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsByTypeResponse>(Arena*);
template<> ::ml_metadata::GetExecutionsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsRequest>(Arena*);
template<> ::ml_metadata::GetExecutionsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetExecutionsResponse>(Arena*);
template<> ::ml_metadata::GetLineageGraphRequest* Arena::CreateMaybeMessage<::ml_metadata::GetLineageGraphRequest>(Arena*);
template<> ::ml_metadata::GetLineageGraphResponse* Arena::CreateMaybeMessage<::ml_metadata::GetLineageGraphResponse>(Arena*);
template<> ::ml_metadata::GetLineageSubgraphRequest* Arena::CreateMaybeMessage<::ml_metadata::GetLineageSubgraphRequest>(Arena*);
template<> ::ml_metadata::GetLineageSubgraphResponse* Arena::CreateMaybeMessage<::ml_metadata::GetLineageSubgraphResponse>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextRequest* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextRequest>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextResponse* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextResponse>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextsRequest* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextsRequest>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextsResponse* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextsResponse>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse>(Arena*);
template<> ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild* Arena::CreateMaybeMessage<::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild>(Arena*);
template<> ::ml_metadata::PutArtifactTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::PutArtifactTypeRequest>(Arena*);
template<> ::ml_metadata::PutArtifactTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::PutArtifactTypeResponse>(Arena*);
template<> ::ml_metadata::PutArtifactsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutArtifactsRequest>(Arena*);
template<> ::ml_metadata::PutArtifactsRequest_Options* Arena::CreateMaybeMessage<::ml_metadata::PutArtifactsRequest_Options>(Arena*);
template<> ::ml_metadata::PutArtifactsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutArtifactsResponse>(Arena*);
template<> ::ml_metadata::PutAttributionsAndAssociationsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutAttributionsAndAssociationsRequest>(Arena*);
template<> ::ml_metadata::PutAttributionsAndAssociationsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutAttributionsAndAssociationsResponse>(Arena*);
template<> ::ml_metadata::PutContextTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::PutContextTypeRequest>(Arena*);
template<> ::ml_metadata::PutContextTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::PutContextTypeResponse>(Arena*);
template<> ::ml_metadata::PutContextsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutContextsRequest>(Arena*);
template<> ::ml_metadata::PutContextsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutContextsResponse>(Arena*);
template<> ::ml_metadata::PutEventsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutEventsRequest>(Arena*);
template<> ::ml_metadata::PutEventsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutEventsResponse>(Arena*);
template<> ::ml_metadata::PutExecutionRequest* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionRequest>(Arena*);
template<> ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionRequest_ArtifactAndEvent>(Arena*);
template<> ::ml_metadata::PutExecutionRequest_Options* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionRequest_Options>(Arena*);
template<> ::ml_metadata::PutExecutionResponse* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionResponse>(Arena*);
template<> ::ml_metadata::PutExecutionTypeRequest* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionTypeRequest>(Arena*);
template<> ::ml_metadata::PutExecutionTypeResponse* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionTypeResponse>(Arena*);
template<> ::ml_metadata::PutExecutionsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionsRequest>(Arena*);
template<> ::ml_metadata::PutExecutionsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutExecutionsResponse>(Arena*);
template<> ::ml_metadata::PutLineageSubgraphRequest* Arena::CreateMaybeMessage<::ml_metadata::PutLineageSubgraphRequest>(Arena*);
template<> ::ml_metadata::PutLineageSubgraphRequest_EventEdge* Arena::CreateMaybeMessage<::ml_metadata::PutLineageSubgraphRequest_EventEdge>(Arena*);
template<> ::ml_metadata::PutLineageSubgraphRequest_Options* Arena::CreateMaybeMessage<::ml_metadata::PutLineageSubgraphRequest_Options>(Arena*);
template<> ::ml_metadata::PutLineageSubgraphResponse* Arena::CreateMaybeMessage<::ml_metadata::PutLineageSubgraphResponse>(Arena*);
template<> ::ml_metadata::PutParentContextsRequest* Arena::CreateMaybeMessage<::ml_metadata::PutParentContextsRequest>(Arena*);
template<> ::ml_metadata::PutParentContextsResponse* Arena::CreateMaybeMessage<::ml_metadata::PutParentContextsResponse>(Arena*);
template<> ::ml_metadata::PutTypesRequest* Arena::CreateMaybeMessage<::ml_metadata::PutTypesRequest>(Arena*);
template<> ::ml_metadata::PutTypesResponse* Arena::CreateMaybeMessage<::ml_metadata::PutTypesResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ml_metadata {

// ===================================================================

class ArtifactAndType final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.ArtifactAndType) */ {
 public:
  inline ArtifactAndType() : ArtifactAndType(nullptr) {}
  ~ArtifactAndType() override;
  explicit PROTOBUF_CONSTEXPR ArtifactAndType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArtifactAndType(const ArtifactAndType& from);
  ArtifactAndType(ArtifactAndType&& from) noexcept
    : ArtifactAndType() {
    *this = ::std::move(from);
  }

  inline ArtifactAndType& operator=(const ArtifactAndType& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArtifactAndType& operator=(ArtifactAndType&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArtifactAndType& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArtifactAndType* internal_default_instance() {
    return reinterpret_cast<const ArtifactAndType*>(
               &_ArtifactAndType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ArtifactAndType& a, ArtifactAndType& b) {
    a.Swap(&b);
  }
  inline void Swap(ArtifactAndType* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArtifactAndType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArtifactAndType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArtifactAndType>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArtifactAndType& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArtifactAndType& from) {
    ArtifactAndType::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArtifactAndType* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.ArtifactAndType";
  }
  protected:
  explicit ArtifactAndType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // optional .ml_metadata.Artifact artifact = 1;
  bool has_artifact() const;
  private:
  bool _internal_has_artifact() const;
  public:
  void clear_artifact();
  const ::ml_metadata::Artifact& artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::Artifact* release_artifact();
  ::ml_metadata::Artifact* mutable_artifact();
  void set_allocated_artifact(::ml_metadata::Artifact* artifact);
  private:
  const ::ml_metadata::Artifact& _internal_artifact() const;
  ::ml_metadata::Artifact* _internal_mutable_artifact();
  public:
  void unsafe_arena_set_allocated_artifact(
      ::ml_metadata::Artifact* artifact);
  ::ml_metadata::Artifact* unsafe_arena_release_artifact();

  // optional .ml_metadata.ArtifactType type = 2;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  const ::ml_metadata::ArtifactType& type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactType* release_type();
  ::ml_metadata::ArtifactType* mutable_type();
  void set_allocated_type(::ml_metadata::ArtifactType* type);
  private:
  const ::ml_metadata::ArtifactType& _internal_type() const;
  ::ml_metadata::ArtifactType* _internal_mutable_type();
  public:
  void unsafe_arena_set_allocated_type(
      ::ml_metadata::ArtifactType* type);
  ::ml_metadata::ArtifactType* unsafe_arena_release_type();

  // @@protoc_insertion_point(class_scope:ml_metadata.ArtifactAndType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Artifact* artifact_;
    ::ml_metadata::ArtifactType* type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ArtifactStructMap_PropertiesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ArtifactStructMap_PropertiesEntry_DoNotUse, 
    std::string, ::ml_metadata::ArtifactStruct,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ArtifactStructMap_PropertiesEntry_DoNotUse, 
    std::string, ::ml_metadata::ArtifactStruct,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  ArtifactStructMap_PropertiesEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR ArtifactStructMap_PropertiesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit ArtifactStructMap_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ArtifactStructMap_PropertiesEntry_DoNotUse& other);
  static const ArtifactStructMap_PropertiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ArtifactStructMap_PropertiesEntry_DoNotUse*>(&_ArtifactStructMap_PropertiesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "ml_metadata.ArtifactStructMap.PropertiesEntry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};

// -------------------------------------------------------------------

class ArtifactStructMap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.ArtifactStructMap) */ {
 public:
  inline ArtifactStructMap() : ArtifactStructMap(nullptr) {}
  ~ArtifactStructMap() override;
  explicit PROTOBUF_CONSTEXPR ArtifactStructMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArtifactStructMap(const ArtifactStructMap& from);
  ArtifactStructMap(ArtifactStructMap&& from) noexcept
    : ArtifactStructMap() {
    *this = ::std::move(from);
  }

  inline ArtifactStructMap& operator=(const ArtifactStructMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArtifactStructMap& operator=(ArtifactStructMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArtifactStructMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArtifactStructMap* internal_default_instance() {
    return reinterpret_cast<const ArtifactStructMap*>(
               &_ArtifactStructMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ArtifactStructMap& a, ArtifactStructMap& b) {
    a.Swap(&b);
  }
  inline void Swap(ArtifactStructMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArtifactStructMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArtifactStructMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArtifactStructMap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArtifactStructMap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArtifactStructMap& from) {
    ArtifactStructMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArtifactStructMap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.ArtifactStructMap";
  }
  protected:
  explicit ArtifactStructMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kPropertiesFieldNumber = 1,
  };
  // map<string, .ml_metadata.ArtifactStruct> properties = 1;
  int properties_size() const;
  private:
  int _internal_properties_size() const;
  public:
  void clear_properties();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >&
      _internal_properties() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >*
      _internal_mutable_properties();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >&
      properties() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >*
      mutable_properties();

  // @@protoc_insertion_point(class_scope:ml_metadata.ArtifactStructMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        ArtifactStructMap_PropertiesEntry_DoNotUse,
        std::string, ::ml_metadata::ArtifactStruct,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> properties_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ArtifactStructList final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.ArtifactStructList) */ {
 public:
  inline ArtifactStructList() : ArtifactStructList(nullptr) {}
  ~ArtifactStructList() override;
  explicit PROTOBUF_CONSTEXPR ArtifactStructList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArtifactStructList(const ArtifactStructList& from);
  ArtifactStructList(ArtifactStructList&& from) noexcept
    : ArtifactStructList() {
    *this = ::std::move(from);
  }

  inline ArtifactStructList& operator=(const ArtifactStructList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArtifactStructList& operator=(ArtifactStructList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArtifactStructList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ArtifactStructList* internal_default_instance() {
    return reinterpret_cast<const ArtifactStructList*>(
               &_ArtifactStructList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ArtifactStructList& a, ArtifactStructList& b) {
    a.Swap(&b);
  }
  inline void Swap(ArtifactStructList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArtifactStructList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArtifactStructList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArtifactStructList>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArtifactStructList& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArtifactStructList& from) {
    ArtifactStructList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArtifactStructList* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.ArtifactStructList";
  }
  protected:
  explicit ArtifactStructList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementsFieldNumber = 1,
  };
  // repeated .ml_metadata.ArtifactStruct elements = 1;
  int elements_size() const;
  private:
  int _internal_elements_size() const;
  public:
  void clear_elements();
  ::ml_metadata::ArtifactStruct* mutable_elements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactStruct >*
      mutable_elements();
  private:
  const ::ml_metadata::ArtifactStruct& _internal_elements(int index) const;
  ::ml_metadata::ArtifactStruct* _internal_add_elements();
  public:
  const ::ml_metadata::ArtifactStruct& elements(int index) const;
  ::ml_metadata::ArtifactStruct* add_elements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactStruct >&
      elements() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.ArtifactStructList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactStruct > elements_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ArtifactStruct final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.ArtifactStruct) */ {
 public:
  inline ArtifactStruct() : ArtifactStruct(nullptr) {}
  ~ArtifactStruct() override;
  explicit PROTOBUF_CONSTEXPR ArtifactStruct(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ArtifactStruct(const ArtifactStruct& from);
  ArtifactStruct(ArtifactStruct&& from) noexcept
    : ArtifactStruct() {
    *this = ::std::move(from);
  }

  inline ArtifactStruct& operator=(const ArtifactStruct& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArtifactStruct& operator=(ArtifactStruct&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ArtifactStruct& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kArtifact = 1,
    kMap = 2,
    kList = 3,
    VALUE_NOT_SET = 0,
  };

  static inline const ArtifactStruct* internal_default_instance() {
    return reinterpret_cast<const ArtifactStruct*>(
               &_ArtifactStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ArtifactStruct& a, ArtifactStruct& b) {
    a.Swap(&b);
  }
  inline void Swap(ArtifactStruct* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ArtifactStruct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ArtifactStruct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ArtifactStruct>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ArtifactStruct& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ArtifactStruct& from) {
    ArtifactStruct::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArtifactStruct* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.ArtifactStruct";
  }
  protected:
  explicit ArtifactStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactFieldNumber = 1,
    kMapFieldNumber = 2,
    kListFieldNumber = 3,
  };
  // .ml_metadata.ArtifactAndType artifact = 1;
  bool has_artifact() const;
  private:
  bool _internal_has_artifact() const;
  public:
  void clear_artifact();
  const ::ml_metadata::ArtifactAndType& artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactAndType* release_artifact();
  ::ml_metadata::ArtifactAndType* mutable_artifact();
  void set_allocated_artifact(::ml_metadata::ArtifactAndType* artifact);
  private:
  const ::ml_metadata::ArtifactAndType& _internal_artifact() const;
  ::ml_metadata::ArtifactAndType* _internal_mutable_artifact();
  public:
  void unsafe_arena_set_allocated_artifact(
      ::ml_metadata::ArtifactAndType* artifact);
  ::ml_metadata::ArtifactAndType* unsafe_arena_release_artifact();

  // .ml_metadata.ArtifactStructMap map = 2;
  bool has_map() const;
  private:
  bool _internal_has_map() const;
  public:
  void clear_map();
  const ::ml_metadata::ArtifactStructMap& map() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactStructMap* release_map();
  ::ml_metadata::ArtifactStructMap* mutable_map();
  void set_allocated_map(::ml_metadata::ArtifactStructMap* map);
  private:
  const ::ml_metadata::ArtifactStructMap& _internal_map() const;
  ::ml_metadata::ArtifactStructMap* _internal_mutable_map();
  public:
  void unsafe_arena_set_allocated_map(
      ::ml_metadata::ArtifactStructMap* map);
  ::ml_metadata::ArtifactStructMap* unsafe_arena_release_map();

  // .ml_metadata.ArtifactStructList list = 3;
  bool has_list() const;
  private:
  bool _internal_has_list() const;
  public:
  void clear_list();
  const ::ml_metadata::ArtifactStructList& list() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactStructList* release_list();
  ::ml_metadata::ArtifactStructList* mutable_list();
  void set_allocated_list(::ml_metadata::ArtifactStructList* list);
  private:
  const ::ml_metadata::ArtifactStructList& _internal_list() const;
  ::ml_metadata::ArtifactStructList* _internal_mutable_list();
  public:
  void unsafe_arena_set_allocated_list(
      ::ml_metadata::ArtifactStructList* list);
  ::ml_metadata::ArtifactStructList* unsafe_arena_release_list();

  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:ml_metadata.ArtifactStruct)
 private:
  class _Internal;
  void set_has_artifact();
  void set_has_map();
  void set_has_list();

  inline bool has_value() const;
  inline void clear_has_value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
        ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
      ::ml_metadata::ArtifactAndType* artifact_;
      ::ml_metadata::ArtifactStructMap* map_;
      ::ml_metadata::ArtifactStructList* list_;
    } value_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t _oneof_case_[1];

  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutArtifactsRequest_Options final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutArtifactsRequest.Options) */ {
 public:
  inline PutArtifactsRequest_Options() : PutArtifactsRequest_Options(nullptr) {}
  ~PutArtifactsRequest_Options() override;
  explicit PROTOBUF_CONSTEXPR PutArtifactsRequest_Options(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutArtifactsRequest_Options(const PutArtifactsRequest_Options& from);
  PutArtifactsRequest_Options(PutArtifactsRequest_Options&& from) noexcept
    : PutArtifactsRequest_Options() {
    *this = ::std::move(from);
  }

  inline PutArtifactsRequest_Options& operator=(const PutArtifactsRequest_Options& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutArtifactsRequest_Options& operator=(PutArtifactsRequest_Options&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutArtifactsRequest_Options& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutArtifactsRequest_Options* internal_default_instance() {
    return reinterpret_cast<const PutArtifactsRequest_Options*>(
               &_PutArtifactsRequest_Options_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PutArtifactsRequest_Options& a, PutArtifactsRequest_Options& b) {
    a.Swap(&b);
  }
  inline void Swap(PutArtifactsRequest_Options* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutArtifactsRequest_Options* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutArtifactsRequest_Options* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutArtifactsRequest_Options>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutArtifactsRequest_Options& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutArtifactsRequest_Options& from) {
    PutArtifactsRequest_Options::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutArtifactsRequest_Options* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutArtifactsRequest.Options";
  }
  protected:
  explicit PutArtifactsRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbortIfLatestUpdatedTimeChangedFieldNumber = 1,
  };
  // optional bool abort_if_latest_updated_time_changed = 1;
  bool has_abort_if_latest_updated_time_changed() const;
  private:
  bool _internal_has_abort_if_latest_updated_time_changed() const;
  public:
  void clear_abort_if_latest_updated_time_changed();
  bool abort_if_latest_updated_time_changed() const;
  void set_abort_if_latest_updated_time_changed(bool value);
  private:
  bool _internal_abort_if_latest_updated_time_changed() const;
  void _internal_set_abort_if_latest_updated_time_changed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutArtifactsRequest.Options)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool abort_if_latest_updated_time_changed_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutArtifactsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutArtifactsRequest) */ {
 public:
  inline PutArtifactsRequest() : PutArtifactsRequest(nullptr) {}
  ~PutArtifactsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutArtifactsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutArtifactsRequest(const PutArtifactsRequest& from);
  PutArtifactsRequest(PutArtifactsRequest&& from) noexcept
    : PutArtifactsRequest() {
    *this = ::std::move(from);
  }

  inline PutArtifactsRequest& operator=(const PutArtifactsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutArtifactsRequest& operator=(PutArtifactsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutArtifactsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutArtifactsRequest* internal_default_instance() {
    return reinterpret_cast<const PutArtifactsRequest*>(
               &_PutArtifactsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PutArtifactsRequest& a, PutArtifactsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutArtifactsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutArtifactsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutArtifactsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutArtifactsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutArtifactsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutArtifactsRequest& from) {
    PutArtifactsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutArtifactsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutArtifactsRequest";
  }
  protected:
  explicit PutArtifactsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PutArtifactsRequest_Options Options;

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
    kOptionsFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
    kUpdateMaskFieldNumber = 4,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // optional .ml_metadata.PutArtifactsRequest.Options options = 2;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::PutArtifactsRequest_Options& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::PutArtifactsRequest_Options* release_options();
  ::ml_metadata::PutArtifactsRequest_Options* mutable_options();
  void set_allocated_options(::ml_metadata::PutArtifactsRequest_Options* options);
  private:
  const ::ml_metadata::PutArtifactsRequest_Options& _internal_options() const;
  ::ml_metadata::PutArtifactsRequest_Options* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::PutArtifactsRequest_Options* options);
  ::ml_metadata::PutArtifactsRequest_Options* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional .google.protobuf.FieldMask update_mask = 4;
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutArtifactsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::ml_metadata::PutArtifactsRequest_Options* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutArtifactsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutArtifactsResponse) */ {
 public:
  inline PutArtifactsResponse() : PutArtifactsResponse(nullptr) {}
  ~PutArtifactsResponse() override;
  explicit PROTOBUF_CONSTEXPR PutArtifactsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutArtifactsResponse(const PutArtifactsResponse& from);
  PutArtifactsResponse(PutArtifactsResponse&& from) noexcept
    : PutArtifactsResponse() {
    *this = ::std::move(from);
  }

  inline PutArtifactsResponse& operator=(const PutArtifactsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutArtifactsResponse& operator=(PutArtifactsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutArtifactsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutArtifactsResponse* internal_default_instance() {
    return reinterpret_cast<const PutArtifactsResponse*>(
               &_PutArtifactsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PutArtifactsResponse& a, PutArtifactsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutArtifactsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutArtifactsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutArtifactsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutArtifactsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutArtifactsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutArtifactsResponse& from) {
    PutArtifactsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutArtifactsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutArtifactsResponse";
  }
  protected:
  explicit PutArtifactsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactIdsFieldNumber = 1,
  };
  // repeated int64 artifact_ids = 1;
  int artifact_ids_size() const;
  private:
  int _internal_artifact_ids_size() const;
  public:
  void clear_artifact_ids();
  private:
  int64_t _internal_artifact_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_ids() const;
  void _internal_add_artifact_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_ids();
  public:
  int64_t artifact_ids(int index) const;
  void set_artifact_ids(int index, int64_t value);
  void add_artifact_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_ids();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutArtifactsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutArtifactTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutArtifactTypeRequest) */ {
 public:
  inline PutArtifactTypeRequest() : PutArtifactTypeRequest(nullptr) {}
  ~PutArtifactTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR PutArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutArtifactTypeRequest(const PutArtifactTypeRequest& from);
  PutArtifactTypeRequest(PutArtifactTypeRequest&& from) noexcept
    : PutArtifactTypeRequest() {
    *this = ::std::move(from);
  }

  inline PutArtifactTypeRequest& operator=(const PutArtifactTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutArtifactTypeRequest& operator=(PutArtifactTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutArtifactTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutArtifactTypeRequest* internal_default_instance() {
    return reinterpret_cast<const PutArtifactTypeRequest*>(
               &_PutArtifactTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PutArtifactTypeRequest& a, PutArtifactTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutArtifactTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutArtifactTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutArtifactTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutArtifactTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutArtifactTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutArtifactTypeRequest& from) {
    PutArtifactTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutArtifactTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutArtifactTypeRequest";
  }
  protected:
  explicit PutArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypeFieldNumber = 1,
    kTransactionOptionsFieldNumber = 6,
    kCanAddFieldsFieldNumber = 2,
    kCanOmitFieldsFieldNumber = 5,
    kCanDeleteFieldsFieldNumber = 3,
    kAllFieldsMatchFieldNumber = 4,
  };
  // optional .ml_metadata.ArtifactType artifact_type = 1;
  bool has_artifact_type() const;
  private:
  bool _internal_has_artifact_type() const;
  public:
  void clear_artifact_type();
  const ::ml_metadata::ArtifactType& artifact_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactType* release_artifact_type();
  ::ml_metadata::ArtifactType* mutable_artifact_type();
  void set_allocated_artifact_type(::ml_metadata::ArtifactType* artifact_type);
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_type() const;
  ::ml_metadata::ArtifactType* _internal_mutable_artifact_type();
  public:
  void unsafe_arena_set_allocated_artifact_type(
      ::ml_metadata::ArtifactType* artifact_type);
  ::ml_metadata::ArtifactType* unsafe_arena_release_artifact_type();

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional bool can_add_fields = 2;
  bool has_can_add_fields() const;
  private:
  bool _internal_has_can_add_fields() const;
  public:
  void clear_can_add_fields();
  bool can_add_fields() const;
  void set_can_add_fields(bool value);
  private:
  bool _internal_can_add_fields() const;
  void _internal_set_can_add_fields(bool value);
  public:

  // optional bool can_omit_fields = 5;
  bool has_can_omit_fields() const;
  private:
  bool _internal_has_can_omit_fields() const;
  public:
  void clear_can_omit_fields();
  bool can_omit_fields() const;
  void set_can_omit_fields(bool value);
  private:
  bool _internal_can_omit_fields() const;
  void _internal_set_can_omit_fields(bool value);
  public:

  // optional bool can_delete_fields = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_can_delete_fields() const;
  private:
  bool _internal_has_can_delete_fields() const;
  public:
  PROTOBUF_DEPRECATED void clear_can_delete_fields();
  PROTOBUF_DEPRECATED bool can_delete_fields() const;
  PROTOBUF_DEPRECATED void set_can_delete_fields(bool value);
  private:
  bool _internal_can_delete_fields() const;
  void _internal_set_can_delete_fields(bool value);
  public:

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  PROTOBUF_DEPRECATED bool has_all_fields_match() const;
  private:
  bool _internal_has_all_fields_match() const;
  public:
  PROTOBUF_DEPRECATED void clear_all_fields_match();
  PROTOBUF_DEPRECATED bool all_fields_match() const;
  PROTOBUF_DEPRECATED void set_all_fields_match(bool value);
  private:
  bool _internal_all_fields_match() const;
  void _internal_set_all_fields_match(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutArtifactTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ArtifactType* artifact_type_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    bool can_add_fields_;
    bool can_omit_fields_;
    bool can_delete_fields_;
    bool all_fields_match_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutArtifactTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutArtifactTypeResponse) */ {
 public:
  inline PutArtifactTypeResponse() : PutArtifactTypeResponse(nullptr) {}
  ~PutArtifactTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR PutArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutArtifactTypeResponse(const PutArtifactTypeResponse& from);
  PutArtifactTypeResponse(PutArtifactTypeResponse&& from) noexcept
    : PutArtifactTypeResponse() {
    *this = ::std::move(from);
  }

  inline PutArtifactTypeResponse& operator=(const PutArtifactTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutArtifactTypeResponse& operator=(PutArtifactTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutArtifactTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutArtifactTypeResponse* internal_default_instance() {
    return reinterpret_cast<const PutArtifactTypeResponse*>(
               &_PutArtifactTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PutArtifactTypeResponse& a, PutArtifactTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutArtifactTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutArtifactTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutArtifactTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutArtifactTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutArtifactTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutArtifactTypeResponse& from) {
    PutArtifactTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutArtifactTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutArtifactTypeResponse";
  }
  protected:
  explicit PutArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdFieldNumber = 1,
  };
  // optional int64 type_id = 1;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  int64_t type_id() const;
  void set_type_id(int64_t value);
  private:
  int64_t _internal_type_id() const;
  void _internal_set_type_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutArtifactTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t type_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionsRequest) */ {
 public:
  inline PutExecutionsRequest() : PutExecutionsRequest(nullptr) {}
  ~PutExecutionsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionsRequest(const PutExecutionsRequest& from);
  PutExecutionsRequest(PutExecutionsRequest&& from) noexcept
    : PutExecutionsRequest() {
    *this = ::std::move(from);
  }

  inline PutExecutionsRequest& operator=(const PutExecutionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionsRequest& operator=(PutExecutionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionsRequest* internal_default_instance() {
    return reinterpret_cast<const PutExecutionsRequest*>(
               &_PutExecutionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(PutExecutionsRequest& a, PutExecutionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionsRequest& from) {
    PutExecutionsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionsRequest";
  }
  protected:
  explicit PutExecutionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
    kUpdateMaskFieldNumber = 3,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionsResponse) */ {
 public:
  inline PutExecutionsResponse() : PutExecutionsResponse(nullptr) {}
  ~PutExecutionsResponse() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionsResponse(const PutExecutionsResponse& from);
  PutExecutionsResponse(PutExecutionsResponse&& from) noexcept
    : PutExecutionsResponse() {
    *this = ::std::move(from);
  }

  inline PutExecutionsResponse& operator=(const PutExecutionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionsResponse& operator=(PutExecutionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionsResponse* internal_default_instance() {
    return reinterpret_cast<const PutExecutionsResponse*>(
               &_PutExecutionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(PutExecutionsResponse& a, PutExecutionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionsResponse& from) {
    PutExecutionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionsResponse";
  }
  protected:
  explicit PutExecutionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionIdsFieldNumber = 1,
  };
  // repeated int64 execution_ids = 1;
  int execution_ids_size() const;
  private:
  int _internal_execution_ids_size() const;
  public:
  void clear_execution_ids();
  private:
  int64_t _internal_execution_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_execution_ids() const;
  void _internal_add_execution_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_execution_ids();
  public:
  int64_t execution_ids(int index) const;
  void set_execution_ids(int index, int64_t value);
  void add_execution_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      execution_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_execution_ids();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > execution_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionTypeRequest) */ {
 public:
  inline PutExecutionTypeRequest() : PutExecutionTypeRequest(nullptr) {}
  ~PutExecutionTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionTypeRequest(const PutExecutionTypeRequest& from);
  PutExecutionTypeRequest(PutExecutionTypeRequest&& from) noexcept
    : PutExecutionTypeRequest() {
    *this = ::std::move(from);
  }

  inline PutExecutionTypeRequest& operator=(const PutExecutionTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionTypeRequest& operator=(PutExecutionTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionTypeRequest* internal_default_instance() {
    return reinterpret_cast<const PutExecutionTypeRequest*>(
               &_PutExecutionTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(PutExecutionTypeRequest& a, PutExecutionTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionTypeRequest& from) {
    PutExecutionTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionTypeRequest";
  }
  protected:
  explicit PutExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTypeFieldNumber = 1,
    kTransactionOptionsFieldNumber = 6,
    kCanAddFieldsFieldNumber = 2,
    kCanOmitFieldsFieldNumber = 5,
    kCanDeleteFieldsFieldNumber = 3,
    kAllFieldsMatchFieldNumber = 4,
  };
  // optional .ml_metadata.ExecutionType execution_type = 1;
  bool has_execution_type() const;
  private:
  bool _internal_has_execution_type() const;
  public:
  void clear_execution_type();
  const ::ml_metadata::ExecutionType& execution_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ExecutionType* release_execution_type();
  ::ml_metadata::ExecutionType* mutable_execution_type();
  void set_allocated_execution_type(::ml_metadata::ExecutionType* execution_type);
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_type() const;
  ::ml_metadata::ExecutionType* _internal_mutable_execution_type();
  public:
  void unsafe_arena_set_allocated_execution_type(
      ::ml_metadata::ExecutionType* execution_type);
  ::ml_metadata::ExecutionType* unsafe_arena_release_execution_type();

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional bool can_add_fields = 2;
  bool has_can_add_fields() const;
  private:
  bool _internal_has_can_add_fields() const;
  public:
  void clear_can_add_fields();
  bool can_add_fields() const;
  void set_can_add_fields(bool value);
  private:
  bool _internal_can_add_fields() const;
  void _internal_set_can_add_fields(bool value);
  public:

  // optional bool can_omit_fields = 5;
  bool has_can_omit_fields() const;
  private:
  bool _internal_has_can_omit_fields() const;
  public:
  void clear_can_omit_fields();
  bool can_omit_fields() const;
  void set_can_omit_fields(bool value);
  private:
  bool _internal_can_omit_fields() const;
  void _internal_set_can_omit_fields(bool value);
  public:

  // optional bool can_delete_fields = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_can_delete_fields() const;
  private:
  bool _internal_has_can_delete_fields() const;
  public:
  PROTOBUF_DEPRECATED void clear_can_delete_fields();
  PROTOBUF_DEPRECATED bool can_delete_fields() const;
  PROTOBUF_DEPRECATED void set_can_delete_fields(bool value);
  private:
  bool _internal_can_delete_fields() const;
  void _internal_set_can_delete_fields(bool value);
  public:

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  PROTOBUF_DEPRECATED bool has_all_fields_match() const;
  private:
  bool _internal_has_all_fields_match() const;
  public:
  PROTOBUF_DEPRECATED void clear_all_fields_match();
  PROTOBUF_DEPRECATED bool all_fields_match() const;
  PROTOBUF_DEPRECATED void set_all_fields_match(bool value);
  private:
  bool _internal_all_fields_match() const;
  void _internal_set_all_fields_match(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ExecutionType* execution_type_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    bool can_add_fields_;
    bool can_omit_fields_;
    bool can_delete_fields_;
    bool all_fields_match_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionTypeResponse) */ {
 public:
  inline PutExecutionTypeResponse() : PutExecutionTypeResponse(nullptr) {}
  ~PutExecutionTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionTypeResponse(const PutExecutionTypeResponse& from);
  PutExecutionTypeResponse(PutExecutionTypeResponse&& from) noexcept
    : PutExecutionTypeResponse() {
    *this = ::std::move(from);
  }

  inline PutExecutionTypeResponse& operator=(const PutExecutionTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionTypeResponse& operator=(PutExecutionTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionTypeResponse* internal_default_instance() {
    return reinterpret_cast<const PutExecutionTypeResponse*>(
               &_PutExecutionTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(PutExecutionTypeResponse& a, PutExecutionTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionTypeResponse& from) {
    PutExecutionTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionTypeResponse";
  }
  protected:
  explicit PutExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdFieldNumber = 1,
  };
  // optional int64 type_id = 1;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  int64_t type_id() const;
  void set_type_id(int64_t value);
  private:
  int64_t _internal_type_id() const;
  void _internal_set_type_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t type_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutEventsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutEventsRequest) */ {
 public:
  inline PutEventsRequest() : PutEventsRequest(nullptr) {}
  ~PutEventsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutEventsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutEventsRequest(const PutEventsRequest& from);
  PutEventsRequest(PutEventsRequest&& from) noexcept
    : PutEventsRequest() {
    *this = ::std::move(from);
  }

  inline PutEventsRequest& operator=(const PutEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutEventsRequest& operator=(PutEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutEventsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutEventsRequest* internal_default_instance() {
    return reinterpret_cast<const PutEventsRequest*>(
               &_PutEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PutEventsRequest& a, PutEventsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutEventsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutEventsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutEventsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutEventsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutEventsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutEventsRequest& from) {
    PutEventsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutEventsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutEventsRequest";
  }
  protected:
  explicit PutEventsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated .ml_metadata.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::ml_metadata::Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
      mutable_events();
  private:
  const ::ml_metadata::Event& _internal_events(int index) const;
  ::ml_metadata::Event* _internal_add_events();
  public:
  const ::ml_metadata::Event& events(int index) const;
  ::ml_metadata::Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
      events() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutEventsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event > events_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutEventsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ml_metadata.PutEventsResponse) */ {
 public:
  inline PutEventsResponse() : PutEventsResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR PutEventsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutEventsResponse(const PutEventsResponse& from);
  PutEventsResponse(PutEventsResponse&& from) noexcept
    : PutEventsResponse() {
    *this = ::std::move(from);
  }

  inline PutEventsResponse& operator=(const PutEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutEventsResponse& operator=(PutEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutEventsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutEventsResponse* internal_default_instance() {
    return reinterpret_cast<const PutEventsResponse*>(
               &_PutEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PutEventsResponse& a, PutEventsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutEventsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutEventsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutEventsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutEventsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PutEventsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PutEventsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutEventsResponse";
  }
  protected:
  explicit PutEventsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ml_metadata.PutEventsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionRequest_ArtifactAndEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionRequest.ArtifactAndEvent) */ {
 public:
  inline PutExecutionRequest_ArtifactAndEvent() : PutExecutionRequest_ArtifactAndEvent(nullptr) {}
  ~PutExecutionRequest_ArtifactAndEvent() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionRequest_ArtifactAndEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionRequest_ArtifactAndEvent(const PutExecutionRequest_ArtifactAndEvent& from);
  PutExecutionRequest_ArtifactAndEvent(PutExecutionRequest_ArtifactAndEvent&& from) noexcept
    : PutExecutionRequest_ArtifactAndEvent() {
    *this = ::std::move(from);
  }

  inline PutExecutionRequest_ArtifactAndEvent& operator=(const PutExecutionRequest_ArtifactAndEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionRequest_ArtifactAndEvent& operator=(PutExecutionRequest_ArtifactAndEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionRequest_ArtifactAndEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionRequest_ArtifactAndEvent* internal_default_instance() {
    return reinterpret_cast<const PutExecutionRequest_ArtifactAndEvent*>(
               &_PutExecutionRequest_ArtifactAndEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PutExecutionRequest_ArtifactAndEvent& a, PutExecutionRequest_ArtifactAndEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionRequest_ArtifactAndEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionRequest_ArtifactAndEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionRequest_ArtifactAndEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionRequest_ArtifactAndEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionRequest_ArtifactAndEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionRequest_ArtifactAndEvent& from) {
    PutExecutionRequest_ArtifactAndEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionRequest_ArtifactAndEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionRequest.ArtifactAndEvent";
  }
  protected:
  explicit PutExecutionRequest_ArtifactAndEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactFieldNumber = 1,
    kEventFieldNumber = 2,
  };
  // optional .ml_metadata.Artifact artifact = 1;
  bool has_artifact() const;
  private:
  bool _internal_has_artifact() const;
  public:
  void clear_artifact();
  const ::ml_metadata::Artifact& artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::Artifact* release_artifact();
  ::ml_metadata::Artifact* mutable_artifact();
  void set_allocated_artifact(::ml_metadata::Artifact* artifact);
  private:
  const ::ml_metadata::Artifact& _internal_artifact() const;
  ::ml_metadata::Artifact* _internal_mutable_artifact();
  public:
  void unsafe_arena_set_allocated_artifact(
      ::ml_metadata::Artifact* artifact);
  ::ml_metadata::Artifact* unsafe_arena_release_artifact();

  // optional .ml_metadata.Event event = 2;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::ml_metadata::Event& event() const;
  PROTOBUF_NODISCARD ::ml_metadata::Event* release_event();
  ::ml_metadata::Event* mutable_event();
  void set_allocated_event(::ml_metadata::Event* event);
  private:
  const ::ml_metadata::Event& _internal_event() const;
  ::ml_metadata::Event* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::ml_metadata::Event* event);
  ::ml_metadata::Event* unsafe_arena_release_event();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Artifact* artifact_;
    ::ml_metadata::Event* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionRequest_Options final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionRequest.Options) */ {
 public:
  inline PutExecutionRequest_Options() : PutExecutionRequest_Options(nullptr) {}
  ~PutExecutionRequest_Options() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionRequest_Options(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionRequest_Options(const PutExecutionRequest_Options& from);
  PutExecutionRequest_Options(PutExecutionRequest_Options&& from) noexcept
    : PutExecutionRequest_Options() {
    *this = ::std::move(from);
  }

  inline PutExecutionRequest_Options& operator=(const PutExecutionRequest_Options& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionRequest_Options& operator=(PutExecutionRequest_Options&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionRequest_Options& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionRequest_Options* internal_default_instance() {
    return reinterpret_cast<const PutExecutionRequest_Options*>(
               &_PutExecutionRequest_Options_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(PutExecutionRequest_Options& a, PutExecutionRequest_Options& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionRequest_Options* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionRequest_Options* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionRequest_Options* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionRequest_Options>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionRequest_Options& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionRequest_Options& from) {
    PutExecutionRequest_Options::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionRequest_Options* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionRequest.Options";
  }
  protected:
  explicit PutExecutionRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReuseContextIfAlreadyExistFieldNumber = 1,
    kReuseArtifactIfAlreadyExistByExternalIdFieldNumber = 2,
    kForceUpdateTimeFieldNumber = 3,
    kForceReuseContextFieldNumber = 4,
  };
  // optional bool reuse_context_if_already_exist = 1;
  bool has_reuse_context_if_already_exist() const;
  private:
  bool _internal_has_reuse_context_if_already_exist() const;
  public:
  void clear_reuse_context_if_already_exist();
  bool reuse_context_if_already_exist() const;
  void set_reuse_context_if_already_exist(bool value);
  private:
  bool _internal_reuse_context_if_already_exist() const;
  void _internal_set_reuse_context_if_already_exist(bool value);
  public:

  // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
  bool has_reuse_artifact_if_already_exist_by_external_id() const;
  private:
  bool _internal_has_reuse_artifact_if_already_exist_by_external_id() const;
  public:
  void clear_reuse_artifact_if_already_exist_by_external_id();
  bool reuse_artifact_if_already_exist_by_external_id() const;
  void set_reuse_artifact_if_already_exist_by_external_id(bool value);
  private:
  bool _internal_reuse_artifact_if_already_exist_by_external_id() const;
  void _internal_set_reuse_artifact_if_already_exist_by_external_id(bool value);
  public:

  // optional bool force_update_time = 3;
  bool has_force_update_time() const;
  private:
  bool _internal_has_force_update_time() const;
  public:
  void clear_force_update_time();
  bool force_update_time() const;
  void set_force_update_time(bool value);
  private:
  bool _internal_force_update_time() const;
  void _internal_set_force_update_time(bool value);
  public:

  // optional bool force_reuse_context = 4;
  bool has_force_reuse_context() const;
  private:
  bool _internal_has_force_reuse_context() const;
  public:
  void clear_force_reuse_context();
  bool force_reuse_context() const;
  void set_force_reuse_context(bool value);
  private:
  bool _internal_force_reuse_context() const;
  void _internal_set_force_reuse_context(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionRequest.Options)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool reuse_context_if_already_exist_;
    bool reuse_artifact_if_already_exist_by_external_id_;
    bool force_update_time_;
    bool force_reuse_context_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionRequest) */ {
 public:
  inline PutExecutionRequest() : PutExecutionRequest(nullptr) {}
  ~PutExecutionRequest() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionRequest(const PutExecutionRequest& from);
  PutExecutionRequest(PutExecutionRequest&& from) noexcept
    : PutExecutionRequest() {
    *this = ::std::move(from);
  }

  inline PutExecutionRequest& operator=(const PutExecutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionRequest& operator=(PutExecutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionRequest* internal_default_instance() {
    return reinterpret_cast<const PutExecutionRequest*>(
               &_PutExecutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(PutExecutionRequest& a, PutExecutionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionRequest& from) {
    PutExecutionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionRequest";
  }
  protected:
  explicit PutExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PutExecutionRequest_ArtifactAndEvent ArtifactAndEvent;
  typedef PutExecutionRequest_Options Options;

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactEventPairsFieldNumber = 2,
    kContextsFieldNumber = 3,
    kExecutionFieldNumber = 1,
    kOptionsFieldNumber = 4,
    kTransactionOptionsFieldNumber = 5,
  };
  // repeated .ml_metadata.PutExecutionRequest.ArtifactAndEvent artifact_event_pairs = 2;
  int artifact_event_pairs_size() const;
  private:
  int _internal_artifact_event_pairs_size() const;
  public:
  void clear_artifact_event_pairs();
  ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* mutable_artifact_event_pairs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >*
      mutable_artifact_event_pairs();
  private:
  const ::ml_metadata::PutExecutionRequest_ArtifactAndEvent& _internal_artifact_event_pairs(int index) const;
  ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* _internal_add_artifact_event_pairs();
  public:
  const ::ml_metadata::PutExecutionRequest_ArtifactAndEvent& artifact_event_pairs(int index) const;
  ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* add_artifact_event_pairs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >&
      artifact_event_pairs() const;

  // repeated .ml_metadata.Context contexts = 3;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // optional .ml_metadata.Execution execution = 1;
  bool has_execution() const;
  private:
  bool _internal_has_execution() const;
  public:
  void clear_execution();
  const ::ml_metadata::Execution& execution() const;
  PROTOBUF_NODISCARD ::ml_metadata::Execution* release_execution();
  ::ml_metadata::Execution* mutable_execution();
  void set_allocated_execution(::ml_metadata::Execution* execution);
  private:
  const ::ml_metadata::Execution& _internal_execution() const;
  ::ml_metadata::Execution* _internal_mutable_execution();
  public:
  void unsafe_arena_set_allocated_execution(
      ::ml_metadata::Execution* execution);
  ::ml_metadata::Execution* unsafe_arena_release_execution();

  // optional .ml_metadata.PutExecutionRequest.Options options = 4;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::PutExecutionRequest_Options& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::PutExecutionRequest_Options* release_options();
  ::ml_metadata::PutExecutionRequest_Options* mutable_options();
  void set_allocated_options(::ml_metadata::PutExecutionRequest_Options* options);
  private:
  const ::ml_metadata::PutExecutionRequest_Options& _internal_options() const;
  ::ml_metadata::PutExecutionRequest_Options* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::PutExecutionRequest_Options* options);
  ::ml_metadata::PutExecutionRequest_Options* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 5;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent > artifact_event_pairs_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    ::ml_metadata::Execution* execution_;
    ::ml_metadata::PutExecutionRequest_Options* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutExecutionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutExecutionResponse) */ {
 public:
  inline PutExecutionResponse() : PutExecutionResponse(nullptr) {}
  ~PutExecutionResponse() override;
  explicit PROTOBUF_CONSTEXPR PutExecutionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutExecutionResponse(const PutExecutionResponse& from);
  PutExecutionResponse(PutExecutionResponse&& from) noexcept
    : PutExecutionResponse() {
    *this = ::std::move(from);
  }

  inline PutExecutionResponse& operator=(const PutExecutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutExecutionResponse& operator=(PutExecutionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutExecutionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutExecutionResponse* internal_default_instance() {
    return reinterpret_cast<const PutExecutionResponse*>(
               &_PutExecutionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(PutExecutionResponse& a, PutExecutionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutExecutionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutExecutionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutExecutionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutExecutionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutExecutionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutExecutionResponse& from) {
    PutExecutionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutExecutionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutExecutionResponse";
  }
  protected:
  explicit PutExecutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactIdsFieldNumber = 2,
    kContextIdsFieldNumber = 3,
    kExecutionIdFieldNumber = 1,
  };
  // repeated int64 artifact_ids = 2;
  int artifact_ids_size() const;
  private:
  int _internal_artifact_ids_size() const;
  public:
  void clear_artifact_ids();
  private:
  int64_t _internal_artifact_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_ids() const;
  void _internal_add_artifact_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_ids();
  public:
  int64_t artifact_ids(int index) const;
  void set_artifact_ids(int index, int64_t value);
  void add_artifact_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_ids();

  // repeated int64 context_ids = 3;
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // optional int64 execution_id = 1;
  bool has_execution_id() const;
  private:
  bool _internal_has_execution_id() const;
  public:
  void clear_execution_id();
  int64_t execution_id() const;
  void set_execution_id(int64_t value);
  private:
  int64_t _internal_execution_id() const;
  void _internal_set_execution_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutExecutionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    int64_t execution_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutLineageSubgraphRequest_EventEdge final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutLineageSubgraphRequest.EventEdge) */ {
 public:
  inline PutLineageSubgraphRequest_EventEdge() : PutLineageSubgraphRequest_EventEdge(nullptr) {}
  ~PutLineageSubgraphRequest_EventEdge() override;
  explicit PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_EventEdge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutLineageSubgraphRequest_EventEdge(const PutLineageSubgraphRequest_EventEdge& from);
  PutLineageSubgraphRequest_EventEdge(PutLineageSubgraphRequest_EventEdge&& from) noexcept
    : PutLineageSubgraphRequest_EventEdge() {
    *this = ::std::move(from);
  }

  inline PutLineageSubgraphRequest_EventEdge& operator=(const PutLineageSubgraphRequest_EventEdge& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutLineageSubgraphRequest_EventEdge& operator=(PutLineageSubgraphRequest_EventEdge&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutLineageSubgraphRequest_EventEdge& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutLineageSubgraphRequest_EventEdge* internal_default_instance() {
    return reinterpret_cast<const PutLineageSubgraphRequest_EventEdge*>(
               &_PutLineageSubgraphRequest_EventEdge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(PutLineageSubgraphRequest_EventEdge& a, PutLineageSubgraphRequest_EventEdge& b) {
    a.Swap(&b);
  }
  inline void Swap(PutLineageSubgraphRequest_EventEdge* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutLineageSubgraphRequest_EventEdge* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutLineageSubgraphRequest_EventEdge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutLineageSubgraphRequest_EventEdge>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutLineageSubgraphRequest_EventEdge& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutLineageSubgraphRequest_EventEdge& from) {
    PutLineageSubgraphRequest_EventEdge::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutLineageSubgraphRequest_EventEdge* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutLineageSubgraphRequest.EventEdge";
  }
  protected:
  explicit PutLineageSubgraphRequest_EventEdge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventFieldNumber = 3,
    kExecutionIndexFieldNumber = 1,
    kArtifactIndexFieldNumber = 2,
  };
  // optional .ml_metadata.Event event = 3;
  bool has_event() const;
  private:
  bool _internal_has_event() const;
  public:
  void clear_event();
  const ::ml_metadata::Event& event() const;
  PROTOBUF_NODISCARD ::ml_metadata::Event* release_event();
  ::ml_metadata::Event* mutable_event();
  void set_allocated_event(::ml_metadata::Event* event);
  private:
  const ::ml_metadata::Event& _internal_event() const;
  ::ml_metadata::Event* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::ml_metadata::Event* event);
  ::ml_metadata::Event* unsafe_arena_release_event();

  // optional int32 execution_index = 1;
  bool has_execution_index() const;
  private:
  bool _internal_has_execution_index() const;
  public:
  void clear_execution_index();
  int32_t execution_index() const;
  void set_execution_index(int32_t value);
  private:
  int32_t _internal_execution_index() const;
  void _internal_set_execution_index(int32_t value);
  public:

  // optional int32 artifact_index = 2;
  bool has_artifact_index() const;
  private:
  bool _internal_has_artifact_index() const;
  public:
  void clear_artifact_index();
  int32_t artifact_index() const;
  void set_artifact_index(int32_t value);
  private:
  int32_t _internal_artifact_index() const;
  void _internal_set_artifact_index(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutLineageSubgraphRequest.EventEdge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Event* event_;
    int32_t execution_index_;
    int32_t artifact_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutLineageSubgraphRequest_Options final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutLineageSubgraphRequest.Options) */ {
 public:
  inline PutLineageSubgraphRequest_Options() : PutLineageSubgraphRequest_Options(nullptr) {}
  ~PutLineageSubgraphRequest_Options() override;
  explicit PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_Options(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutLineageSubgraphRequest_Options(const PutLineageSubgraphRequest_Options& from);
  PutLineageSubgraphRequest_Options(PutLineageSubgraphRequest_Options&& from) noexcept
    : PutLineageSubgraphRequest_Options() {
    *this = ::std::move(from);
  }

  inline PutLineageSubgraphRequest_Options& operator=(const PutLineageSubgraphRequest_Options& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutLineageSubgraphRequest_Options& operator=(PutLineageSubgraphRequest_Options&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutLineageSubgraphRequest_Options& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutLineageSubgraphRequest_Options* internal_default_instance() {
    return reinterpret_cast<const PutLineageSubgraphRequest_Options*>(
               &_PutLineageSubgraphRequest_Options_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(PutLineageSubgraphRequest_Options& a, PutLineageSubgraphRequest_Options& b) {
    a.Swap(&b);
  }
  inline void Swap(PutLineageSubgraphRequest_Options* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutLineageSubgraphRequest_Options* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutLineageSubgraphRequest_Options* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutLineageSubgraphRequest_Options>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutLineageSubgraphRequest_Options& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutLineageSubgraphRequest_Options& from) {
    PutLineageSubgraphRequest_Options::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutLineageSubgraphRequest_Options* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutLineageSubgraphRequest.Options";
  }
  protected:
  explicit PutLineageSubgraphRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReuseContextIfAlreadyExistFieldNumber = 1,
    kReuseArtifactIfAlreadyExistByExternalIdFieldNumber = 2,
  };
  // optional bool reuse_context_if_already_exist = 1;
  bool has_reuse_context_if_already_exist() const;
  private:
  bool _internal_has_reuse_context_if_already_exist() const;
  public:
  void clear_reuse_context_if_already_exist();
  bool reuse_context_if_already_exist() const;
  void set_reuse_context_if_already_exist(bool value);
  private:
  bool _internal_reuse_context_if_already_exist() const;
  void _internal_set_reuse_context_if_already_exist(bool value);
  public:

  // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
  bool has_reuse_artifact_if_already_exist_by_external_id() const;
  private:
  bool _internal_has_reuse_artifact_if_already_exist_by_external_id() const;
  public:
  void clear_reuse_artifact_if_already_exist_by_external_id();
  bool reuse_artifact_if_already_exist_by_external_id() const;
  void set_reuse_artifact_if_already_exist_by_external_id(bool value);
  private:
  bool _internal_reuse_artifact_if_already_exist_by_external_id() const;
  void _internal_set_reuse_artifact_if_already_exist_by_external_id(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutLineageSubgraphRequest.Options)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool reuse_context_if_already_exist_;
    bool reuse_artifact_if_already_exist_by_external_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutLineageSubgraphRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutLineageSubgraphRequest) */ {
 public:
  inline PutLineageSubgraphRequest() : PutLineageSubgraphRequest(nullptr) {}
  ~PutLineageSubgraphRequest() override;
  explicit PROTOBUF_CONSTEXPR PutLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutLineageSubgraphRequest(const PutLineageSubgraphRequest& from);
  PutLineageSubgraphRequest(PutLineageSubgraphRequest&& from) noexcept
    : PutLineageSubgraphRequest() {
    *this = ::std::move(from);
  }

  inline PutLineageSubgraphRequest& operator=(const PutLineageSubgraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutLineageSubgraphRequest& operator=(PutLineageSubgraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutLineageSubgraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutLineageSubgraphRequest* internal_default_instance() {
    return reinterpret_cast<const PutLineageSubgraphRequest*>(
               &_PutLineageSubgraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(PutLineageSubgraphRequest& a, PutLineageSubgraphRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutLineageSubgraphRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutLineageSubgraphRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutLineageSubgraphRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutLineageSubgraphRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutLineageSubgraphRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutLineageSubgraphRequest& from) {
    PutLineageSubgraphRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutLineageSubgraphRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutLineageSubgraphRequest";
  }
  protected:
  explicit PutLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PutLineageSubgraphRequest_EventEdge EventEdge;
  typedef PutLineageSubgraphRequest_Options Options;

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
    kArtifactsFieldNumber = 2,
    kContextsFieldNumber = 3,
    kEventEdgesFieldNumber = 4,
    kOptionsFieldNumber = 5,
    kTransactionOptionsFieldNumber = 6,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // repeated .ml_metadata.Artifact artifacts = 2;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // repeated .ml_metadata.Context contexts = 3;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // repeated .ml_metadata.PutLineageSubgraphRequest.EventEdge event_edges = 4;
  int event_edges_size() const;
  private:
  int _internal_event_edges_size() const;
  public:
  void clear_event_edges();
  ::ml_metadata::PutLineageSubgraphRequest_EventEdge* mutable_event_edges(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >*
      mutable_event_edges();
  private:
  const ::ml_metadata::PutLineageSubgraphRequest_EventEdge& _internal_event_edges(int index) const;
  ::ml_metadata::PutLineageSubgraphRequest_EventEdge* _internal_add_event_edges();
  public:
  const ::ml_metadata::PutLineageSubgraphRequest_EventEdge& event_edges(int index) const;
  ::ml_metadata::PutLineageSubgraphRequest_EventEdge* add_event_edges();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >&
      event_edges() const;

  // optional .ml_metadata.PutLineageSubgraphRequest.Options options = 5;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::PutLineageSubgraphRequest_Options& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::PutLineageSubgraphRequest_Options* release_options();
  ::ml_metadata::PutLineageSubgraphRequest_Options* mutable_options();
  void set_allocated_options(::ml_metadata::PutLineageSubgraphRequest_Options* options);
  private:
  const ::ml_metadata::PutLineageSubgraphRequest_Options& _internal_options() const;
  ::ml_metadata::PutLineageSubgraphRequest_Options* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::PutLineageSubgraphRequest_Options* options);
  ::ml_metadata::PutLineageSubgraphRequest_Options* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutLineageSubgraphRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutLineageSubgraphRequest_EventEdge > event_edges_;
    ::ml_metadata::PutLineageSubgraphRequest_Options* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutLineageSubgraphResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutLineageSubgraphResponse) */ {
 public:
  inline PutLineageSubgraphResponse() : PutLineageSubgraphResponse(nullptr) {}
  ~PutLineageSubgraphResponse() override;
  explicit PROTOBUF_CONSTEXPR PutLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutLineageSubgraphResponse(const PutLineageSubgraphResponse& from);
  PutLineageSubgraphResponse(PutLineageSubgraphResponse&& from) noexcept
    : PutLineageSubgraphResponse() {
    *this = ::std::move(from);
  }

  inline PutLineageSubgraphResponse& operator=(const PutLineageSubgraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutLineageSubgraphResponse& operator=(PutLineageSubgraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutLineageSubgraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutLineageSubgraphResponse* internal_default_instance() {
    return reinterpret_cast<const PutLineageSubgraphResponse*>(
               &_PutLineageSubgraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(PutLineageSubgraphResponse& a, PutLineageSubgraphResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutLineageSubgraphResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutLineageSubgraphResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutLineageSubgraphResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutLineageSubgraphResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutLineageSubgraphResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutLineageSubgraphResponse& from) {
    PutLineageSubgraphResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutLineageSubgraphResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutLineageSubgraphResponse";
  }
  protected:
  explicit PutLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionIdsFieldNumber = 1,
    kArtifactIdsFieldNumber = 2,
    kContextIdsFieldNumber = 3,
  };
  // repeated int64 execution_ids = 1 [packed = true];
  int execution_ids_size() const;
  private:
  int _internal_execution_ids_size() const;
  public:
  void clear_execution_ids();
  private:
  int64_t _internal_execution_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_execution_ids() const;
  void _internal_add_execution_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_execution_ids();
  public:
  int64_t execution_ids(int index) const;
  void set_execution_ids(int index, int64_t value);
  void add_execution_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      execution_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_execution_ids();

  // repeated int64 artifact_ids = 2 [packed = true];
  int artifact_ids_size() const;
  private:
  int _internal_artifact_ids_size() const;
  public:
  void clear_artifact_ids();
  private:
  int64_t _internal_artifact_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_ids() const;
  void _internal_add_artifact_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_ids();
  public:
  int64_t artifact_ids(int index) const;
  void set_artifact_ids(int index, int64_t value);
  void add_artifact_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_ids();

  // repeated int64 context_ids = 3 [packed = true];
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutLineageSubgraphResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > execution_ids_;
    mutable std::atomic<int> _execution_ids_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_ids_;
    mutable std::atomic<int> _artifact_ids_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    mutable std::atomic<int> _context_ids_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutTypesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutTypesRequest) */ {
 public:
  inline PutTypesRequest() : PutTypesRequest(nullptr) {}
  ~PutTypesRequest() override;
  explicit PROTOBUF_CONSTEXPR PutTypesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutTypesRequest(const PutTypesRequest& from);
  PutTypesRequest(PutTypesRequest&& from) noexcept
    : PutTypesRequest() {
    *this = ::std::move(from);
  }

  inline PutTypesRequest& operator=(const PutTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutTypesRequest& operator=(PutTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutTypesRequest* internal_default_instance() {
    return reinterpret_cast<const PutTypesRequest*>(
               &_PutTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(PutTypesRequest& a, PutTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutTypesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutTypesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutTypesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutTypesRequest& from) {
    PutTypesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutTypesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutTypesRequest";
  }
  protected:
  explicit PutTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypesFieldNumber = 1,
    kExecutionTypesFieldNumber = 2,
    kContextTypesFieldNumber = 3,
    kTransactionOptionsFieldNumber = 8,
    kCanAddFieldsFieldNumber = 4,
    kCanOmitFieldsFieldNumber = 7,
    kCanDeleteFieldsFieldNumber = 5,
    kAllFieldsMatchFieldNumber = 6,
  };
  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  int artifact_types_size() const;
  private:
  int _internal_artifact_types_size() const;
  public:
  void clear_artifact_types();
  ::ml_metadata::ArtifactType* mutable_artifact_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
      mutable_artifact_types();
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_types(int index) const;
  ::ml_metadata::ArtifactType* _internal_add_artifact_types();
  public:
  const ::ml_metadata::ArtifactType& artifact_types(int index) const;
  ::ml_metadata::ArtifactType* add_artifact_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
      artifact_types() const;

  // repeated .ml_metadata.ExecutionType execution_types = 2;
  int execution_types_size() const;
  private:
  int _internal_execution_types_size() const;
  public:
  void clear_execution_types();
  ::ml_metadata::ExecutionType* mutable_execution_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
      mutable_execution_types();
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_types(int index) const;
  ::ml_metadata::ExecutionType* _internal_add_execution_types();
  public:
  const ::ml_metadata::ExecutionType& execution_types(int index) const;
  ::ml_metadata::ExecutionType* add_execution_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
      execution_types() const;

  // repeated .ml_metadata.ContextType context_types = 3;
  int context_types_size() const;
  private:
  int _internal_context_types_size() const;
  public:
  void clear_context_types();
  ::ml_metadata::ContextType* mutable_context_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
      mutable_context_types();
  private:
  const ::ml_metadata::ContextType& _internal_context_types(int index) const;
  ::ml_metadata::ContextType* _internal_add_context_types();
  public:
  const ::ml_metadata::ContextType& context_types(int index) const;
  ::ml_metadata::ContextType* add_context_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
      context_types() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 8;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional bool can_add_fields = 4;
  bool has_can_add_fields() const;
  private:
  bool _internal_has_can_add_fields() const;
  public:
  void clear_can_add_fields();
  bool can_add_fields() const;
  void set_can_add_fields(bool value);
  private:
  bool _internal_can_add_fields() const;
  void _internal_set_can_add_fields(bool value);
  public:

  // optional bool can_omit_fields = 7;
  bool has_can_omit_fields() const;
  private:
  bool _internal_has_can_omit_fields() const;
  public:
  void clear_can_omit_fields();
  bool can_omit_fields() const;
  void set_can_omit_fields(bool value);
  private:
  bool _internal_can_omit_fields() const;
  void _internal_set_can_omit_fields(bool value);
  public:

  // optional bool can_delete_fields = 5 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_can_delete_fields() const;
  private:
  bool _internal_has_can_delete_fields() const;
  public:
  PROTOBUF_DEPRECATED void clear_can_delete_fields();
  PROTOBUF_DEPRECATED bool can_delete_fields() const;
  PROTOBUF_DEPRECATED void set_can_delete_fields(bool value);
  private:
  bool _internal_can_delete_fields() const;
  void _internal_set_can_delete_fields(bool value);
  public:

  // optional bool all_fields_match = 6 [default = true, deprecated = true];
  PROTOBUF_DEPRECATED bool has_all_fields_match() const;
  private:
  bool _internal_has_all_fields_match() const;
  public:
  PROTOBUF_DEPRECATED void clear_all_fields_match();
  PROTOBUF_DEPRECATED bool all_fields_match() const;
  PROTOBUF_DEPRECATED void set_all_fields_match(bool value);
  private:
  bool _internal_all_fields_match() const;
  void _internal_set_all_fields_match(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType > artifact_types_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType > execution_types_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType > context_types_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    bool can_add_fields_;
    bool can_omit_fields_;
    bool can_delete_fields_;
    bool all_fields_match_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutTypesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutTypesResponse) */ {
 public:
  inline PutTypesResponse() : PutTypesResponse(nullptr) {}
  ~PutTypesResponse() override;
  explicit PROTOBUF_CONSTEXPR PutTypesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutTypesResponse(const PutTypesResponse& from);
  PutTypesResponse(PutTypesResponse&& from) noexcept
    : PutTypesResponse() {
    *this = ::std::move(from);
  }

  inline PutTypesResponse& operator=(const PutTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutTypesResponse& operator=(PutTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutTypesResponse* internal_default_instance() {
    return reinterpret_cast<const PutTypesResponse*>(
               &_PutTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(PutTypesResponse& a, PutTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutTypesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutTypesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutTypesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutTypesResponse& from) {
    PutTypesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutTypesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutTypesResponse";
  }
  protected:
  explicit PutTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypeIdsFieldNumber = 1,
    kExecutionTypeIdsFieldNumber = 2,
    kContextTypeIdsFieldNumber = 3,
  };
  // repeated int64 artifact_type_ids = 1;
  int artifact_type_ids_size() const;
  private:
  int _internal_artifact_type_ids_size() const;
  public:
  void clear_artifact_type_ids();
  private:
  int64_t _internal_artifact_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_type_ids() const;
  void _internal_add_artifact_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_type_ids();
  public:
  int64_t artifact_type_ids(int index) const;
  void set_artifact_type_ids(int index, int64_t value);
  void add_artifact_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_type_ids();

  // repeated int64 execution_type_ids = 2;
  int execution_type_ids_size() const;
  private:
  int _internal_execution_type_ids_size() const;
  public:
  void clear_execution_type_ids();
  private:
  int64_t _internal_execution_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_execution_type_ids() const;
  void _internal_add_execution_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_execution_type_ids();
  public:
  int64_t execution_type_ids(int index) const;
  void set_execution_type_ids(int index, int64_t value);
  void add_execution_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      execution_type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_execution_type_ids();

  // repeated int64 context_type_ids = 3;
  int context_type_ids_size() const;
  private:
  int _internal_context_type_ids_size() const;
  public:
  void clear_context_type_ids();
  private:
  int64_t _internal_context_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_type_ids() const;
  void _internal_add_context_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_type_ids();
  public:
  int64_t context_type_ids(int index) const;
  void set_context_type_ids(int index, int64_t value);
  void add_context_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_type_ids();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_type_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > execution_type_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_type_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutContextTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutContextTypeRequest) */ {
 public:
  inline PutContextTypeRequest() : PutContextTypeRequest(nullptr) {}
  ~PutContextTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR PutContextTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutContextTypeRequest(const PutContextTypeRequest& from);
  PutContextTypeRequest(PutContextTypeRequest&& from) noexcept
    : PutContextTypeRequest() {
    *this = ::std::move(from);
  }

  inline PutContextTypeRequest& operator=(const PutContextTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutContextTypeRequest& operator=(PutContextTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutContextTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutContextTypeRequest* internal_default_instance() {
    return reinterpret_cast<const PutContextTypeRequest*>(
               &_PutContextTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(PutContextTypeRequest& a, PutContextTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutContextTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutContextTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutContextTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutContextTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutContextTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutContextTypeRequest& from) {
    PutContextTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutContextTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutContextTypeRequest";
  }
  protected:
  explicit PutContextTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextTypeFieldNumber = 1,
    kTransactionOptionsFieldNumber = 6,
    kCanAddFieldsFieldNumber = 2,
    kCanOmitFieldsFieldNumber = 5,
    kCanDeleteFieldsFieldNumber = 3,
    kAllFieldsMatchFieldNumber = 4,
  };
  // optional .ml_metadata.ContextType context_type = 1;
  bool has_context_type() const;
  private:
  bool _internal_has_context_type() const;
  public:
  void clear_context_type();
  const ::ml_metadata::ContextType& context_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ContextType* release_context_type();
  ::ml_metadata::ContextType* mutable_context_type();
  void set_allocated_context_type(::ml_metadata::ContextType* context_type);
  private:
  const ::ml_metadata::ContextType& _internal_context_type() const;
  ::ml_metadata::ContextType* _internal_mutable_context_type();
  public:
  void unsafe_arena_set_allocated_context_type(
      ::ml_metadata::ContextType* context_type);
  ::ml_metadata::ContextType* unsafe_arena_release_context_type();

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional bool can_add_fields = 2;
  bool has_can_add_fields() const;
  private:
  bool _internal_has_can_add_fields() const;
  public:
  void clear_can_add_fields();
  bool can_add_fields() const;
  void set_can_add_fields(bool value);
  private:
  bool _internal_can_add_fields() const;
  void _internal_set_can_add_fields(bool value);
  public:

  // optional bool can_omit_fields = 5;
  bool has_can_omit_fields() const;
  private:
  bool _internal_has_can_omit_fields() const;
  public:
  void clear_can_omit_fields();
  bool can_omit_fields() const;
  void set_can_omit_fields(bool value);
  private:
  bool _internal_can_omit_fields() const;
  void _internal_set_can_omit_fields(bool value);
  public:

  // optional bool can_delete_fields = 3 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_can_delete_fields() const;
  private:
  bool _internal_has_can_delete_fields() const;
  public:
  PROTOBUF_DEPRECATED void clear_can_delete_fields();
  PROTOBUF_DEPRECATED bool can_delete_fields() const;
  PROTOBUF_DEPRECATED void set_can_delete_fields(bool value);
  private:
  bool _internal_can_delete_fields() const;
  void _internal_set_can_delete_fields(bool value);
  public:

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  PROTOBUF_DEPRECATED bool has_all_fields_match() const;
  private:
  bool _internal_has_all_fields_match() const;
  public:
  PROTOBUF_DEPRECATED void clear_all_fields_match();
  PROTOBUF_DEPRECATED bool all_fields_match() const;
  PROTOBUF_DEPRECATED void set_all_fields_match(bool value);
  private:
  bool _internal_all_fields_match() const;
  void _internal_set_all_fields_match(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutContextTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ContextType* context_type_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    bool can_add_fields_;
    bool can_omit_fields_;
    bool can_delete_fields_;
    bool all_fields_match_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutContextTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutContextTypeResponse) */ {
 public:
  inline PutContextTypeResponse() : PutContextTypeResponse(nullptr) {}
  ~PutContextTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR PutContextTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutContextTypeResponse(const PutContextTypeResponse& from);
  PutContextTypeResponse(PutContextTypeResponse&& from) noexcept
    : PutContextTypeResponse() {
    *this = ::std::move(from);
  }

  inline PutContextTypeResponse& operator=(const PutContextTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutContextTypeResponse& operator=(PutContextTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutContextTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutContextTypeResponse* internal_default_instance() {
    return reinterpret_cast<const PutContextTypeResponse*>(
               &_PutContextTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(PutContextTypeResponse& a, PutContextTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutContextTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutContextTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutContextTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutContextTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutContextTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutContextTypeResponse& from) {
    PutContextTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutContextTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutContextTypeResponse";
  }
  protected:
  explicit PutContextTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdFieldNumber = 1,
  };
  // optional int64 type_id = 1;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  int64_t type_id() const;
  void set_type_id(int64_t value);
  private:
  int64_t _internal_type_id() const;
  void _internal_set_type_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.PutContextTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int64_t type_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutContextsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutContextsRequest) */ {
 public:
  inline PutContextsRequest() : PutContextsRequest(nullptr) {}
  ~PutContextsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutContextsRequest(const PutContextsRequest& from);
  PutContextsRequest(PutContextsRequest&& from) noexcept
    : PutContextsRequest() {
    *this = ::std::move(from);
  }

  inline PutContextsRequest& operator=(const PutContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutContextsRequest& operator=(PutContextsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutContextsRequest* internal_default_instance() {
    return reinterpret_cast<const PutContextsRequest*>(
               &_PutContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(PutContextsRequest& a, PutContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutContextsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutContextsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutContextsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutContextsRequest& from) {
    PutContextsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutContextsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutContextsRequest";
  }
  protected:
  explicit PutContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
    kUpdateMaskFieldNumber = 3,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional .google.protobuf.FieldMask update_mask = 3;
  bool has_update_mask() const;
  private:
  bool _internal_has_update_mask() const;
  public:
  void clear_update_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_update_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_update_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_update_mask();
  public:
  void unsafe_arena_set_allocated_update_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_update_mask();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutContextsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutContextsResponse) */ {
 public:
  inline PutContextsResponse() : PutContextsResponse(nullptr) {}
  ~PutContextsResponse() override;
  explicit PROTOBUF_CONSTEXPR PutContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutContextsResponse(const PutContextsResponse& from);
  PutContextsResponse(PutContextsResponse&& from) noexcept
    : PutContextsResponse() {
    *this = ::std::move(from);
  }

  inline PutContextsResponse& operator=(const PutContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutContextsResponse& operator=(PutContextsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutContextsResponse* internal_default_instance() {
    return reinterpret_cast<const PutContextsResponse*>(
               &_PutContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(PutContextsResponse& a, PutContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutContextsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutContextsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutContextsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutContextsResponse& from) {
    PutContextsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutContextsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutContextsResponse";
  }
  protected:
  explicit PutContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdsFieldNumber = 1,
  };
  // repeated int64 context_ids = 1;
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutAttributionsAndAssociationsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutAttributionsAndAssociationsRequest) */ {
 public:
  inline PutAttributionsAndAssociationsRequest() : PutAttributionsAndAssociationsRequest(nullptr) {}
  ~PutAttributionsAndAssociationsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutAttributionsAndAssociationsRequest(const PutAttributionsAndAssociationsRequest& from);
  PutAttributionsAndAssociationsRequest(PutAttributionsAndAssociationsRequest&& from) noexcept
    : PutAttributionsAndAssociationsRequest() {
    *this = ::std::move(from);
  }

  inline PutAttributionsAndAssociationsRequest& operator=(const PutAttributionsAndAssociationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutAttributionsAndAssociationsRequest& operator=(PutAttributionsAndAssociationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutAttributionsAndAssociationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutAttributionsAndAssociationsRequest* internal_default_instance() {
    return reinterpret_cast<const PutAttributionsAndAssociationsRequest*>(
               &_PutAttributionsAndAssociationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(PutAttributionsAndAssociationsRequest& a, PutAttributionsAndAssociationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutAttributionsAndAssociationsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutAttributionsAndAssociationsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutAttributionsAndAssociationsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutAttributionsAndAssociationsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutAttributionsAndAssociationsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutAttributionsAndAssociationsRequest& from) {
    PutAttributionsAndAssociationsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutAttributionsAndAssociationsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutAttributionsAndAssociationsRequest";
  }
  protected:
  explicit PutAttributionsAndAssociationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributionsFieldNumber = 1,
    kAssociationsFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // repeated .ml_metadata.Attribution attributions = 1;
  int attributions_size() const;
  private:
  int _internal_attributions_size() const;
  public:
  void clear_attributions();
  ::ml_metadata::Attribution* mutable_attributions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Attribution >*
      mutable_attributions();
  private:
  const ::ml_metadata::Attribution& _internal_attributions(int index) const;
  ::ml_metadata::Attribution* _internal_add_attributions();
  public:
  const ::ml_metadata::Attribution& attributions(int index) const;
  ::ml_metadata::Attribution* add_attributions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Attribution >&
      attributions() const;

  // repeated .ml_metadata.Association associations = 2;
  int associations_size() const;
  private:
  int _internal_associations_size() const;
  public:
  void clear_associations();
  ::ml_metadata::Association* mutable_associations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Association >*
      mutable_associations();
  private:
  const ::ml_metadata::Association& _internal_associations(int index) const;
  ::ml_metadata::Association* _internal_add_associations();
  public:
  const ::ml_metadata::Association& associations(int index) const;
  ::ml_metadata::Association* add_associations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Association >&
      associations() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutAttributionsAndAssociationsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Attribution > attributions_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Association > associations_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutAttributionsAndAssociationsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ml_metadata.PutAttributionsAndAssociationsResponse) */ {
 public:
  inline PutAttributionsAndAssociationsResponse() : PutAttributionsAndAssociationsResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutAttributionsAndAssociationsResponse(const PutAttributionsAndAssociationsResponse& from);
  PutAttributionsAndAssociationsResponse(PutAttributionsAndAssociationsResponse&& from) noexcept
    : PutAttributionsAndAssociationsResponse() {
    *this = ::std::move(from);
  }

  inline PutAttributionsAndAssociationsResponse& operator=(const PutAttributionsAndAssociationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutAttributionsAndAssociationsResponse& operator=(PutAttributionsAndAssociationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutAttributionsAndAssociationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutAttributionsAndAssociationsResponse* internal_default_instance() {
    return reinterpret_cast<const PutAttributionsAndAssociationsResponse*>(
               &_PutAttributionsAndAssociationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(PutAttributionsAndAssociationsResponse& a, PutAttributionsAndAssociationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutAttributionsAndAssociationsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutAttributionsAndAssociationsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutAttributionsAndAssociationsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutAttributionsAndAssociationsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PutAttributionsAndAssociationsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PutAttributionsAndAssociationsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutAttributionsAndAssociationsResponse";
  }
  protected:
  explicit PutAttributionsAndAssociationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ml_metadata.PutAttributionsAndAssociationsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutParentContextsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.PutParentContextsRequest) */ {
 public:
  inline PutParentContextsRequest() : PutParentContextsRequest(nullptr) {}
  ~PutParentContextsRequest() override;
  explicit PROTOBUF_CONSTEXPR PutParentContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutParentContextsRequest(const PutParentContextsRequest& from);
  PutParentContextsRequest(PutParentContextsRequest&& from) noexcept
    : PutParentContextsRequest() {
    *this = ::std::move(from);
  }

  inline PutParentContextsRequest& operator=(const PutParentContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutParentContextsRequest& operator=(PutParentContextsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutParentContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutParentContextsRequest* internal_default_instance() {
    return reinterpret_cast<const PutParentContextsRequest*>(
               &_PutParentContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(PutParentContextsRequest& a, PutParentContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PutParentContextsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutParentContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutParentContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutParentContextsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PutParentContextsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PutParentContextsRequest& from) {
    PutParentContextsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PutParentContextsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutParentContextsRequest";
  }
  protected:
  explicit PutParentContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentContextsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated .ml_metadata.ParentContext parent_contexts = 1;
  int parent_contexts_size() const;
  private:
  int _internal_parent_contexts_size() const;
  public:
  void clear_parent_contexts();
  ::ml_metadata::ParentContext* mutable_parent_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ParentContext >*
      mutable_parent_contexts();
  private:
  const ::ml_metadata::ParentContext& _internal_parent_contexts(int index) const;
  ::ml_metadata::ParentContext* _internal_add_parent_contexts();
  public:
  const ::ml_metadata::ParentContext& parent_contexts(int index) const;
  ::ml_metadata::ParentContext* add_parent_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ParentContext >&
      parent_contexts() const;

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.PutParentContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ParentContext > parent_contexts_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class PutParentContextsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:ml_metadata.PutParentContextsResponse) */ {
 public:
  inline PutParentContextsResponse() : PutParentContextsResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR PutParentContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PutParentContextsResponse(const PutParentContextsResponse& from);
  PutParentContextsResponse(PutParentContextsResponse&& from) noexcept
    : PutParentContextsResponse() {
    *this = ::std::move(from);
  }

  inline PutParentContextsResponse& operator=(const PutParentContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PutParentContextsResponse& operator=(PutParentContextsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PutParentContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PutParentContextsResponse* internal_default_instance() {
    return reinterpret_cast<const PutParentContextsResponse*>(
               &_PutParentContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(PutParentContextsResponse& a, PutParentContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PutParentContextsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PutParentContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PutParentContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PutParentContextsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PutParentContextsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PutParentContextsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.PutParentContextsResponse";
  }
  protected:
  explicit PutParentContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ml_metadata.PutParentContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByTypeRequest) */ {
 public:
  inline GetArtifactsByTypeRequest() : GetArtifactsByTypeRequest(nullptr) {}
  ~GetArtifactsByTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByTypeRequest(const GetArtifactsByTypeRequest& from);
  GetArtifactsByTypeRequest(GetArtifactsByTypeRequest&& from) noexcept
    : GetArtifactsByTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByTypeRequest& operator=(const GetArtifactsByTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByTypeRequest& operator=(GetArtifactsByTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByTypeRequest*>(
               &_GetArtifactsByTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GetArtifactsByTypeRequest& a, GetArtifactsByTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByTypeRequest& from) {
    GetArtifactsByTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByTypeRequest";
  }
  protected:
  explicit GetArtifactsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 2,
    kOptionsFieldNumber = 3,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 2;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.ListOperationOptions options = 3;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByTypeResponse) */ {
 public:
  inline GetArtifactsByTypeResponse() : GetArtifactsByTypeResponse(nullptr) {}
  ~GetArtifactsByTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByTypeResponse(const GetArtifactsByTypeResponse& from);
  GetArtifactsByTypeResponse(GetArtifactsByTypeResponse&& from) noexcept
    : GetArtifactsByTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByTypeResponse& operator=(const GetArtifactsByTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByTypeResponse& operator=(GetArtifactsByTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByTypeResponse*>(
               &_GetArtifactsByTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(GetArtifactsByTypeResponse& a, GetArtifactsByTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByTypeResponse& from) {
    GetArtifactsByTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByTypeResponse";
  }
  protected:
  explicit GetArtifactsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactByTypeAndNameRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactByTypeAndNameRequest) */ {
 public:
  inline GetArtifactByTypeAndNameRequest() : GetArtifactByTypeAndNameRequest(nullptr) {}
  ~GetArtifactByTypeAndNameRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactByTypeAndNameRequest(const GetArtifactByTypeAndNameRequest& from);
  GetArtifactByTypeAndNameRequest(GetArtifactByTypeAndNameRequest&& from) noexcept
    : GetArtifactByTypeAndNameRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactByTypeAndNameRequest& operator=(const GetArtifactByTypeAndNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactByTypeAndNameRequest& operator=(GetArtifactByTypeAndNameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactByTypeAndNameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactByTypeAndNameRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactByTypeAndNameRequest*>(
               &_GetArtifactByTypeAndNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(GetArtifactByTypeAndNameRequest& a, GetArtifactByTypeAndNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactByTypeAndNameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactByTypeAndNameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactByTypeAndNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactByTypeAndNameRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactByTypeAndNameRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactByTypeAndNameRequest& from) {
    GetArtifactByTypeAndNameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactByTypeAndNameRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactByTypeAndNameRequest";
  }
  protected:
  explicit GetArtifactByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kArtifactNameFieldNumber = 2,
    kTypeVersionFieldNumber = 3,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string artifact_name = 2;
  bool has_artifact_name() const;
  private:
  bool _internal_has_artifact_name() const;
  public:
  void clear_artifact_name();
  const std::string& artifact_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_artifact_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_artifact_name();
  PROTOBUF_NODISCARD std::string* release_artifact_name();
  void set_allocated_artifact_name(std::string* artifact_name);
  private:
  const std::string& _internal_artifact_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_artifact_name(const std::string& value);
  std::string* _internal_mutable_artifact_name();
  public:

  // optional string type_version = 3;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactByTypeAndNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr artifact_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactByTypeAndNameResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactByTypeAndNameResponse) */ {
 public:
  inline GetArtifactByTypeAndNameResponse() : GetArtifactByTypeAndNameResponse(nullptr) {}
  ~GetArtifactByTypeAndNameResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactByTypeAndNameResponse(const GetArtifactByTypeAndNameResponse& from);
  GetArtifactByTypeAndNameResponse(GetArtifactByTypeAndNameResponse&& from) noexcept
    : GetArtifactByTypeAndNameResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactByTypeAndNameResponse& operator=(const GetArtifactByTypeAndNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactByTypeAndNameResponse& operator=(GetArtifactByTypeAndNameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactByTypeAndNameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactByTypeAndNameResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactByTypeAndNameResponse*>(
               &_GetArtifactByTypeAndNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(GetArtifactByTypeAndNameResponse& a, GetArtifactByTypeAndNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactByTypeAndNameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactByTypeAndNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactByTypeAndNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactByTypeAndNameResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactByTypeAndNameResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactByTypeAndNameResponse& from) {
    GetArtifactByTypeAndNameResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactByTypeAndNameResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactByTypeAndNameResponse";
  }
  protected:
  explicit GetArtifactByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactFieldNumber = 1,
  };
  // optional .ml_metadata.Artifact artifact = 1;
  bool has_artifact() const;
  private:
  bool _internal_has_artifact() const;
  public:
  void clear_artifact();
  const ::ml_metadata::Artifact& artifact() const;
  PROTOBUF_NODISCARD ::ml_metadata::Artifact* release_artifact();
  ::ml_metadata::Artifact* mutable_artifact();
  void set_allocated_artifact(::ml_metadata::Artifact* artifact);
  private:
  const ::ml_metadata::Artifact& _internal_artifact() const;
  ::ml_metadata::Artifact* _internal_mutable_artifact();
  public:
  void unsafe_arena_set_allocated_artifact(
      ::ml_metadata::Artifact* artifact);
  ::ml_metadata::Artifact* unsafe_arena_release_artifact();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactByTypeAndNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Artifact* artifact_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByIDRequest) */ {
 public:
  inline GetArtifactsByIDRequest() : GetArtifactsByIDRequest(nullptr) {}
  ~GetArtifactsByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByIDRequest(const GetArtifactsByIDRequest& from);
  GetArtifactsByIDRequest(GetArtifactsByIDRequest&& from) noexcept
    : GetArtifactsByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByIDRequest& operator=(const GetArtifactsByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByIDRequest& operator=(GetArtifactsByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByIDRequest*>(
               &_GetArtifactsByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(GetArtifactsByIDRequest& a, GetArtifactsByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByIDRequest& from) {
    GetArtifactsByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByIDRequest";
  }
  protected:
  explicit GetArtifactsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
    kPopulateArtifactTypesFieldNumber = 3,
  };
  // repeated int64 artifact_ids = 1;
  int artifact_ids_size() const;
  private:
  int _internal_artifact_ids_size() const;
  public:
  void clear_artifact_ids();
  private:
  int64_t _internal_artifact_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_ids() const;
  void _internal_add_artifact_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_ids();
  public:
  int64_t artifact_ids(int index) const;
  void set_artifact_ids(int index, int64_t value);
  void add_artifact_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional bool populate_artifact_types = 3 [default = false];
  bool has_populate_artifact_types() const;
  private:
  bool _internal_has_populate_artifact_types() const;
  public:
  void clear_populate_artifact_types();
  bool populate_artifact_types() const;
  void set_populate_artifact_types(bool value);
  private:
  bool _internal_populate_artifact_types() const;
  void _internal_set_populate_artifact_types(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    bool populate_artifact_types_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByIDResponse) */ {
 public:
  inline GetArtifactsByIDResponse() : GetArtifactsByIDResponse(nullptr) {}
  ~GetArtifactsByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByIDResponse(const GetArtifactsByIDResponse& from);
  GetArtifactsByIDResponse(GetArtifactsByIDResponse&& from) noexcept
    : GetArtifactsByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByIDResponse& operator=(const GetArtifactsByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByIDResponse& operator=(GetArtifactsByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByIDResponse*>(
               &_GetArtifactsByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(GetArtifactsByIDResponse& a, GetArtifactsByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByIDResponse& from) {
    GetArtifactsByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByIDResponse";
  }
  protected:
  explicit GetArtifactsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
    kArtifactTypesFieldNumber = 2,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // repeated .ml_metadata.ArtifactType artifact_types = 2;
  int artifact_types_size() const;
  private:
  int _internal_artifact_types_size() const;
  public:
  void clear_artifact_types();
  ::ml_metadata::ArtifactType* mutable_artifact_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
      mutable_artifact_types();
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_types(int index) const;
  ::ml_metadata::ArtifactType* _internal_add_artifact_types();
  public:
  const ::ml_metadata::ArtifactType& artifact_types(int index) const;
  ::ml_metadata::ArtifactType* add_artifact_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
      artifact_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType > artifact_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsRequest) */ {
 public:
  inline GetArtifactsRequest() : GetArtifactsRequest(nullptr) {}
  ~GetArtifactsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsRequest(const GetArtifactsRequest& from);
  GetArtifactsRequest(GetArtifactsRequest&& from) noexcept
    : GetArtifactsRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsRequest& operator=(const GetArtifactsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsRequest& operator=(GetArtifactsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsRequest*>(
               &_GetArtifactsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(GetArtifactsRequest& a, GetArtifactsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsRequest& from) {
    GetArtifactsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsRequest";
  }
  protected:
  explicit GetArtifactsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // optional .ml_metadata.ListOperationOptions options = 1;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsResponse) */ {
 public:
  inline GetArtifactsResponse() : GetArtifactsResponse(nullptr) {}
  ~GetArtifactsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsResponse(const GetArtifactsResponse& from);
  GetArtifactsResponse(GetArtifactsResponse&& from) noexcept
    : GetArtifactsResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsResponse& operator=(const GetArtifactsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsResponse& operator=(GetArtifactsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsResponse*>(
               &_GetArtifactsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(GetArtifactsResponse& a, GetArtifactsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsResponse& from) {
    GetArtifactsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsResponse";
  }
  protected:
  explicit GetArtifactsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByURIRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByURIRequest) */ {
 public:
  inline GetArtifactsByURIRequest() : GetArtifactsByURIRequest(nullptr) {}
  ~GetArtifactsByURIRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByURIRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByURIRequest(const GetArtifactsByURIRequest& from);
  GetArtifactsByURIRequest(GetArtifactsByURIRequest&& from) noexcept
    : GetArtifactsByURIRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByURIRequest& operator=(const GetArtifactsByURIRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByURIRequest& operator=(GetArtifactsByURIRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByURIRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByURIRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByURIRequest*>(
               &_GetArtifactsByURIRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(GetArtifactsByURIRequest& a, GetArtifactsByURIRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByURIRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByURIRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByURIRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByURIRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByURIRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByURIRequest& from) {
    GetArtifactsByURIRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByURIRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByURIRequest";
  }
  protected:
  explicit GetArtifactsByURIRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrisFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // repeated string uris = 2;
  int uris_size() const;
  private:
  int _internal_uris_size() const;
  public:
  void clear_uris();
  const std::string& uris(int index) const;
  std::string* mutable_uris(int index);
  void set_uris(int index, const std::string& value);
  void set_uris(int index, std::string&& value);
  void set_uris(int index, const char* value);
  void set_uris(int index, const char* value, size_t size);
  std::string* add_uris();
  void add_uris(const std::string& value);
  void add_uris(std::string&& value);
  void add_uris(const char* value);
  void add_uris(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& uris() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_uris();
  private:
  const std::string& _internal_uris(int index) const;
  std::string* _internal_add_uris();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByURIRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> uris_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByURIResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByURIResponse) */ {
 public:
  inline GetArtifactsByURIResponse() : GetArtifactsByURIResponse(nullptr) {}
  ~GetArtifactsByURIResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByURIResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByURIResponse(const GetArtifactsByURIResponse& from);
  GetArtifactsByURIResponse(GetArtifactsByURIResponse&& from) noexcept
    : GetArtifactsByURIResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByURIResponse& operator=(const GetArtifactsByURIResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByURIResponse& operator=(GetArtifactsByURIResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByURIResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByURIResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByURIResponse*>(
               &_GetArtifactsByURIResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(GetArtifactsByURIResponse& a, GetArtifactsByURIResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByURIResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByURIResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByURIResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByURIResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByURIResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByURIResponse& from) {
    GetArtifactsByURIResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByURIResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByURIResponse";
  }
  protected:
  explicit GetArtifactsByURIResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByURIResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsRequest) */ {
 public:
  inline GetExecutionsRequest() : GetExecutionsRequest(nullptr) {}
  ~GetExecutionsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsRequest(const GetExecutionsRequest& from);
  GetExecutionsRequest(GetExecutionsRequest&& from) noexcept
    : GetExecutionsRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionsRequest& operator=(const GetExecutionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsRequest& operator=(GetExecutionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsRequest*>(
               &_GetExecutionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(GetExecutionsRequest& a, GetExecutionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsRequest& from) {
    GetExecutionsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsRequest";
  }
  protected:
  explicit GetExecutionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // optional .ml_metadata.ListOperationOptions options = 1;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsResponse) */ {
 public:
  inline GetExecutionsResponse() : GetExecutionsResponse(nullptr) {}
  ~GetExecutionsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsResponse(const GetExecutionsResponse& from);
  GetExecutionsResponse(GetExecutionsResponse&& from) noexcept
    : GetExecutionsResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionsResponse& operator=(const GetExecutionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsResponse& operator=(GetExecutionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsResponse*>(
               &_GetExecutionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(GetExecutionsResponse& a, GetExecutionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsResponse& from) {
    GetExecutionsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsResponse";
  }
  protected:
  explicit GetExecutionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypeRequest) */ {
 public:
  inline GetArtifactTypeRequest() : GetArtifactTypeRequest(nullptr) {}
  ~GetArtifactTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypeRequest(const GetArtifactTypeRequest& from);
  GetArtifactTypeRequest(GetArtifactTypeRequest&& from) noexcept
    : GetArtifactTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypeRequest& operator=(const GetArtifactTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypeRequest& operator=(GetArtifactTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypeRequest*>(
               &_GetArtifactTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(GetArtifactTypeRequest& a, GetArtifactTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypeRequest& from) {
    GetArtifactTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypeRequest";
  }
  protected:
  explicit GetArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 2;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypeResponse) */ {
 public:
  inline GetArtifactTypeResponse() : GetArtifactTypeResponse(nullptr) {}
  ~GetArtifactTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypeResponse(const GetArtifactTypeResponse& from);
  GetArtifactTypeResponse(GetArtifactTypeResponse&& from) noexcept
    : GetArtifactTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypeResponse& operator=(const GetArtifactTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypeResponse& operator=(GetArtifactTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypeResponse*>(
               &_GetArtifactTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(GetArtifactTypeResponse& a, GetArtifactTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypeResponse& from) {
    GetArtifactTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypeResponse";
  }
  protected:
  explicit GetArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypeFieldNumber = 1,
  };
  // optional .ml_metadata.ArtifactType artifact_type = 1;
  bool has_artifact_type() const;
  private:
  bool _internal_has_artifact_type() const;
  public:
  void clear_artifact_type();
  const ::ml_metadata::ArtifactType& artifact_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ArtifactType* release_artifact_type();
  ::ml_metadata::ArtifactType* mutable_artifact_type();
  void set_allocated_artifact_type(::ml_metadata::ArtifactType* artifact_type);
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_type() const;
  ::ml_metadata::ArtifactType* _internal_mutable_artifact_type();
  public:
  void unsafe_arena_set_allocated_artifact_type(
      ::ml_metadata::ArtifactType* artifact_type);
  ::ml_metadata::ArtifactType* unsafe_arena_release_artifact_type();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ArtifactType* artifact_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesRequest) */ {
 public:
  inline GetArtifactTypesRequest() : GetArtifactTypesRequest(nullptr) {}
  ~GetArtifactTypesRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesRequest(const GetArtifactTypesRequest& from);
  GetArtifactTypesRequest(GetArtifactTypesRequest&& from) noexcept
    : GetArtifactTypesRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesRequest& operator=(const GetArtifactTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesRequest& operator=(GetArtifactTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesRequest*>(
               &_GetArtifactTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GetArtifactTypesRequest& a, GetArtifactTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesRequest& from) {
    GetArtifactTypesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesRequest";
  }
  protected:
  explicit GetArtifactTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesResponse) */ {
 public:
  inline GetArtifactTypesResponse() : GetArtifactTypesResponse(nullptr) {}
  ~GetArtifactTypesResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesResponse(const GetArtifactTypesResponse& from);
  GetArtifactTypesResponse(GetArtifactTypesResponse&& from) noexcept
    : GetArtifactTypesResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesResponse& operator=(const GetArtifactTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesResponse& operator=(GetArtifactTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesResponse*>(
               &_GetArtifactTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(GetArtifactTypesResponse& a, GetArtifactTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesResponse& from) {
    GetArtifactTypesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesResponse";
  }
  protected:
  explicit GetArtifactTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  int artifact_types_size() const;
  private:
  int _internal_artifact_types_size() const;
  public:
  void clear_artifact_types();
  ::ml_metadata::ArtifactType* mutable_artifact_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
      mutable_artifact_types();
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_types(int index) const;
  ::ml_metadata::ArtifactType* _internal_add_artifact_types();
  public:
  const ::ml_metadata::ArtifactType& artifact_types(int index) const;
  ::ml_metadata::ArtifactType* add_artifact_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
      artifact_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType > artifact_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesRequest) */ {
 public:
  inline GetExecutionTypesRequest() : GetExecutionTypesRequest(nullptr) {}
  ~GetExecutionTypesRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesRequest(const GetExecutionTypesRequest& from);
  GetExecutionTypesRequest(GetExecutionTypesRequest&& from) noexcept
    : GetExecutionTypesRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesRequest& operator=(const GetExecutionTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesRequest& operator=(GetExecutionTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesRequest*>(
               &_GetExecutionTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(GetExecutionTypesRequest& a, GetExecutionTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesRequest& from) {
    GetExecutionTypesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesRequest";
  }
  protected:
  explicit GetExecutionTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesResponse) */ {
 public:
  inline GetExecutionTypesResponse() : GetExecutionTypesResponse(nullptr) {}
  ~GetExecutionTypesResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesResponse(const GetExecutionTypesResponse& from);
  GetExecutionTypesResponse(GetExecutionTypesResponse&& from) noexcept
    : GetExecutionTypesResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesResponse& operator=(const GetExecutionTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesResponse& operator=(GetExecutionTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesResponse*>(
               &_GetExecutionTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(GetExecutionTypesResponse& a, GetExecutionTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesResponse& from) {
    GetExecutionTypesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesResponse";
  }
  protected:
  explicit GetExecutionTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ExecutionType execution_types = 1;
  int execution_types_size() const;
  private:
  int _internal_execution_types_size() const;
  public:
  void clear_execution_types();
  ::ml_metadata::ExecutionType* mutable_execution_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
      mutable_execution_types();
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_types(int index) const;
  ::ml_metadata::ExecutionType* _internal_add_execution_types();
  public:
  const ::ml_metadata::ExecutionType& execution_types(int index) const;
  ::ml_metadata::ExecutionType* add_execution_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
      execution_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType > execution_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesRequest) */ {
 public:
  inline GetContextTypesRequest() : GetContextTypesRequest(nullptr) {}
  ~GetContextTypesRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesRequest(const GetContextTypesRequest& from);
  GetContextTypesRequest(GetContextTypesRequest&& from) noexcept
    : GetContextTypesRequest() {
    *this = ::std::move(from);
  }

  inline GetContextTypesRequest& operator=(const GetContextTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesRequest& operator=(GetContextTypesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesRequest*>(
               &_GetContextTypesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(GetContextTypesRequest& a, GetContextTypesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesRequest& from) {
    GetContextTypesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesRequest";
  }
  protected:
  explicit GetContextTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesResponse) */ {
 public:
  inline GetContextTypesResponse() : GetContextTypesResponse(nullptr) {}
  ~GetContextTypesResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesResponse(const GetContextTypesResponse& from);
  GetContextTypesResponse(GetContextTypesResponse&& from) noexcept
    : GetContextTypesResponse() {
    *this = ::std::move(from);
  }

  inline GetContextTypesResponse& operator=(const GetContextTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesResponse& operator=(GetContextTypesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesResponse*>(
               &_GetContextTypesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(GetContextTypesResponse& a, GetContextTypesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesResponse& from) {
    GetContextTypesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesResponse";
  }
  protected:
  explicit GetContextTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ContextType context_types = 1;
  int context_types_size() const;
  private:
  int _internal_context_types_size() const;
  public:
  void clear_context_types();
  ::ml_metadata::ContextType* mutable_context_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
      mutable_context_types();
  private:
  const ::ml_metadata::ContextType& _internal_context_types(int index) const;
  ::ml_metadata::ContextType* _internal_add_context_types();
  public:
  const ::ml_metadata::ContextType& context_types(int index) const;
  ::ml_metadata::ContextType* add_context_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
      context_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType > context_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByExternalIdsRequest) */ {
 public:
  inline GetArtifactsByExternalIdsRequest() : GetArtifactsByExternalIdsRequest(nullptr) {}
  ~GetArtifactsByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByExternalIdsRequest(const GetArtifactsByExternalIdsRequest& from);
  GetArtifactsByExternalIdsRequest(GetArtifactsByExternalIdsRequest&& from) noexcept
    : GetArtifactsByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByExternalIdsRequest& operator=(const GetArtifactsByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByExternalIdsRequest& operator=(GetArtifactsByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByExternalIdsRequest*>(
               &_GetArtifactsByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(GetArtifactsByExternalIdsRequest& a, GetArtifactsByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByExternalIdsRequest& from) {
    GetArtifactsByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByExternalIdsRequest";
  }
  protected:
  explicit GetArtifactsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByExternalIdsResponse) */ {
 public:
  inline GetArtifactsByExternalIdsResponse() : GetArtifactsByExternalIdsResponse(nullptr) {}
  ~GetArtifactsByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByExternalIdsResponse(const GetArtifactsByExternalIdsResponse& from);
  GetArtifactsByExternalIdsResponse(GetArtifactsByExternalIdsResponse&& from) noexcept
    : GetArtifactsByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByExternalIdsResponse& operator=(const GetArtifactsByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByExternalIdsResponse& operator=(GetArtifactsByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByExternalIdsResponse*>(
               &_GetArtifactsByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(GetArtifactsByExternalIdsResponse& a, GetArtifactsByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByExternalIdsResponse& from) {
    GetArtifactsByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByExternalIdsResponse";
  }
  protected:
  explicit GetArtifactsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByExternalIdsRequest) */ {
 public:
  inline GetExecutionsByExternalIdsRequest() : GetExecutionsByExternalIdsRequest(nullptr) {}
  ~GetExecutionsByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByExternalIdsRequest(const GetExecutionsByExternalIdsRequest& from);
  GetExecutionsByExternalIdsRequest(GetExecutionsByExternalIdsRequest&& from) noexcept
    : GetExecutionsByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByExternalIdsRequest& operator=(const GetExecutionsByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByExternalIdsRequest& operator=(GetExecutionsByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByExternalIdsRequest*>(
               &_GetExecutionsByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(GetExecutionsByExternalIdsRequest& a, GetExecutionsByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByExternalIdsRequest& from) {
    GetExecutionsByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByExternalIdsRequest";
  }
  protected:
  explicit GetExecutionsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByExternalIdsResponse) */ {
 public:
  inline GetExecutionsByExternalIdsResponse() : GetExecutionsByExternalIdsResponse(nullptr) {}
  ~GetExecutionsByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByExternalIdsResponse(const GetExecutionsByExternalIdsResponse& from);
  GetExecutionsByExternalIdsResponse(GetExecutionsByExternalIdsResponse&& from) noexcept
    : GetExecutionsByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByExternalIdsResponse& operator=(const GetExecutionsByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByExternalIdsResponse& operator=(GetExecutionsByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByExternalIdsResponse*>(
               &_GetExecutionsByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(GetExecutionsByExternalIdsResponse& a, GetExecutionsByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByExternalIdsResponse& from) {
    GetExecutionsByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByExternalIdsResponse";
  }
  protected:
  explicit GetExecutionsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByExternalIdsRequest) */ {
 public:
  inline GetContextsByExternalIdsRequest() : GetContextsByExternalIdsRequest(nullptr) {}
  ~GetContextsByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByExternalIdsRequest(const GetContextsByExternalIdsRequest& from);
  GetContextsByExternalIdsRequest(GetContextsByExternalIdsRequest&& from) noexcept
    : GetContextsByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsByExternalIdsRequest& operator=(const GetContextsByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByExternalIdsRequest& operator=(GetContextsByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsByExternalIdsRequest*>(
               &_GetContextsByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(GetContextsByExternalIdsRequest& a, GetContextsByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByExternalIdsRequest& from) {
    GetContextsByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByExternalIdsRequest";
  }
  protected:
  explicit GetContextsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByExternalIdsResponse) */ {
 public:
  inline GetContextsByExternalIdsResponse() : GetContextsByExternalIdsResponse(nullptr) {}
  ~GetContextsByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByExternalIdsResponse(const GetContextsByExternalIdsResponse& from);
  GetContextsByExternalIdsResponse(GetContextsByExternalIdsResponse&& from) noexcept
    : GetContextsByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsByExternalIdsResponse& operator=(const GetContextsByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByExternalIdsResponse& operator=(GetContextsByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsByExternalIdsResponse*>(
               &_GetContextsByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(GetContextsByExternalIdsResponse& a, GetContextsByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByExternalIdsResponse& from) {
    GetContextsByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByExternalIdsResponse";
  }
  protected:
  explicit GetContextsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesByExternalIdsRequest) */ {
 public:
  inline GetArtifactTypesByExternalIdsRequest() : GetArtifactTypesByExternalIdsRequest(nullptr) {}
  ~GetArtifactTypesByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesByExternalIdsRequest(const GetArtifactTypesByExternalIdsRequest& from);
  GetArtifactTypesByExternalIdsRequest(GetArtifactTypesByExternalIdsRequest&& from) noexcept
    : GetArtifactTypesByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesByExternalIdsRequest& operator=(const GetArtifactTypesByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesByExternalIdsRequest& operator=(GetArtifactTypesByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesByExternalIdsRequest*>(
               &_GetArtifactTypesByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(GetArtifactTypesByExternalIdsRequest& a, GetArtifactTypesByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesByExternalIdsRequest& from) {
    GetArtifactTypesByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesByExternalIdsRequest";
  }
  protected:
  explicit GetArtifactTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesByExternalIdsResponse) */ {
 public:
  inline GetArtifactTypesByExternalIdsResponse() : GetArtifactTypesByExternalIdsResponse(nullptr) {}
  ~GetArtifactTypesByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesByExternalIdsResponse(const GetArtifactTypesByExternalIdsResponse& from);
  GetArtifactTypesByExternalIdsResponse(GetArtifactTypesByExternalIdsResponse&& from) noexcept
    : GetArtifactTypesByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesByExternalIdsResponse& operator=(const GetArtifactTypesByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesByExternalIdsResponse& operator=(GetArtifactTypesByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesByExternalIdsResponse*>(
               &_GetArtifactTypesByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(GetArtifactTypesByExternalIdsResponse& a, GetArtifactTypesByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesByExternalIdsResponse& from) {
    GetArtifactTypesByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesByExternalIdsResponse";
  }
  protected:
  explicit GetArtifactTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  int artifact_types_size() const;
  private:
  int _internal_artifact_types_size() const;
  public:
  void clear_artifact_types();
  ::ml_metadata::ArtifactType* mutable_artifact_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
      mutable_artifact_types();
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_types(int index) const;
  ::ml_metadata::ArtifactType* _internal_add_artifact_types();
  public:
  const ::ml_metadata::ArtifactType& artifact_types(int index) const;
  ::ml_metadata::ArtifactType* add_artifact_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
      artifact_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType > artifact_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesByExternalIdsRequest) */ {
 public:
  inline GetExecutionTypesByExternalIdsRequest() : GetExecutionTypesByExternalIdsRequest(nullptr) {}
  ~GetExecutionTypesByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesByExternalIdsRequest(const GetExecutionTypesByExternalIdsRequest& from);
  GetExecutionTypesByExternalIdsRequest(GetExecutionTypesByExternalIdsRequest&& from) noexcept
    : GetExecutionTypesByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesByExternalIdsRequest& operator=(const GetExecutionTypesByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesByExternalIdsRequest& operator=(GetExecutionTypesByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesByExternalIdsRequest*>(
               &_GetExecutionTypesByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(GetExecutionTypesByExternalIdsRequest& a, GetExecutionTypesByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesByExternalIdsRequest& from) {
    GetExecutionTypesByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesByExternalIdsRequest";
  }
  protected:
  explicit GetExecutionTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesByExternalIdsResponse) */ {
 public:
  inline GetExecutionTypesByExternalIdsResponse() : GetExecutionTypesByExternalIdsResponse(nullptr) {}
  ~GetExecutionTypesByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesByExternalIdsResponse(const GetExecutionTypesByExternalIdsResponse& from);
  GetExecutionTypesByExternalIdsResponse(GetExecutionTypesByExternalIdsResponse&& from) noexcept
    : GetExecutionTypesByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesByExternalIdsResponse& operator=(const GetExecutionTypesByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesByExternalIdsResponse& operator=(GetExecutionTypesByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesByExternalIdsResponse*>(
               &_GetExecutionTypesByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(GetExecutionTypesByExternalIdsResponse& a, GetExecutionTypesByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesByExternalIdsResponse& from) {
    GetExecutionTypesByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesByExternalIdsResponse";
  }
  protected:
  explicit GetExecutionTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ExecutionType execution_types = 1;
  int execution_types_size() const;
  private:
  int _internal_execution_types_size() const;
  public:
  void clear_execution_types();
  ::ml_metadata::ExecutionType* mutable_execution_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
      mutable_execution_types();
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_types(int index) const;
  ::ml_metadata::ExecutionType* _internal_add_execution_types();
  public:
  const ::ml_metadata::ExecutionType& execution_types(int index) const;
  ::ml_metadata::ExecutionType* add_execution_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
      execution_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType > execution_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesByExternalIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesByExternalIdsRequest) */ {
 public:
  inline GetContextTypesByExternalIdsRequest() : GetContextTypesByExternalIdsRequest(nullptr) {}
  ~GetContextTypesByExternalIdsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesByExternalIdsRequest(const GetContextTypesByExternalIdsRequest& from);
  GetContextTypesByExternalIdsRequest(GetContextTypesByExternalIdsRequest&& from) noexcept
    : GetContextTypesByExternalIdsRequest() {
    *this = ::std::move(from);
  }

  inline GetContextTypesByExternalIdsRequest& operator=(const GetContextTypesByExternalIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesByExternalIdsRequest& operator=(GetContextTypesByExternalIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesByExternalIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesByExternalIdsRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesByExternalIdsRequest*>(
               &_GetContextTypesByExternalIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(GetContextTypesByExternalIdsRequest& a, GetContextTypesByExternalIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesByExternalIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesByExternalIdsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesByExternalIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesByExternalIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesByExternalIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesByExternalIdsRequest& from) {
    GetContextTypesByExternalIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesByExternalIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesByExternalIdsRequest";
  }
  protected:
  explicit GetContextTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated string external_ids = 1;
  int external_ids_size() const;
  private:
  int _internal_external_ids_size() const;
  public:
  void clear_external_ids();
  const std::string& external_ids(int index) const;
  std::string* mutable_external_ids(int index);
  void set_external_ids(int index, const std::string& value);
  void set_external_ids(int index, std::string&& value);
  void set_external_ids(int index, const char* value);
  void set_external_ids(int index, const char* value, size_t size);
  std::string* add_external_ids();
  void add_external_ids(const std::string& value);
  void add_external_ids(std::string&& value);
  void add_external_ids(const char* value);
  void add_external_ids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& external_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_external_ids();
  private:
  const std::string& _internal_external_ids(int index) const;
  std::string* _internal_add_external_ids();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesByExternalIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> external_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesByExternalIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesByExternalIdsResponse) */ {
 public:
  inline GetContextTypesByExternalIdsResponse() : GetContextTypesByExternalIdsResponse(nullptr) {}
  ~GetContextTypesByExternalIdsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesByExternalIdsResponse(const GetContextTypesByExternalIdsResponse& from);
  GetContextTypesByExternalIdsResponse(GetContextTypesByExternalIdsResponse&& from) noexcept
    : GetContextTypesByExternalIdsResponse() {
    *this = ::std::move(from);
  }

  inline GetContextTypesByExternalIdsResponse& operator=(const GetContextTypesByExternalIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesByExternalIdsResponse& operator=(GetContextTypesByExternalIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesByExternalIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesByExternalIdsResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesByExternalIdsResponse*>(
               &_GetContextTypesByExternalIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(GetContextTypesByExternalIdsResponse& a, GetContextTypesByExternalIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesByExternalIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesByExternalIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesByExternalIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesByExternalIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesByExternalIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesByExternalIdsResponse& from) {
    GetContextTypesByExternalIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesByExternalIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesByExternalIdsResponse";
  }
  protected:
  explicit GetContextTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ContextType context_types = 1;
  int context_types_size() const;
  private:
  int _internal_context_types_size() const;
  public:
  void clear_context_types();
  ::ml_metadata::ContextType* mutable_context_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
      mutable_context_types();
  private:
  const ::ml_metadata::ContextType& _internal_context_types(int index) const;
  ::ml_metadata::ContextType* _internal_add_context_types();
  public:
  const ::ml_metadata::ContextType& context_types(int index) const;
  ::ml_metadata::ContextType* add_context_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
      context_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesByExternalIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType > context_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByTypeRequest) */ {
 public:
  inline GetExecutionsByTypeRequest() : GetExecutionsByTypeRequest(nullptr) {}
  ~GetExecutionsByTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByTypeRequest(const GetExecutionsByTypeRequest& from);
  GetExecutionsByTypeRequest(GetExecutionsByTypeRequest&& from) noexcept
    : GetExecutionsByTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByTypeRequest& operator=(const GetExecutionsByTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByTypeRequest& operator=(GetExecutionsByTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByTypeRequest*>(
               &_GetExecutionsByTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(GetExecutionsByTypeRequest& a, GetExecutionsByTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByTypeRequest& from) {
    GetExecutionsByTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByTypeRequest";
  }
  protected:
  explicit GetExecutionsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 2,
    kOptionsFieldNumber = 3,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 2;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.ListOperationOptions options = 3;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByTypeResponse) */ {
 public:
  inline GetExecutionsByTypeResponse() : GetExecutionsByTypeResponse(nullptr) {}
  ~GetExecutionsByTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByTypeResponse(const GetExecutionsByTypeResponse& from);
  GetExecutionsByTypeResponse(GetExecutionsByTypeResponse&& from) noexcept
    : GetExecutionsByTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByTypeResponse& operator=(const GetExecutionsByTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByTypeResponse& operator=(GetExecutionsByTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByTypeResponse*>(
               &_GetExecutionsByTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(GetExecutionsByTypeResponse& a, GetExecutionsByTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByTypeResponse& from) {
    GetExecutionsByTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByTypeResponse";
  }
  protected:
  explicit GetExecutionsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionByTypeAndNameRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionByTypeAndNameRequest) */ {
 public:
  inline GetExecutionByTypeAndNameRequest() : GetExecutionByTypeAndNameRequest(nullptr) {}
  ~GetExecutionByTypeAndNameRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionByTypeAndNameRequest(const GetExecutionByTypeAndNameRequest& from);
  GetExecutionByTypeAndNameRequest(GetExecutionByTypeAndNameRequest&& from) noexcept
    : GetExecutionByTypeAndNameRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionByTypeAndNameRequest& operator=(const GetExecutionByTypeAndNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionByTypeAndNameRequest& operator=(GetExecutionByTypeAndNameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionByTypeAndNameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionByTypeAndNameRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionByTypeAndNameRequest*>(
               &_GetExecutionByTypeAndNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(GetExecutionByTypeAndNameRequest& a, GetExecutionByTypeAndNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionByTypeAndNameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionByTypeAndNameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionByTypeAndNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionByTypeAndNameRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionByTypeAndNameRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionByTypeAndNameRequest& from) {
    GetExecutionByTypeAndNameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionByTypeAndNameRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionByTypeAndNameRequest";
  }
  protected:
  explicit GetExecutionByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kExecutionNameFieldNumber = 2,
    kTypeVersionFieldNumber = 3,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string execution_name = 2;
  bool has_execution_name() const;
  private:
  bool _internal_has_execution_name() const;
  public:
  void clear_execution_name();
  const std::string& execution_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_execution_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_execution_name();
  PROTOBUF_NODISCARD std::string* release_execution_name();
  void set_allocated_execution_name(std::string* execution_name);
  private:
  const std::string& _internal_execution_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_execution_name(const std::string& value);
  std::string* _internal_mutable_execution_name();
  public:

  // optional string type_version = 3;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionByTypeAndNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr execution_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionByTypeAndNameResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionByTypeAndNameResponse) */ {
 public:
  inline GetExecutionByTypeAndNameResponse() : GetExecutionByTypeAndNameResponse(nullptr) {}
  ~GetExecutionByTypeAndNameResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionByTypeAndNameResponse(const GetExecutionByTypeAndNameResponse& from);
  GetExecutionByTypeAndNameResponse(GetExecutionByTypeAndNameResponse&& from) noexcept
    : GetExecutionByTypeAndNameResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionByTypeAndNameResponse& operator=(const GetExecutionByTypeAndNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionByTypeAndNameResponse& operator=(GetExecutionByTypeAndNameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionByTypeAndNameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionByTypeAndNameResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionByTypeAndNameResponse*>(
               &_GetExecutionByTypeAndNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(GetExecutionByTypeAndNameResponse& a, GetExecutionByTypeAndNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionByTypeAndNameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionByTypeAndNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionByTypeAndNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionByTypeAndNameResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionByTypeAndNameResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionByTypeAndNameResponse& from) {
    GetExecutionByTypeAndNameResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionByTypeAndNameResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionByTypeAndNameResponse";
  }
  protected:
  explicit GetExecutionByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionFieldNumber = 1,
  };
  // optional .ml_metadata.Execution execution = 1;
  bool has_execution() const;
  private:
  bool _internal_has_execution() const;
  public:
  void clear_execution();
  const ::ml_metadata::Execution& execution() const;
  PROTOBUF_NODISCARD ::ml_metadata::Execution* release_execution();
  ::ml_metadata::Execution* mutable_execution();
  void set_allocated_execution(::ml_metadata::Execution* execution);
  private:
  const ::ml_metadata::Execution& _internal_execution() const;
  ::ml_metadata::Execution* _internal_mutable_execution();
  public:
  void unsafe_arena_set_allocated_execution(
      ::ml_metadata::Execution* execution);
  ::ml_metadata::Execution* unsafe_arena_release_execution();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionByTypeAndNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Execution* execution_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByIDRequest) */ {
 public:
  inline GetExecutionsByIDRequest() : GetExecutionsByIDRequest(nullptr) {}
  ~GetExecutionsByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByIDRequest(const GetExecutionsByIDRequest& from);
  GetExecutionsByIDRequest(GetExecutionsByIDRequest&& from) noexcept
    : GetExecutionsByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByIDRequest& operator=(const GetExecutionsByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByIDRequest& operator=(GetExecutionsByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByIDRequest*>(
               &_GetExecutionsByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(GetExecutionsByIDRequest& a, GetExecutionsByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByIDRequest& from) {
    GetExecutionsByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByIDRequest";
  }
  protected:
  explicit GetExecutionsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 execution_ids = 1;
  int execution_ids_size() const;
  private:
  int _internal_execution_ids_size() const;
  public:
  void clear_execution_ids();
  private:
  int64_t _internal_execution_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_execution_ids() const;
  void _internal_add_execution_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_execution_ids();
  public:
  int64_t execution_ids(int index) const;
  void set_execution_ids(int index, int64_t value);
  void add_execution_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      execution_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_execution_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > execution_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByIDResponse) */ {
 public:
  inline GetExecutionsByIDResponse() : GetExecutionsByIDResponse(nullptr) {}
  ~GetExecutionsByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByIDResponse(const GetExecutionsByIDResponse& from);
  GetExecutionsByIDResponse(GetExecutionsByIDResponse&& from) noexcept
    : GetExecutionsByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByIDResponse& operator=(const GetExecutionsByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByIDResponse& operator=(GetExecutionsByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByIDResponse*>(
               &_GetExecutionsByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(GetExecutionsByIDResponse& a, GetExecutionsByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByIDResponse& from) {
    GetExecutionsByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByIDResponse";
  }
  protected:
  explicit GetExecutionsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypeRequest) */ {
 public:
  inline GetExecutionTypeRequest() : GetExecutionTypeRequest(nullptr) {}
  ~GetExecutionTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypeRequest(const GetExecutionTypeRequest& from);
  GetExecutionTypeRequest(GetExecutionTypeRequest&& from) noexcept
    : GetExecutionTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypeRequest& operator=(const GetExecutionTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypeRequest& operator=(GetExecutionTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypeRequest*>(
               &_GetExecutionTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(GetExecutionTypeRequest& a, GetExecutionTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypeRequest& from) {
    GetExecutionTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypeRequest";
  }
  protected:
  explicit GetExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 2;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypeResponse) */ {
 public:
  inline GetExecutionTypeResponse() : GetExecutionTypeResponse(nullptr) {}
  ~GetExecutionTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypeResponse(const GetExecutionTypeResponse& from);
  GetExecutionTypeResponse(GetExecutionTypeResponse&& from) noexcept
    : GetExecutionTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypeResponse& operator=(const GetExecutionTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypeResponse& operator=(GetExecutionTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypeResponse*>(
               &_GetExecutionTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(GetExecutionTypeResponse& a, GetExecutionTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypeResponse& from) {
    GetExecutionTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypeResponse";
  }
  protected:
  explicit GetExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTypeFieldNumber = 1,
  };
  // optional .ml_metadata.ExecutionType execution_type = 1;
  bool has_execution_type() const;
  private:
  bool _internal_has_execution_type() const;
  public:
  void clear_execution_type();
  const ::ml_metadata::ExecutionType& execution_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ExecutionType* release_execution_type();
  ::ml_metadata::ExecutionType* mutable_execution_type();
  void set_allocated_execution_type(::ml_metadata::ExecutionType* execution_type);
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_type() const;
  ::ml_metadata::ExecutionType* _internal_mutable_execution_type();
  public:
  void unsafe_arena_set_allocated_execution_type(
      ::ml_metadata::ExecutionType* execution_type);
  ::ml_metadata::ExecutionType* unsafe_arena_release_execution_type();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ExecutionType* execution_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetEventsByExecutionIDsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetEventsByExecutionIDsRequest) */ {
 public:
  inline GetEventsByExecutionIDsRequest() : GetEventsByExecutionIDsRequest(nullptr) {}
  ~GetEventsByExecutionIDsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetEventsByExecutionIDsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEventsByExecutionIDsRequest(const GetEventsByExecutionIDsRequest& from);
  GetEventsByExecutionIDsRequest(GetEventsByExecutionIDsRequest&& from) noexcept
    : GetEventsByExecutionIDsRequest() {
    *this = ::std::move(from);
  }

  inline GetEventsByExecutionIDsRequest& operator=(const GetEventsByExecutionIDsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsByExecutionIDsRequest& operator=(GetEventsByExecutionIDsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsByExecutionIDsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsByExecutionIDsRequest* internal_default_instance() {
    return reinterpret_cast<const GetEventsByExecutionIDsRequest*>(
               &_GetEventsByExecutionIDsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(GetEventsByExecutionIDsRequest& a, GetEventsByExecutionIDsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsByExecutionIDsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsByExecutionIDsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsByExecutionIDsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsByExecutionIDsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetEventsByExecutionIDsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetEventsByExecutionIDsRequest& from) {
    GetEventsByExecutionIDsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventsByExecutionIDsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetEventsByExecutionIDsRequest";
  }
  protected:
  explicit GetEventsByExecutionIDsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 execution_ids = 1;
  int execution_ids_size() const;
  private:
  int _internal_execution_ids_size() const;
  public:
  void clear_execution_ids();
  private:
  int64_t _internal_execution_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_execution_ids() const;
  void _internal_add_execution_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_execution_ids();
  public:
  int64_t execution_ids(int index) const;
  void set_execution_ids(int index, int64_t value);
  void add_execution_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      execution_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_execution_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetEventsByExecutionIDsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > execution_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetEventsByExecutionIDsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetEventsByExecutionIDsResponse) */ {
 public:
  inline GetEventsByExecutionIDsResponse() : GetEventsByExecutionIDsResponse(nullptr) {}
  ~GetEventsByExecutionIDsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetEventsByExecutionIDsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEventsByExecutionIDsResponse(const GetEventsByExecutionIDsResponse& from);
  GetEventsByExecutionIDsResponse(GetEventsByExecutionIDsResponse&& from) noexcept
    : GetEventsByExecutionIDsResponse() {
    *this = ::std::move(from);
  }

  inline GetEventsByExecutionIDsResponse& operator=(const GetEventsByExecutionIDsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsByExecutionIDsResponse& operator=(GetEventsByExecutionIDsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsByExecutionIDsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsByExecutionIDsResponse* internal_default_instance() {
    return reinterpret_cast<const GetEventsByExecutionIDsResponse*>(
               &_GetEventsByExecutionIDsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(GetEventsByExecutionIDsResponse& a, GetEventsByExecutionIDsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsByExecutionIDsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsByExecutionIDsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsByExecutionIDsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsByExecutionIDsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetEventsByExecutionIDsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetEventsByExecutionIDsResponse& from) {
    GetEventsByExecutionIDsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventsByExecutionIDsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetEventsByExecutionIDsResponse";
  }
  protected:
  explicit GetEventsByExecutionIDsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .ml_metadata.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::ml_metadata::Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
      mutable_events();
  private:
  const ::ml_metadata::Event& _internal_events(int index) const;
  ::ml_metadata::Event* _internal_add_events();
  public:
  const ::ml_metadata::Event& events(int index) const;
  ::ml_metadata::Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
      events() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetEventsByExecutionIDsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event > events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetEventsByArtifactIDsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetEventsByArtifactIDsRequest) */ {
 public:
  inline GetEventsByArtifactIDsRequest() : GetEventsByArtifactIDsRequest(nullptr) {}
  ~GetEventsByArtifactIDsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetEventsByArtifactIDsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEventsByArtifactIDsRequest(const GetEventsByArtifactIDsRequest& from);
  GetEventsByArtifactIDsRequest(GetEventsByArtifactIDsRequest&& from) noexcept
    : GetEventsByArtifactIDsRequest() {
    *this = ::std::move(from);
  }

  inline GetEventsByArtifactIDsRequest& operator=(const GetEventsByArtifactIDsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsByArtifactIDsRequest& operator=(GetEventsByArtifactIDsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsByArtifactIDsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsByArtifactIDsRequest* internal_default_instance() {
    return reinterpret_cast<const GetEventsByArtifactIDsRequest*>(
               &_GetEventsByArtifactIDsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(GetEventsByArtifactIDsRequest& a, GetEventsByArtifactIDsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsByArtifactIDsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsByArtifactIDsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsByArtifactIDsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsByArtifactIDsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetEventsByArtifactIDsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetEventsByArtifactIDsRequest& from) {
    GetEventsByArtifactIDsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventsByArtifactIDsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetEventsByArtifactIDsRequest";
  }
  protected:
  explicit GetEventsByArtifactIDsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 artifact_ids = 1;
  int artifact_ids_size() const;
  private:
  int _internal_artifact_ids_size() const;
  public:
  void clear_artifact_ids();
  private:
  int64_t _internal_artifact_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_artifact_ids() const;
  void _internal_add_artifact_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_artifact_ids();
  public:
  int64_t artifact_ids(int index) const;
  void set_artifact_ids(int index, int64_t value);
  void add_artifact_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      artifact_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_artifact_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetEventsByArtifactIDsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > artifact_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetEventsByArtifactIDsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetEventsByArtifactIDsResponse) */ {
 public:
  inline GetEventsByArtifactIDsResponse() : GetEventsByArtifactIDsResponse(nullptr) {}
  ~GetEventsByArtifactIDsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetEventsByArtifactIDsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetEventsByArtifactIDsResponse(const GetEventsByArtifactIDsResponse& from);
  GetEventsByArtifactIDsResponse(GetEventsByArtifactIDsResponse&& from) noexcept
    : GetEventsByArtifactIDsResponse() {
    *this = ::std::move(from);
  }

  inline GetEventsByArtifactIDsResponse& operator=(const GetEventsByArtifactIDsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEventsByArtifactIDsResponse& operator=(GetEventsByArtifactIDsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEventsByArtifactIDsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEventsByArtifactIDsResponse* internal_default_instance() {
    return reinterpret_cast<const GetEventsByArtifactIDsResponse*>(
               &_GetEventsByArtifactIDsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(GetEventsByArtifactIDsResponse& a, GetEventsByArtifactIDsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEventsByArtifactIDsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEventsByArtifactIDsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEventsByArtifactIDsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEventsByArtifactIDsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetEventsByArtifactIDsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetEventsByArtifactIDsResponse& from) {
    GetEventsByArtifactIDsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEventsByArtifactIDsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetEventsByArtifactIDsResponse";
  }
  protected:
  explicit GetEventsByArtifactIDsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .ml_metadata.Event events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::ml_metadata::Event* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
      mutable_events();
  private:
  const ::ml_metadata::Event& _internal_events(int index) const;
  ::ml_metadata::Event* _internal_add_events();
  public:
  const ::ml_metadata::Event& events(int index) const;
  ::ml_metadata::Event* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
      events() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetEventsByArtifactIDsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event > events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesByIDRequest) */ {
 public:
  inline GetArtifactTypesByIDRequest() : GetArtifactTypesByIDRequest(nullptr) {}
  ~GetArtifactTypesByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesByIDRequest(const GetArtifactTypesByIDRequest& from);
  GetArtifactTypesByIDRequest(GetArtifactTypesByIDRequest&& from) noexcept
    : GetArtifactTypesByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesByIDRequest& operator=(const GetArtifactTypesByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesByIDRequest& operator=(GetArtifactTypesByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesByIDRequest*>(
               &_GetArtifactTypesByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(GetArtifactTypesByIDRequest& a, GetArtifactTypesByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesByIDRequest& from) {
    GetArtifactTypesByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesByIDRequest";
  }
  protected:
  explicit GetArtifactTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 type_ids = 1;
  int type_ids_size() const;
  private:
  int _internal_type_ids_size() const;
  public:
  void clear_type_ids();
  private:
  int64_t _internal_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_type_ids() const;
  void _internal_add_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_type_ids();
  public:
  int64_t type_ids(int index) const;
  void set_type_ids(int index, int64_t value);
  void add_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_type_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > type_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactTypesByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactTypesByIDResponse) */ {
 public:
  inline GetArtifactTypesByIDResponse() : GetArtifactTypesByIDResponse(nullptr) {}
  ~GetArtifactTypesByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactTypesByIDResponse(const GetArtifactTypesByIDResponse& from);
  GetArtifactTypesByIDResponse(GetArtifactTypesByIDResponse&& from) noexcept
    : GetArtifactTypesByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactTypesByIDResponse& operator=(const GetArtifactTypesByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactTypesByIDResponse& operator=(GetArtifactTypesByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactTypesByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactTypesByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactTypesByIDResponse*>(
               &_GetArtifactTypesByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(GetArtifactTypesByIDResponse& a, GetArtifactTypesByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactTypesByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactTypesByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactTypesByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactTypesByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactTypesByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactTypesByIDResponse& from) {
    GetArtifactTypesByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactTypesByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactTypesByIDResponse";
  }
  protected:
  explicit GetArtifactTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  int artifact_types_size() const;
  private:
  int _internal_artifact_types_size() const;
  public:
  void clear_artifact_types();
  ::ml_metadata::ArtifactType* mutable_artifact_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
      mutable_artifact_types();
  private:
  const ::ml_metadata::ArtifactType& _internal_artifact_types(int index) const;
  ::ml_metadata::ArtifactType* _internal_add_artifact_types();
  public:
  const ::ml_metadata::ArtifactType& artifact_types(int index) const;
  ::ml_metadata::ArtifactType* add_artifact_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
      artifact_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactTypesByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType > artifact_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesByIDRequest) */ {
 public:
  inline GetExecutionTypesByIDRequest() : GetExecutionTypesByIDRequest(nullptr) {}
  ~GetExecutionTypesByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesByIDRequest(const GetExecutionTypesByIDRequest& from);
  GetExecutionTypesByIDRequest(GetExecutionTypesByIDRequest&& from) noexcept
    : GetExecutionTypesByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesByIDRequest& operator=(const GetExecutionTypesByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesByIDRequest& operator=(GetExecutionTypesByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesByIDRequest*>(
               &_GetExecutionTypesByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(GetExecutionTypesByIDRequest& a, GetExecutionTypesByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesByIDRequest& from) {
    GetExecutionTypesByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesByIDRequest";
  }
  protected:
  explicit GetExecutionTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 type_ids = 1;
  int type_ids_size() const;
  private:
  int _internal_type_ids_size() const;
  public:
  void clear_type_ids();
  private:
  int64_t _internal_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_type_ids() const;
  void _internal_add_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_type_ids();
  public:
  int64_t type_ids(int index) const;
  void set_type_ids(int index, int64_t value);
  void add_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_type_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > type_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionTypesByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionTypesByIDResponse) */ {
 public:
  inline GetExecutionTypesByIDResponse() : GetExecutionTypesByIDResponse(nullptr) {}
  ~GetExecutionTypesByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionTypesByIDResponse(const GetExecutionTypesByIDResponse& from);
  GetExecutionTypesByIDResponse(GetExecutionTypesByIDResponse&& from) noexcept
    : GetExecutionTypesByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionTypesByIDResponse& operator=(const GetExecutionTypesByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionTypesByIDResponse& operator=(GetExecutionTypesByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionTypesByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionTypesByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionTypesByIDResponse*>(
               &_GetExecutionTypesByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(GetExecutionTypesByIDResponse& a, GetExecutionTypesByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionTypesByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionTypesByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionTypesByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionTypesByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionTypesByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionTypesByIDResponse& from) {
    GetExecutionTypesByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionTypesByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionTypesByIDResponse";
  }
  protected:
  explicit GetExecutionTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ExecutionType execution_types = 1;
  int execution_types_size() const;
  private:
  int _internal_execution_types_size() const;
  public:
  void clear_execution_types();
  ::ml_metadata::ExecutionType* mutable_execution_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
      mutable_execution_types();
  private:
  const ::ml_metadata::ExecutionType& _internal_execution_types(int index) const;
  ::ml_metadata::ExecutionType* _internal_add_execution_types();
  public:
  const ::ml_metadata::ExecutionType& execution_types(int index) const;
  ::ml_metadata::ExecutionType* add_execution_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
      execution_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionTypesByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType > execution_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypeRequest) */ {
 public:
  inline GetContextTypeRequest() : GetContextTypeRequest(nullptr) {}
  ~GetContextTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypeRequest(const GetContextTypeRequest& from);
  GetContextTypeRequest(GetContextTypeRequest&& from) noexcept
    : GetContextTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetContextTypeRequest& operator=(const GetContextTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypeRequest& operator=(GetContextTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextTypeRequest*>(
               &_GetContextTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(GetContextTypeRequest& a, GetContextTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypeRequest& from) {
    GetContextTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypeRequest";
  }
  protected:
  explicit GetContextTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 2;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypeResponse) */ {
 public:
  inline GetContextTypeResponse() : GetContextTypeResponse(nullptr) {}
  ~GetContextTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypeResponse(const GetContextTypeResponse& from);
  GetContextTypeResponse(GetContextTypeResponse&& from) noexcept
    : GetContextTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetContextTypeResponse& operator=(const GetContextTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypeResponse& operator=(GetContextTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextTypeResponse*>(
               &_GetContextTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(GetContextTypeResponse& a, GetContextTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypeResponse& from) {
    GetContextTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypeResponse";
  }
  protected:
  explicit GetContextTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextTypeFieldNumber = 1,
  };
  // optional .ml_metadata.ContextType context_type = 1;
  bool has_context_type() const;
  private:
  bool _internal_has_context_type() const;
  public:
  void clear_context_type();
  const ::ml_metadata::ContextType& context_type() const;
  PROTOBUF_NODISCARD ::ml_metadata::ContextType* release_context_type();
  ::ml_metadata::ContextType* mutable_context_type();
  void set_allocated_context_type(::ml_metadata::ContextType* context_type);
  private:
  const ::ml_metadata::ContextType& _internal_context_type() const;
  ::ml_metadata::ContextType* _internal_mutable_context_type();
  public:
  void unsafe_arena_set_allocated_context_type(
      ::ml_metadata::ContextType* context_type);
  ::ml_metadata::ContextType* unsafe_arena_release_context_type();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ContextType* context_type_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesByIDRequest) */ {
 public:
  inline GetContextTypesByIDRequest() : GetContextTypesByIDRequest(nullptr) {}
  ~GetContextTypesByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesByIDRequest(const GetContextTypesByIDRequest& from);
  GetContextTypesByIDRequest(GetContextTypesByIDRequest&& from) noexcept
    : GetContextTypesByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetContextTypesByIDRequest& operator=(const GetContextTypesByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesByIDRequest& operator=(GetContextTypesByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesByIDRequest*>(
               &_GetContextTypesByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(GetContextTypesByIDRequest& a, GetContextTypesByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesByIDRequest& from) {
    GetContextTypesByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesByIDRequest";
  }
  protected:
  explicit GetContextTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 type_ids = 1;
  int type_ids_size() const;
  private:
  int _internal_type_ids_size() const;
  public:
  void clear_type_ids();
  private:
  int64_t _internal_type_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_type_ids() const;
  void _internal_add_type_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_type_ids();
  public:
  int64_t type_ids(int index) const;
  void set_type_ids(int index, int64_t value);
  void add_type_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      type_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_type_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > type_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextTypesByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextTypesByIDResponse) */ {
 public:
  inline GetContextTypesByIDResponse() : GetContextTypesByIDResponse(nullptr) {}
  ~GetContextTypesByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextTypesByIDResponse(const GetContextTypesByIDResponse& from);
  GetContextTypesByIDResponse(GetContextTypesByIDResponse&& from) noexcept
    : GetContextTypesByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetContextTypesByIDResponse& operator=(const GetContextTypesByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextTypesByIDResponse& operator=(GetContextTypesByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextTypesByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextTypesByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextTypesByIDResponse*>(
               &_GetContextTypesByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(GetContextTypesByIDResponse& a, GetContextTypesByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextTypesByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextTypesByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextTypesByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextTypesByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextTypesByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextTypesByIDResponse& from) {
    GetContextTypesByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextTypesByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextTypesByIDResponse";
  }
  protected:
  explicit GetContextTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextTypesFieldNumber = 1,
  };
  // repeated .ml_metadata.ContextType context_types = 1;
  int context_types_size() const;
  private:
  int _internal_context_types_size() const;
  public:
  void clear_context_types();
  ::ml_metadata::ContextType* mutable_context_types(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
      mutable_context_types();
  private:
  const ::ml_metadata::ContextType& _internal_context_types(int index) const;
  ::ml_metadata::ContextType* _internal_add_context_types();
  public:
  const ::ml_metadata::ContextType& context_types(int index) const;
  ::ml_metadata::ContextType* add_context_types();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
      context_types() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextTypesByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType > context_types_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsRequest) */ {
 public:
  inline GetContextsRequest() : GetContextsRequest(nullptr) {}
  ~GetContextsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsRequest(const GetContextsRequest& from);
  GetContextsRequest(GetContextsRequest&& from) noexcept
    : GetContextsRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsRequest& operator=(const GetContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsRequest& operator=(GetContextsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsRequest*>(
               &_GetContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(GetContextsRequest& a, GetContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsRequest& from) {
    GetContextsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsRequest";
  }
  protected:
  explicit GetContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // optional .ml_metadata.ListOperationOptions options = 1;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsResponse) */ {
 public:
  inline GetContextsResponse() : GetContextsResponse(nullptr) {}
  ~GetContextsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsResponse(const GetContextsResponse& from);
  GetContextsResponse(GetContextsResponse&& from) noexcept
    : GetContextsResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsResponse& operator=(const GetContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsResponse& operator=(GetContextsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsResponse*>(
               &_GetContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(GetContextsResponse& a, GetContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsResponse& from) {
    GetContextsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsResponse";
  }
  protected:
  explicit GetContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByTypeRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByTypeRequest) */ {
 public:
  inline GetContextsByTypeRequest() : GetContextsByTypeRequest(nullptr) {}
  ~GetContextsByTypeRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByTypeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByTypeRequest(const GetContextsByTypeRequest& from);
  GetContextsByTypeRequest(GetContextsByTypeRequest&& from) noexcept
    : GetContextsByTypeRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsByTypeRequest& operator=(const GetContextsByTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByTypeRequest& operator=(GetContextsByTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByTypeRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsByTypeRequest*>(
               &_GetContextsByTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(GetContextsByTypeRequest& a, GetContextsByTypeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByTypeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByTypeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByTypeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByTypeRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByTypeRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByTypeRequest& from) {
    GetContextsByTypeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByTypeRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByTypeRequest";
  }
  protected:
  explicit GetContextsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kTypeVersionFieldNumber = 3,
    kOptionsFieldNumber = 2,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string type_version = 3;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.ListOperationOptions options = 2;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByTypeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByTypeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByTypeResponse) */ {
 public:
  inline GetContextsByTypeResponse() : GetContextsByTypeResponse(nullptr) {}
  ~GetContextsByTypeResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByTypeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByTypeResponse(const GetContextsByTypeResponse& from);
  GetContextsByTypeResponse(GetContextsByTypeResponse&& from) noexcept
    : GetContextsByTypeResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsByTypeResponse& operator=(const GetContextsByTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByTypeResponse& operator=(GetContextsByTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByTypeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByTypeResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsByTypeResponse*>(
               &_GetContextsByTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(GetContextsByTypeResponse& a, GetContextsByTypeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByTypeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByTypeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByTypeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByTypeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByTypeResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByTypeResponse& from) {
    GetContextsByTypeResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByTypeResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByTypeResponse";
  }
  protected:
  explicit GetContextsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByTypeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextByTypeAndNameRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextByTypeAndNameRequest) */ {
 public:
  inline GetContextByTypeAndNameRequest() : GetContextByTypeAndNameRequest(nullptr) {}
  ~GetContextByTypeAndNameRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextByTypeAndNameRequest(const GetContextByTypeAndNameRequest& from);
  GetContextByTypeAndNameRequest(GetContextByTypeAndNameRequest&& from) noexcept
    : GetContextByTypeAndNameRequest() {
    *this = ::std::move(from);
  }

  inline GetContextByTypeAndNameRequest& operator=(const GetContextByTypeAndNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextByTypeAndNameRequest& operator=(GetContextByTypeAndNameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextByTypeAndNameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextByTypeAndNameRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextByTypeAndNameRequest*>(
               &_GetContextByTypeAndNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(GetContextByTypeAndNameRequest& a, GetContextByTypeAndNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextByTypeAndNameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextByTypeAndNameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextByTypeAndNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextByTypeAndNameRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextByTypeAndNameRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextByTypeAndNameRequest& from) {
    GetContextByTypeAndNameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextByTypeAndNameRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextByTypeAndNameRequest";
  }
  protected:
  explicit GetContextByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeNameFieldNumber = 1,
    kContextNameFieldNumber = 2,
    kTypeVersionFieldNumber = 3,
    kTransactionOptionsFieldNumber = 4,
  };
  // optional string type_name = 1;
  bool has_type_name() const;
  private:
  bool _internal_has_type_name() const;
  public:
  void clear_type_name();
  const std::string& type_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* type_name);
  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(const std::string& value);
  std::string* _internal_mutable_type_name();
  public:

  // optional string context_name = 2;
  bool has_context_name() const;
  private:
  bool _internal_has_context_name() const;
  public:
  void clear_context_name();
  const std::string& context_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_context_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_context_name();
  PROTOBUF_NODISCARD std::string* release_context_name();
  void set_allocated_context_name(std::string* context_name);
  private:
  const std::string& _internal_context_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_context_name(const std::string& value);
  std::string* _internal_mutable_context_name();
  public:

  // optional string type_version = 3;
  bool has_type_version() const;
  private:
  bool _internal_has_type_version() const;
  public:
  void clear_type_version();
  const std::string& type_version() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type_version(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type_version();
  PROTOBUF_NODISCARD std::string* release_type_version();
  void set_allocated_type_version(std::string* type_version);
  private:
  const std::string& _internal_type_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_version(const std::string& value);
  std::string* _internal_mutable_type_version();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextByTypeAndNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr context_name_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_version_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextByTypeAndNameResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextByTypeAndNameResponse) */ {
 public:
  inline GetContextByTypeAndNameResponse() : GetContextByTypeAndNameResponse(nullptr) {}
  ~GetContextByTypeAndNameResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextByTypeAndNameResponse(const GetContextByTypeAndNameResponse& from);
  GetContextByTypeAndNameResponse(GetContextByTypeAndNameResponse&& from) noexcept
    : GetContextByTypeAndNameResponse() {
    *this = ::std::move(from);
  }

  inline GetContextByTypeAndNameResponse& operator=(const GetContextByTypeAndNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextByTypeAndNameResponse& operator=(GetContextByTypeAndNameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextByTypeAndNameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextByTypeAndNameResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextByTypeAndNameResponse*>(
               &_GetContextByTypeAndNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(GetContextByTypeAndNameResponse& a, GetContextByTypeAndNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextByTypeAndNameResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextByTypeAndNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextByTypeAndNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextByTypeAndNameResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextByTypeAndNameResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextByTypeAndNameResponse& from) {
    GetContextByTypeAndNameResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextByTypeAndNameResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextByTypeAndNameResponse";
  }
  protected:
  explicit GetContextByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextFieldNumber = 1,
  };
  // optional .ml_metadata.Context context = 1;
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  const ::ml_metadata::Context& context() const;
  PROTOBUF_NODISCARD ::ml_metadata::Context* release_context();
  ::ml_metadata::Context* mutable_context();
  void set_allocated_context(::ml_metadata::Context* context);
  private:
  const ::ml_metadata::Context& _internal_context() const;
  ::ml_metadata::Context* _internal_mutable_context();
  public:
  void unsafe_arena_set_allocated_context(
      ::ml_metadata::Context* context);
  ::ml_metadata::Context* unsafe_arena_release_context();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextByTypeAndNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::Context* context_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByIDRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByIDRequest) */ {
 public:
  inline GetContextsByIDRequest() : GetContextsByIDRequest(nullptr) {}
  ~GetContextsByIDRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByIDRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByIDRequest(const GetContextsByIDRequest& from);
  GetContextsByIDRequest(GetContextsByIDRequest&& from) noexcept
    : GetContextsByIDRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsByIDRequest& operator=(const GetContextsByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByIDRequest& operator=(GetContextsByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsByIDRequest*>(
               &_GetContextsByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(GetContextsByIDRequest& a, GetContextsByIDRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByIDRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByIDRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByIDRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByIDRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByIDRequest& from) {
    GetContextsByIDRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByIDRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByIDRequest";
  }
  protected:
  explicit GetContextsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 context_ids = 1;
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByIDRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByIDResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByIDResponse) */ {
 public:
  inline GetContextsByIDResponse() : GetContextsByIDResponse(nullptr) {}
  ~GetContextsByIDResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByIDResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByIDResponse(const GetContextsByIDResponse& from);
  GetContextsByIDResponse(GetContextsByIDResponse&& from) noexcept
    : GetContextsByIDResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsByIDResponse& operator=(const GetContextsByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByIDResponse& operator=(GetContextsByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsByIDResponse*>(
               &_GetContextsByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(GetContextsByIDResponse& a, GetContextsByIDResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByIDResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByIDResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByIDResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByIDResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByIDResponse& from) {
    GetContextsByIDResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByIDResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByIDResponse";
  }
  protected:
  explicit GetContextsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByIDResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByArtifactRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByArtifactRequest) */ {
 public:
  inline GetContextsByArtifactRequest() : GetContextsByArtifactRequest(nullptr) {}
  ~GetContextsByArtifactRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByArtifactRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByArtifactRequest(const GetContextsByArtifactRequest& from);
  GetContextsByArtifactRequest(GetContextsByArtifactRequest&& from) noexcept
    : GetContextsByArtifactRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsByArtifactRequest& operator=(const GetContextsByArtifactRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByArtifactRequest& operator=(GetContextsByArtifactRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByArtifactRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByArtifactRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsByArtifactRequest*>(
               &_GetContextsByArtifactRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(GetContextsByArtifactRequest& a, GetContextsByArtifactRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByArtifactRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByArtifactRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByArtifactRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByArtifactRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByArtifactRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByArtifactRequest& from) {
    GetContextsByArtifactRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByArtifactRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByArtifactRequest";
  }
  protected:
  explicit GetContextsByArtifactRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 2,
    kArtifactIdFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 artifact_id = 1;
  bool has_artifact_id() const;
  private:
  bool _internal_has_artifact_id() const;
  public:
  void clear_artifact_id();
  int64_t artifact_id() const;
  void set_artifact_id(int64_t value);
  private:
  int64_t _internal_artifact_id() const;
  void _internal_set_artifact_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByArtifactRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t artifact_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByArtifactResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByArtifactResponse) */ {
 public:
  inline GetContextsByArtifactResponse() : GetContextsByArtifactResponse(nullptr) {}
  ~GetContextsByArtifactResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByArtifactResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByArtifactResponse(const GetContextsByArtifactResponse& from);
  GetContextsByArtifactResponse(GetContextsByArtifactResponse&& from) noexcept
    : GetContextsByArtifactResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsByArtifactResponse& operator=(const GetContextsByArtifactResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByArtifactResponse& operator=(GetContextsByArtifactResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByArtifactResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByArtifactResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsByArtifactResponse*>(
               &_GetContextsByArtifactResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(GetContextsByArtifactResponse& a, GetContextsByArtifactResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByArtifactResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByArtifactResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByArtifactResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByArtifactResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByArtifactResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByArtifactResponse& from) {
    GetContextsByArtifactResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByArtifactResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByArtifactResponse";
  }
  protected:
  explicit GetContextsByArtifactResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByArtifactResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByExecutionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByExecutionRequest) */ {
 public:
  inline GetContextsByExecutionRequest() : GetContextsByExecutionRequest(nullptr) {}
  ~GetContextsByExecutionRequest() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByExecutionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByExecutionRequest(const GetContextsByExecutionRequest& from);
  GetContextsByExecutionRequest(GetContextsByExecutionRequest&& from) noexcept
    : GetContextsByExecutionRequest() {
    *this = ::std::move(from);
  }

  inline GetContextsByExecutionRequest& operator=(const GetContextsByExecutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByExecutionRequest& operator=(GetContextsByExecutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByExecutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByExecutionRequest* internal_default_instance() {
    return reinterpret_cast<const GetContextsByExecutionRequest*>(
               &_GetContextsByExecutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(GetContextsByExecutionRequest& a, GetContextsByExecutionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByExecutionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByExecutionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByExecutionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByExecutionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByExecutionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByExecutionRequest& from) {
    GetContextsByExecutionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByExecutionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByExecutionRequest";
  }
  protected:
  explicit GetContextsByExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 2,
    kExecutionIdFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 execution_id = 1;
  bool has_execution_id() const;
  private:
  bool _internal_has_execution_id() const;
  public:
  void clear_execution_id();
  int64_t execution_id() const;
  void set_execution_id(int64_t value);
  private:
  int64_t _internal_execution_id() const;
  void _internal_set_execution_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByExecutionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t execution_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetContextsByExecutionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetContextsByExecutionResponse) */ {
 public:
  inline GetContextsByExecutionResponse() : GetContextsByExecutionResponse(nullptr) {}
  ~GetContextsByExecutionResponse() override;
  explicit PROTOBUF_CONSTEXPR GetContextsByExecutionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetContextsByExecutionResponse(const GetContextsByExecutionResponse& from);
  GetContextsByExecutionResponse(GetContextsByExecutionResponse&& from) noexcept
    : GetContextsByExecutionResponse() {
    *this = ::std::move(from);
  }

  inline GetContextsByExecutionResponse& operator=(const GetContextsByExecutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetContextsByExecutionResponse& operator=(GetContextsByExecutionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetContextsByExecutionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetContextsByExecutionResponse* internal_default_instance() {
    return reinterpret_cast<const GetContextsByExecutionResponse*>(
               &_GetContextsByExecutionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(GetContextsByExecutionResponse& a, GetContextsByExecutionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetContextsByExecutionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetContextsByExecutionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetContextsByExecutionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetContextsByExecutionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetContextsByExecutionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetContextsByExecutionResponse& from) {
    GetContextsByExecutionResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetContextsByExecutionResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetContextsByExecutionResponse";
  }
  protected:
  explicit GetContextsByExecutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetContextsByExecutionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetParentContextsByContextRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetParentContextsByContextRequest) */ {
 public:
  inline GetParentContextsByContextRequest() : GetParentContextsByContextRequest(nullptr) {}
  ~GetParentContextsByContextRequest() override;
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetParentContextsByContextRequest(const GetParentContextsByContextRequest& from);
  GetParentContextsByContextRequest(GetParentContextsByContextRequest&& from) noexcept
    : GetParentContextsByContextRequest() {
    *this = ::std::move(from);
  }

  inline GetParentContextsByContextRequest& operator=(const GetParentContextsByContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetParentContextsByContextRequest& operator=(GetParentContextsByContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetParentContextsByContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetParentContextsByContextRequest* internal_default_instance() {
    return reinterpret_cast<const GetParentContextsByContextRequest*>(
               &_GetParentContextsByContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(GetParentContextsByContextRequest& a, GetParentContextsByContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetParentContextsByContextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetParentContextsByContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetParentContextsByContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetParentContextsByContextRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetParentContextsByContextRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetParentContextsByContextRequest& from) {
    GetParentContextsByContextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParentContextsByContextRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetParentContextsByContextRequest";
  }
  protected:
  explicit GetParentContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 2,
    kContextIdFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 context_id = 1;
  bool has_context_id() const;
  private:
  bool _internal_has_context_id() const;
  public:
  void clear_context_id();
  int64_t context_id() const;
  void set_context_id(int64_t value);
  private:
  int64_t _internal_context_id() const;
  void _internal_set_context_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetParentContextsByContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t context_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetParentContextsByContextResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetParentContextsByContextResponse) */ {
 public:
  inline GetParentContextsByContextResponse() : GetParentContextsByContextResponse(nullptr) {}
  ~GetParentContextsByContextResponse() override;
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetParentContextsByContextResponse(const GetParentContextsByContextResponse& from);
  GetParentContextsByContextResponse(GetParentContextsByContextResponse&& from) noexcept
    : GetParentContextsByContextResponse() {
    *this = ::std::move(from);
  }

  inline GetParentContextsByContextResponse& operator=(const GetParentContextsByContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetParentContextsByContextResponse& operator=(GetParentContextsByContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetParentContextsByContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetParentContextsByContextResponse* internal_default_instance() {
    return reinterpret_cast<const GetParentContextsByContextResponse*>(
               &_GetParentContextsByContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(GetParentContextsByContextResponse& a, GetParentContextsByContextResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetParentContextsByContextResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetParentContextsByContextResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetParentContextsByContextResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetParentContextsByContextResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetParentContextsByContextResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetParentContextsByContextResponse& from) {
    GetParentContextsByContextResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParentContextsByContextResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetParentContextsByContextResponse";
  }
  protected:
  explicit GetParentContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetParentContextsByContextResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenContextsByContextRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetChildrenContextsByContextRequest) */ {
 public:
  inline GetChildrenContextsByContextRequest() : GetChildrenContextsByContextRequest(nullptr) {}
  ~GetChildrenContextsByContextRequest() override;
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChildrenContextsByContextRequest(const GetChildrenContextsByContextRequest& from);
  GetChildrenContextsByContextRequest(GetChildrenContextsByContextRequest&& from) noexcept
    : GetChildrenContextsByContextRequest() {
    *this = ::std::move(from);
  }

  inline GetChildrenContextsByContextRequest& operator=(const GetChildrenContextsByContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenContextsByContextRequest& operator=(GetChildrenContextsByContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenContextsByContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenContextsByContextRequest* internal_default_instance() {
    return reinterpret_cast<const GetChildrenContextsByContextRequest*>(
               &_GetChildrenContextsByContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(GetChildrenContextsByContextRequest& a, GetChildrenContextsByContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChildrenContextsByContextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenContextsByContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenContextsByContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetChildrenContextsByContextRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChildrenContextsByContextRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetChildrenContextsByContextRequest& from) {
    GetChildrenContextsByContextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChildrenContextsByContextRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetChildrenContextsByContextRequest";
  }
  protected:
  explicit GetChildrenContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransactionOptionsFieldNumber = 2,
    kContextIdFieldNumber = 1,
  };
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 context_id = 1;
  bool has_context_id() const;
  private:
  bool _internal_has_context_id() const;
  public:
  void clear_context_id();
  int64_t context_id() const;
  void set_context_id(int64_t value);
  private:
  int64_t _internal_context_id() const;
  void _internal_set_context_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetChildrenContextsByContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t context_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenContextsByContextResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetChildrenContextsByContextResponse) */ {
 public:
  inline GetChildrenContextsByContextResponse() : GetChildrenContextsByContextResponse(nullptr) {}
  ~GetChildrenContextsByContextResponse() override;
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChildrenContextsByContextResponse(const GetChildrenContextsByContextResponse& from);
  GetChildrenContextsByContextResponse(GetChildrenContextsByContextResponse&& from) noexcept
    : GetChildrenContextsByContextResponse() {
    *this = ::std::move(from);
  }

  inline GetChildrenContextsByContextResponse& operator=(const GetChildrenContextsByContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenContextsByContextResponse& operator=(GetChildrenContextsByContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenContextsByContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenContextsByContextResponse* internal_default_instance() {
    return reinterpret_cast<const GetChildrenContextsByContextResponse*>(
               &_GetChildrenContextsByContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(GetChildrenContextsByContextResponse& a, GetChildrenContextsByContextResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChildrenContextsByContextResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenContextsByContextResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenContextsByContextResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetChildrenContextsByContextResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChildrenContextsByContextResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetChildrenContextsByContextResponse& from) {
    GetChildrenContextsByContextResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChildrenContextsByContextResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetChildrenContextsByContextResponse";
  }
  protected:
  explicit GetChildrenContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context contexts = 1;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  ::ml_metadata::Context* mutable_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_contexts();
  private:
  const ::ml_metadata::Context& _internal_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_contexts();
  public:
  const ::ml_metadata::Context& contexts(int index) const;
  ::ml_metadata::Context* add_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetChildrenContextsByContextResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetParentContextsByContextsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetParentContextsByContextsRequest) */ {
 public:
  inline GetParentContextsByContextsRequest() : GetParentContextsByContextsRequest(nullptr) {}
  ~GetParentContextsByContextsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetParentContextsByContextsRequest(const GetParentContextsByContextsRequest& from);
  GetParentContextsByContextsRequest(GetParentContextsByContextsRequest&& from) noexcept
    : GetParentContextsByContextsRequest() {
    *this = ::std::move(from);
  }

  inline GetParentContextsByContextsRequest& operator=(const GetParentContextsByContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetParentContextsByContextsRequest& operator=(GetParentContextsByContextsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetParentContextsByContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetParentContextsByContextsRequest* internal_default_instance() {
    return reinterpret_cast<const GetParentContextsByContextsRequest*>(
               &_GetParentContextsByContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(GetParentContextsByContextsRequest& a, GetParentContextsByContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetParentContextsByContextsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetParentContextsByContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetParentContextsByContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetParentContextsByContextsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetParentContextsByContextsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetParentContextsByContextsRequest& from) {
    GetParentContextsByContextsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParentContextsByContextsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetParentContextsByContextsRequest";
  }
  protected:
  explicit GetParentContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 context_ids = 1 [packed = true];
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetParentContextsByContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    mutable std::atomic<int> _context_ids_cached_byte_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetParentContextsByContextsResponse_ParentContextsPerChild final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild) */ {
 public:
  inline GetParentContextsByContextsResponse_ParentContextsPerChild() : GetParentContextsByContextsResponse_ParentContextsPerChild(nullptr) {}
  ~GetParentContextsByContextsResponse_ParentContextsPerChild() override;
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ParentContextsPerChild(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetParentContextsByContextsResponse_ParentContextsPerChild(const GetParentContextsByContextsResponse_ParentContextsPerChild& from);
  GetParentContextsByContextsResponse_ParentContextsPerChild(GetParentContextsByContextsResponse_ParentContextsPerChild&& from) noexcept
    : GetParentContextsByContextsResponse_ParentContextsPerChild() {
    *this = ::std::move(from);
  }

  inline GetParentContextsByContextsResponse_ParentContextsPerChild& operator=(const GetParentContextsByContextsResponse_ParentContextsPerChild& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetParentContextsByContextsResponse_ParentContextsPerChild& operator=(GetParentContextsByContextsResponse_ParentContextsPerChild&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetParentContextsByContextsResponse_ParentContextsPerChild& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetParentContextsByContextsResponse_ParentContextsPerChild* internal_default_instance() {
    return reinterpret_cast<const GetParentContextsByContextsResponse_ParentContextsPerChild*>(
               &_GetParentContextsByContextsResponse_ParentContextsPerChild_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(GetParentContextsByContextsResponse_ParentContextsPerChild& a, GetParentContextsByContextsResponse_ParentContextsPerChild& b) {
    a.Swap(&b);
  }
  inline void Swap(GetParentContextsByContextsResponse_ParentContextsPerChild* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetParentContextsByContextsResponse_ParentContextsPerChild* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetParentContextsByContextsResponse_ParentContextsPerChild* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetParentContextsByContextsResponse_ParentContextsPerChild>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetParentContextsByContextsResponse_ParentContextsPerChild& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetParentContextsByContextsResponse_ParentContextsPerChild& from) {
    GetParentContextsByContextsResponse_ParentContextsPerChild::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParentContextsByContextsResponse_ParentContextsPerChild* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild";
  }
  protected:
  explicit GetParentContextsByContextsResponse_ParentContextsPerChild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParentContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context parent_contexts = 1;
  int parent_contexts_size() const;
  private:
  int _internal_parent_contexts_size() const;
  public:
  void clear_parent_contexts();
  ::ml_metadata::Context* mutable_parent_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_parent_contexts();
  private:
  const ::ml_metadata::Context& _internal_parent_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_parent_contexts();
  public:
  const ::ml_metadata::Context& parent_contexts(int index) const;
  ::ml_metadata::Context* add_parent_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      parent_contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > parent_contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetParentContextsByContextsResponse_ContextsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, 
    int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, 
    int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetParentContextsByContextsResponse_ContextsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ContextsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetParentContextsByContextsResponse_ContextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetParentContextsByContextsResponse_ContextsEntry_DoNotUse& other);
  static const GetParentContextsByContextsResponse_ContextsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetParentContextsByContextsResponse_ContextsEntry_DoNotUse*>(&_GetParentContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};

// -------------------------------------------------------------------

class GetParentContextsByContextsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetParentContextsByContextsResponse) */ {
 public:
  inline GetParentContextsByContextsResponse() : GetParentContextsByContextsResponse(nullptr) {}
  ~GetParentContextsByContextsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetParentContextsByContextsResponse(const GetParentContextsByContextsResponse& from);
  GetParentContextsByContextsResponse(GetParentContextsByContextsResponse&& from) noexcept
    : GetParentContextsByContextsResponse() {
    *this = ::std::move(from);
  }

  inline GetParentContextsByContextsResponse& operator=(const GetParentContextsByContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetParentContextsByContextsResponse& operator=(GetParentContextsByContextsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetParentContextsByContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetParentContextsByContextsResponse* internal_default_instance() {
    return reinterpret_cast<const GetParentContextsByContextsResponse*>(
               &_GetParentContextsByContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(GetParentContextsByContextsResponse& a, GetParentContextsByContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetParentContextsByContextsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetParentContextsByContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetParentContextsByContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetParentContextsByContextsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetParentContextsByContextsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetParentContextsByContextsResponse& from) {
    GetParentContextsByContextsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetParentContextsByContextsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetParentContextsByContextsResponse";
  }
  protected:
  explicit GetParentContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetParentContextsByContextsResponse_ParentContextsPerChild ParentContextsPerChild;

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 2,
  };
  // map<int64, .ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild> contexts = 2;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >&
      _internal_contexts() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >*
      _internal_mutable_contexts();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >&
      contexts() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >*
      mutable_contexts();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetParentContextsByContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        GetParentContextsByContextsResponse_ContextsEntry_DoNotUse,
        int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenContextsByContextsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetChildrenContextsByContextsRequest) */ {
 public:
  inline GetChildrenContextsByContextsRequest() : GetChildrenContextsByContextsRequest(nullptr) {}
  ~GetChildrenContextsByContextsRequest() override;
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChildrenContextsByContextsRequest(const GetChildrenContextsByContextsRequest& from);
  GetChildrenContextsByContextsRequest(GetChildrenContextsByContextsRequest&& from) noexcept
    : GetChildrenContextsByContextsRequest() {
    *this = ::std::move(from);
  }

  inline GetChildrenContextsByContextsRequest& operator=(const GetChildrenContextsByContextsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenContextsByContextsRequest& operator=(GetChildrenContextsByContextsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenContextsByContextsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenContextsByContextsRequest* internal_default_instance() {
    return reinterpret_cast<const GetChildrenContextsByContextsRequest*>(
               &_GetChildrenContextsByContextsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(GetChildrenContextsByContextsRequest& a, GetChildrenContextsByContextsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChildrenContextsByContextsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenContextsByContextsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenContextsByContextsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetChildrenContextsByContextsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChildrenContextsByContextsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetChildrenContextsByContextsRequest& from) {
    GetChildrenContextsByContextsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChildrenContextsByContextsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetChildrenContextsByContextsRequest";
  }
  protected:
  explicit GetChildrenContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // repeated int64 context_ids = 1 [packed = true];
  int context_ids_size() const;
  private:
  int _internal_context_ids_size() const;
  public:
  void clear_context_ids();
  private:
  int64_t _internal_context_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      _internal_context_ids() const;
  void _internal_add_context_ids(int64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      _internal_mutable_context_ids();
  public:
  int64_t context_ids(int index) const;
  void set_context_ids(int index, int64_t value);
  void add_context_ids(int64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
      context_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
      mutable_context_ids();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetChildrenContextsByContextsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t > context_ids_;
    mutable std::atomic<int> _context_ids_cached_byte_size_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenContextsByContextsResponse_ChildrenContextsPerParent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent) */ {
 public:
  inline GetChildrenContextsByContextsResponse_ChildrenContextsPerParent() : GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(nullptr) {}
  ~GetChildrenContextsByContextsResponse_ChildrenContextsPerParent() override;
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from);
  GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent&& from) noexcept
    : GetChildrenContextsByContextsResponse_ChildrenContextsPerParent() {
    *this = ::std::move(from);
  }

  inline GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& operator=(const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& operator=(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* internal_default_instance() {
    return reinterpret_cast<const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent*>(
               &_GetChildrenContextsByContextsResponse_ChildrenContextsPerParent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& a, GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetChildrenContextsByContextsResponse_ChildrenContextsPerParent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from) {
    GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent";
  }
  protected:
  explicit GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildrenContextsFieldNumber = 1,
  };
  // repeated .ml_metadata.Context children_contexts = 1;
  int children_contexts_size() const;
  private:
  int _internal_children_contexts_size() const;
  public:
  void clear_children_contexts();
  ::ml_metadata::Context* mutable_children_contexts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
      mutable_children_contexts();
  private:
  const ::ml_metadata::Context& _internal_children_contexts(int index) const;
  ::ml_metadata::Context* _internal_add_children_contexts();
  public:
  const ::ml_metadata::Context& children_contexts(int index) const;
  ::ml_metadata::Context* add_children_contexts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
      children_contexts() const;

  // @@protoc_insertion_point(class_scope:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context > children_contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, 
    int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, 
    int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse& other);
  static const GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse*>(&_GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};

// -------------------------------------------------------------------

class GetChildrenContextsByContextsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetChildrenContextsByContextsResponse) */ {
 public:
  inline GetChildrenContextsByContextsResponse() : GetChildrenContextsByContextsResponse(nullptr) {}
  ~GetChildrenContextsByContextsResponse() override;
  explicit PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetChildrenContextsByContextsResponse(const GetChildrenContextsByContextsResponse& from);
  GetChildrenContextsByContextsResponse(GetChildrenContextsByContextsResponse&& from) noexcept
    : GetChildrenContextsByContextsResponse() {
    *this = ::std::move(from);
  }

  inline GetChildrenContextsByContextsResponse& operator=(const GetChildrenContextsByContextsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChildrenContextsByContextsResponse& operator=(GetChildrenContextsByContextsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChildrenContextsByContextsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChildrenContextsByContextsResponse* internal_default_instance() {
    return reinterpret_cast<const GetChildrenContextsByContextsResponse*>(
               &_GetChildrenContextsByContextsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(GetChildrenContextsByContextsResponse& a, GetChildrenContextsByContextsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetChildrenContextsByContextsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChildrenContextsByContextsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChildrenContextsByContextsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetChildrenContextsByContextsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetChildrenContextsByContextsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetChildrenContextsByContextsResponse& from) {
    GetChildrenContextsByContextsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetChildrenContextsByContextsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetChildrenContextsByContextsResponse";
  }
  protected:
  explicit GetChildrenContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GetChildrenContextsByContextsResponse_ChildrenContextsPerParent ChildrenContextsPerParent;

  // accessors -------------------------------------------------------

  enum : int {
    kContextsFieldNumber = 2,
  };
  // map<int64, .ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent> contexts = 2;
  int contexts_size() const;
  private:
  int _internal_contexts_size() const;
  public:
  void clear_contexts();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >&
      _internal_contexts() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >*
      _internal_mutable_contexts();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >&
      contexts() const;
  ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >*
      mutable_contexts();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetChildrenContextsByContextsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse,
        int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> contexts_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByContextRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByContextRequest) */ {
 public:
  inline GetArtifactsByContextRequest() : GetArtifactsByContextRequest(nullptr) {}
  ~GetArtifactsByContextRequest() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByContextRequest(const GetArtifactsByContextRequest& from);
  GetArtifactsByContextRequest(GetArtifactsByContextRequest&& from) noexcept
    : GetArtifactsByContextRequest() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByContextRequest& operator=(const GetArtifactsByContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByContextRequest& operator=(GetArtifactsByContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByContextRequest* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByContextRequest*>(
               &_GetArtifactsByContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(GetArtifactsByContextRequest& a, GetArtifactsByContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByContextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByContextRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByContextRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByContextRequest& from) {
    GetArtifactsByContextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByContextRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByContextRequest";
  }
  protected:
  explicit GetArtifactsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
    kContextIdFieldNumber = 1,
  };
  // optional .ml_metadata.ListOperationOptions options = 2;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 context_id = 1;
  bool has_context_id() const;
  private:
  bool _internal_has_context_id() const;
  public:
  void clear_context_id();
  int64_t context_id() const;
  void set_context_id(int64_t value);
  private:
  int64_t _internal_context_id() const;
  void _internal_set_context_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t context_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetArtifactsByContextResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetArtifactsByContextResponse) */ {
 public:
  inline GetArtifactsByContextResponse() : GetArtifactsByContextResponse(nullptr) {}
  ~GetArtifactsByContextResponse() override;
  explicit PROTOBUF_CONSTEXPR GetArtifactsByContextResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetArtifactsByContextResponse(const GetArtifactsByContextResponse& from);
  GetArtifactsByContextResponse(GetArtifactsByContextResponse&& from) noexcept
    : GetArtifactsByContextResponse() {
    *this = ::std::move(from);
  }

  inline GetArtifactsByContextResponse& operator=(const GetArtifactsByContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetArtifactsByContextResponse& operator=(GetArtifactsByContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetArtifactsByContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetArtifactsByContextResponse* internal_default_instance() {
    return reinterpret_cast<const GetArtifactsByContextResponse*>(
               &_GetArtifactsByContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(GetArtifactsByContextResponse& a, GetArtifactsByContextResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetArtifactsByContextResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetArtifactsByContextResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetArtifactsByContextResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetArtifactsByContextResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetArtifactsByContextResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetArtifactsByContextResponse& from) {
    GetArtifactsByContextResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetArtifactsByContextResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetArtifactsByContextResponse";
  }
  protected:
  explicit GetArtifactsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArtifactsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .ml_metadata.Artifact artifacts = 1;
  int artifacts_size() const;
  private:
  int _internal_artifacts_size() const;
  public:
  void clear_artifacts();
  ::ml_metadata::Artifact* mutable_artifacts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
      mutable_artifacts();
  private:
  const ::ml_metadata::Artifact& _internal_artifacts(int index) const;
  ::ml_metadata::Artifact* _internal_add_artifacts();
  public:
  const ::ml_metadata::Artifact& artifacts(int index) const;
  ::ml_metadata::Artifact* add_artifacts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
      artifacts() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetArtifactsByContextResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact > artifacts_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByContextRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByContextRequest) */ {
 public:
  inline GetExecutionsByContextRequest() : GetExecutionsByContextRequest(nullptr) {}
  ~GetExecutionsByContextRequest() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByContextRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByContextRequest(const GetExecutionsByContextRequest& from);
  GetExecutionsByContextRequest(GetExecutionsByContextRequest&& from) noexcept
    : GetExecutionsByContextRequest() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByContextRequest& operator=(const GetExecutionsByContextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByContextRequest& operator=(GetExecutionsByContextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByContextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByContextRequest* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByContextRequest*>(
               &_GetExecutionsByContextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(GetExecutionsByContextRequest& a, GetExecutionsByContextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByContextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByContextRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByContextRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByContextRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByContextRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByContextRequest& from) {
    GetExecutionsByContextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByContextRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByContextRequest";
  }
  protected:
  explicit GetExecutionsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
    kContextIdFieldNumber = 1,
  };
  // optional .ml_metadata.ListOperationOptions options = 2;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::ListOperationOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::ListOperationOptions* release_options();
  ::ml_metadata::ListOperationOptions* mutable_options();
  void set_allocated_options(::ml_metadata::ListOperationOptions* options);
  private:
  const ::ml_metadata::ListOperationOptions& _internal_options() const;
  ::ml_metadata::ListOperationOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::ListOperationOptions* options);
  ::ml_metadata::ListOperationOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional int64 context_id = 1;
  bool has_context_id() const;
  private:
  bool _internal_has_context_id() const;
  public:
  void clear_context_id();
  int64_t context_id() const;
  void set_context_id(int64_t value);
  private:
  int64_t _internal_context_id() const;
  void _internal_set_context_id(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByContextRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::ListOperationOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    int64_t context_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetExecutionsByContextResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetExecutionsByContextResponse) */ {
 public:
  inline GetExecutionsByContextResponse() : GetExecutionsByContextResponse(nullptr) {}
  ~GetExecutionsByContextResponse() override;
  explicit PROTOBUF_CONSTEXPR GetExecutionsByContextResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetExecutionsByContextResponse(const GetExecutionsByContextResponse& from);
  GetExecutionsByContextResponse(GetExecutionsByContextResponse&& from) noexcept
    : GetExecutionsByContextResponse() {
    *this = ::std::move(from);
  }

  inline GetExecutionsByContextResponse& operator=(const GetExecutionsByContextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetExecutionsByContextResponse& operator=(GetExecutionsByContextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetExecutionsByContextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetExecutionsByContextResponse* internal_default_instance() {
    return reinterpret_cast<const GetExecutionsByContextResponse*>(
               &_GetExecutionsByContextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(GetExecutionsByContextResponse& a, GetExecutionsByContextResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetExecutionsByContextResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetExecutionsByContextResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetExecutionsByContextResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetExecutionsByContextResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetExecutionsByContextResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetExecutionsByContextResponse& from) {
    GetExecutionsByContextResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetExecutionsByContextResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetExecutionsByContextResponse";
  }
  protected:
  explicit GetExecutionsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
    kTransactionOptionsFieldNumber = 3,
  };
  // repeated .ml_metadata.Execution executions = 1;
  int executions_size() const;
  private:
  int _internal_executions_size() const;
  public:
  void clear_executions();
  ::ml_metadata::Execution* mutable_executions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
      mutable_executions();
  private:
  const ::ml_metadata::Execution& _internal_executions(int index) const;
  ::ml_metadata::Execution* _internal_add_executions();
  public:
  const ::ml_metadata::Execution& executions(int index) const;
  ::ml_metadata::Execution* add_executions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
      executions() const;

  // optional string next_page_token = 2;
  bool has_next_page_token() const;
  private:
  bool _internal_has_next_page_token() const;
  public:
  void clear_next_page_token();
  const std::string& next_page_token() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_next_page_token(ArgT0&& arg0, ArgT... args);
  std::string* mutable_next_page_token();
  PROTOBUF_NODISCARD std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetExecutionsByContextResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution > executions_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLineageGraphRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetLineageGraphRequest) */ {
 public:
  inline GetLineageGraphRequest() : GetLineageGraphRequest(nullptr) {}
  ~GetLineageGraphRequest() override;
  explicit PROTOBUF_CONSTEXPR GetLineageGraphRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLineageGraphRequest(const GetLineageGraphRequest& from);
  GetLineageGraphRequest(GetLineageGraphRequest&& from) noexcept
    : GetLineageGraphRequest() {
    *this = ::std::move(from);
  }

  inline GetLineageGraphRequest& operator=(const GetLineageGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLineageGraphRequest& operator=(GetLineageGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLineageGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLineageGraphRequest* internal_default_instance() {
    return reinterpret_cast<const GetLineageGraphRequest*>(
               &_GetLineageGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(GetLineageGraphRequest& a, GetLineageGraphRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLineageGraphRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLineageGraphRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLineageGraphRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLineageGraphRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLineageGraphRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetLineageGraphRequest& from) {
    GetLineageGraphRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLineageGraphRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetLineageGraphRequest";
  }
  protected:
  explicit GetLineageGraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
  };
  // optional .ml_metadata.LineageGraphQueryOptions options = 1;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::ml_metadata::LineageGraphQueryOptions& options() const;
  PROTOBUF_NODISCARD ::ml_metadata::LineageGraphQueryOptions* release_options();
  ::ml_metadata::LineageGraphQueryOptions* mutable_options();
  void set_allocated_options(::ml_metadata::LineageGraphQueryOptions* options);
  private:
  const ::ml_metadata::LineageGraphQueryOptions& _internal_options() const;
  ::ml_metadata::LineageGraphQueryOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::ml_metadata::LineageGraphQueryOptions* options);
  ::ml_metadata::LineageGraphQueryOptions* unsafe_arena_release_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetLineageGraphRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::LineageGraphQueryOptions* options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLineageGraphResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetLineageGraphResponse) */ {
 public:
  inline GetLineageGraphResponse() : GetLineageGraphResponse(nullptr) {}
  ~GetLineageGraphResponse() override;
  explicit PROTOBUF_CONSTEXPR GetLineageGraphResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLineageGraphResponse(const GetLineageGraphResponse& from);
  GetLineageGraphResponse(GetLineageGraphResponse&& from) noexcept
    : GetLineageGraphResponse() {
    *this = ::std::move(from);
  }

  inline GetLineageGraphResponse& operator=(const GetLineageGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLineageGraphResponse& operator=(GetLineageGraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLineageGraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLineageGraphResponse* internal_default_instance() {
    return reinterpret_cast<const GetLineageGraphResponse*>(
               &_GetLineageGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(GetLineageGraphResponse& a, GetLineageGraphResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLineageGraphResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLineageGraphResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLineageGraphResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLineageGraphResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLineageGraphResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetLineageGraphResponse& from) {
    GetLineageGraphResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLineageGraphResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetLineageGraphResponse";
  }
  protected:
  explicit GetLineageGraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubgraphFieldNumber = 1,
  };
  // optional .ml_metadata.LineageGraph subgraph = 1;
  bool has_subgraph() const;
  private:
  bool _internal_has_subgraph() const;
  public:
  void clear_subgraph();
  const ::ml_metadata::LineageGraph& subgraph() const;
  PROTOBUF_NODISCARD ::ml_metadata::LineageGraph* release_subgraph();
  ::ml_metadata::LineageGraph* mutable_subgraph();
  void set_allocated_subgraph(::ml_metadata::LineageGraph* subgraph);
  private:
  const ::ml_metadata::LineageGraph& _internal_subgraph() const;
  ::ml_metadata::LineageGraph* _internal_mutable_subgraph();
  public:
  void unsafe_arena_set_allocated_subgraph(
      ::ml_metadata::LineageGraph* subgraph);
  ::ml_metadata::LineageGraph* unsafe_arena_release_subgraph();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetLineageGraphResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::LineageGraph* subgraph_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLineageSubgraphRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetLineageSubgraphRequest) */ {
 public:
  inline GetLineageSubgraphRequest() : GetLineageSubgraphRequest(nullptr) {}
  ~GetLineageSubgraphRequest() override;
  explicit PROTOBUF_CONSTEXPR GetLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLineageSubgraphRequest(const GetLineageSubgraphRequest& from);
  GetLineageSubgraphRequest(GetLineageSubgraphRequest&& from) noexcept
    : GetLineageSubgraphRequest() {
    *this = ::std::move(from);
  }

  inline GetLineageSubgraphRequest& operator=(const GetLineageSubgraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLineageSubgraphRequest& operator=(GetLineageSubgraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLineageSubgraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLineageSubgraphRequest* internal_default_instance() {
    return reinterpret_cast<const GetLineageSubgraphRequest*>(
               &_GetLineageSubgraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(GetLineageSubgraphRequest& a, GetLineageSubgraphRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLineageSubgraphRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLineageSubgraphRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLineageSubgraphRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLineageSubgraphRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLineageSubgraphRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetLineageSubgraphRequest& from) {
    GetLineageSubgraphRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLineageSubgraphRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetLineageSubgraphRequest";
  }
  protected:
  explicit GetLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineageSubgraphQueryOptionsFieldNumber = 1,
    kTransactionOptionsFieldNumber = 2,
    kReadMaskFieldNumber = 3,
  };
  // optional .ml_metadata.LineageSubgraphQueryOptions lineage_subgraph_query_options = 1;
  bool has_lineage_subgraph_query_options() const;
  private:
  bool _internal_has_lineage_subgraph_query_options() const;
  public:
  void clear_lineage_subgraph_query_options();
  const ::ml_metadata::LineageSubgraphQueryOptions& lineage_subgraph_query_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::LineageSubgraphQueryOptions* release_lineage_subgraph_query_options();
  ::ml_metadata::LineageSubgraphQueryOptions* mutable_lineage_subgraph_query_options();
  void set_allocated_lineage_subgraph_query_options(::ml_metadata::LineageSubgraphQueryOptions* lineage_subgraph_query_options);
  private:
  const ::ml_metadata::LineageSubgraphQueryOptions& _internal_lineage_subgraph_query_options() const;
  ::ml_metadata::LineageSubgraphQueryOptions* _internal_mutable_lineage_subgraph_query_options();
  public:
  void unsafe_arena_set_allocated_lineage_subgraph_query_options(
      ::ml_metadata::LineageSubgraphQueryOptions* lineage_subgraph_query_options);
  ::ml_metadata::LineageSubgraphQueryOptions* unsafe_arena_release_lineage_subgraph_query_options();

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  bool has_transaction_options() const;
  private:
  bool _internal_has_transaction_options() const;
  public:
  void clear_transaction_options();
  const ::ml_metadata::TransactionOptions& transaction_options() const;
  PROTOBUF_NODISCARD ::ml_metadata::TransactionOptions* release_transaction_options();
  ::ml_metadata::TransactionOptions* mutable_transaction_options();
  void set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options);
  private:
  const ::ml_metadata::TransactionOptions& _internal_transaction_options() const;
  ::ml_metadata::TransactionOptions* _internal_mutable_transaction_options();
  public:
  void unsafe_arena_set_allocated_transaction_options(
      ::ml_metadata::TransactionOptions* transaction_options);
  ::ml_metadata::TransactionOptions* unsafe_arena_release_transaction_options();

  // optional .google.protobuf.FieldMask read_mask = 3;
  bool has_read_mask() const;
  private:
  bool _internal_has_read_mask() const;
  public:
  void clear_read_mask();
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& read_mask() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::FieldMask* release_read_mask();
  ::PROTOBUF_NAMESPACE_ID::FieldMask* mutable_read_mask();
  void set_allocated_read_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* read_mask);
  private:
  const ::PROTOBUF_NAMESPACE_ID::FieldMask& _internal_read_mask() const;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _internal_mutable_read_mask();
  public:
  void unsafe_arena_set_allocated_read_mask(
      ::PROTOBUF_NAMESPACE_ID::FieldMask* read_mask);
  ::PROTOBUF_NAMESPACE_ID::FieldMask* unsafe_arena_release_read_mask();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetLineageSubgraphRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::LineageSubgraphQueryOptions* lineage_subgraph_query_options_;
    ::ml_metadata::TransactionOptions* transaction_options_;
    ::PROTOBUF_NAMESPACE_ID::FieldMask* read_mask_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLineageSubgraphResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ml_metadata.GetLineageSubgraphResponse) */ {
 public:
  inline GetLineageSubgraphResponse() : GetLineageSubgraphResponse(nullptr) {}
  ~GetLineageSubgraphResponse() override;
  explicit PROTOBUF_CONSTEXPR GetLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetLineageSubgraphResponse(const GetLineageSubgraphResponse& from);
  GetLineageSubgraphResponse(GetLineageSubgraphResponse&& from) noexcept
    : GetLineageSubgraphResponse() {
    *this = ::std::move(from);
  }

  inline GetLineageSubgraphResponse& operator=(const GetLineageSubgraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLineageSubgraphResponse& operator=(GetLineageSubgraphResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLineageSubgraphResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLineageSubgraphResponse* internal_default_instance() {
    return reinterpret_cast<const GetLineageSubgraphResponse*>(
               &_GetLineageSubgraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(GetLineageSubgraphResponse& a, GetLineageSubgraphResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetLineageSubgraphResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLineageSubgraphResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLineageSubgraphResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetLineageSubgraphResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetLineageSubgraphResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GetLineageSubgraphResponse& from) {
    GetLineageSubgraphResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLineageSubgraphResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ml_metadata.GetLineageSubgraphResponse";
  }
  protected:
  explicit GetLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLineageSubgraphFieldNumber = 1,
  };
  // optional .ml_metadata.LineageGraph lineage_subgraph = 1;
  bool has_lineage_subgraph() const;
  private:
  bool _internal_has_lineage_subgraph() const;
  public:
  void clear_lineage_subgraph();
  const ::ml_metadata::LineageGraph& lineage_subgraph() const;
  PROTOBUF_NODISCARD ::ml_metadata::LineageGraph* release_lineage_subgraph();
  ::ml_metadata::LineageGraph* mutable_lineage_subgraph();
  void set_allocated_lineage_subgraph(::ml_metadata::LineageGraph* lineage_subgraph);
  private:
  const ::ml_metadata::LineageGraph& _internal_lineage_subgraph() const;
  ::ml_metadata::LineageGraph* _internal_mutable_lineage_subgraph();
  public:
  void unsafe_arena_set_allocated_lineage_subgraph(
      ::ml_metadata::LineageGraph* lineage_subgraph);
  ::ml_metadata::LineageGraph* unsafe_arena_release_lineage_subgraph();

  // @@protoc_insertion_point(class_scope:ml_metadata.GetLineageSubgraphResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::ml_metadata::LineageGraph* lineage_subgraph_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArtifactAndType

// optional .ml_metadata.Artifact artifact = 1;
inline bool ArtifactAndType::_internal_has_artifact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.artifact_ != nullptr);
  return value;
}
inline bool ArtifactAndType::has_artifact() const {
  return _internal_has_artifact();
}
inline const ::ml_metadata::Artifact& ArtifactAndType::_internal_artifact() const {
  const ::ml_metadata::Artifact* p = _impl_.artifact_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Artifact&>(
      ::ml_metadata::_Artifact_default_instance_);
}
inline const ::ml_metadata::Artifact& ArtifactAndType::artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactAndType.artifact)
  return _internal_artifact();
}
inline void ArtifactAndType::unsafe_arena_set_allocated_artifact(
    ::ml_metadata::Artifact* artifact) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  _impl_.artifact_ = artifact;
  if (artifact) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.ArtifactAndType.artifact)
}
inline ::ml_metadata::Artifact* ArtifactAndType::release_artifact() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Artifact* ArtifactAndType::unsafe_arena_release_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.ArtifactAndType.artifact)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
  return temp;
}
inline ::ml_metadata::Artifact* ArtifactAndType::_internal_mutable_artifact() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Artifact>(GetArenaForAllocation());
    _impl_.artifact_ = p;
  }
  return _impl_.artifact_;
}
inline ::ml_metadata::Artifact* ArtifactAndType::mutable_artifact() {
  ::ml_metadata::Artifact* _msg = _internal_mutable_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactAndType.artifact)
  return _msg;
}
inline void ArtifactAndType::set_allocated_artifact(::ml_metadata::Artifact* artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  if (artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(artifact));
    if (message_arena != submessage_arena) {
      artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.artifact_ = artifact;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.ArtifactAndType.artifact)
}

// optional .ml_metadata.ArtifactType type = 2;
inline bool ArtifactAndType::_internal_has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.type_ != nullptr);
  return value;
}
inline bool ArtifactAndType::has_type() const {
  return _internal_has_type();
}
inline const ::ml_metadata::ArtifactType& ArtifactAndType::_internal_type() const {
  const ::ml_metadata::ArtifactType* p = _impl_.type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ArtifactType&>(
      ::ml_metadata::_ArtifactType_default_instance_);
}
inline const ::ml_metadata::ArtifactType& ArtifactAndType::type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactAndType.type)
  return _internal_type();
}
inline void ArtifactAndType::unsafe_arena_set_allocated_type(
    ::ml_metadata::ArtifactType* type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.type_);
  }
  _impl_.type_ = type;
  if (type) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.ArtifactAndType.type)
}
inline ::ml_metadata::ArtifactType* ArtifactAndType::release_type() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::ArtifactType* temp = _impl_.type_;
  _impl_.type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ArtifactType* ArtifactAndType::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.ArtifactAndType.type)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::ArtifactType* temp = _impl_.type_;
  _impl_.type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ArtifactType* ArtifactAndType::_internal_mutable_type() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ArtifactType>(GetArenaForAllocation());
    _impl_.type_ = p;
  }
  return _impl_.type_;
}
inline ::ml_metadata::ArtifactType* ArtifactAndType::mutable_type() {
  ::ml_metadata::ArtifactType* _msg = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactAndType.type)
  return _msg;
}
inline void ArtifactAndType::set_allocated_type(::ml_metadata::ArtifactType* type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.type_);
  }
  if (type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(type));
    if (message_arena != submessage_arena) {
      type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_ = type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.ArtifactAndType.type)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ArtifactStructMap

// map<string, .ml_metadata.ArtifactStruct> properties = 1;
inline int ArtifactStructMap::_internal_properties_size() const {
  return _impl_.properties_.size();
}
inline int ArtifactStructMap::properties_size() const {
  return _internal_properties_size();
}
inline void ArtifactStructMap::clear_properties() {
  _impl_.properties_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >&
ArtifactStructMap::_internal_properties() const {
  return _impl_.properties_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >&
ArtifactStructMap::properties() const {
  // @@protoc_insertion_point(field_map:ml_metadata.ArtifactStructMap.properties)
  return _internal_properties();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >*
ArtifactStructMap::_internal_mutable_properties() {
  return _impl_.properties_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >*
ArtifactStructMap::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_map:ml_metadata.ArtifactStructMap.properties)
  return _internal_mutable_properties();
}

// -------------------------------------------------------------------

// ArtifactStructList

// repeated .ml_metadata.ArtifactStruct elements = 1;
inline int ArtifactStructList::_internal_elements_size() const {
  return _impl_.elements_.size();
}
inline int ArtifactStructList::elements_size() const {
  return _internal_elements_size();
}
inline void ArtifactStructList::clear_elements() {
  _impl_.elements_.Clear();
}
inline ::ml_metadata::ArtifactStruct* ArtifactStructList::mutable_elements(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactStructList.elements)
  return _impl_.elements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactStruct >*
ArtifactStructList::mutable_elements() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.ArtifactStructList.elements)
  return &_impl_.elements_;
}
inline const ::ml_metadata::ArtifactStruct& ArtifactStructList::_internal_elements(int index) const {
  return _impl_.elements_.Get(index);
}
inline const ::ml_metadata::ArtifactStruct& ArtifactStructList::elements(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactStructList.elements)
  return _internal_elements(index);
}
inline ::ml_metadata::ArtifactStruct* ArtifactStructList::_internal_add_elements() {
  return _impl_.elements_.Add();
}
inline ::ml_metadata::ArtifactStruct* ArtifactStructList::add_elements() {
  ::ml_metadata::ArtifactStruct* _add = _internal_add_elements();
  // @@protoc_insertion_point(field_add:ml_metadata.ArtifactStructList.elements)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactStruct >&
ArtifactStructList::elements() const {
  // @@protoc_insertion_point(field_list:ml_metadata.ArtifactStructList.elements)
  return _impl_.elements_;
}

// -------------------------------------------------------------------

// ArtifactStruct

// .ml_metadata.ArtifactAndType artifact = 1;
inline bool ArtifactStruct::_internal_has_artifact() const {
  return value_case() == kArtifact;
}
inline bool ArtifactStruct::has_artifact() const {
  return _internal_has_artifact();
}
inline void ArtifactStruct::set_has_artifact() {
  _impl_._oneof_case_[0] = kArtifact;
}
inline void ArtifactStruct::clear_artifact() {
  if (_internal_has_artifact()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.value_.artifact_;
    }
    clear_has_value();
  }
}
inline ::ml_metadata::ArtifactAndType* ArtifactStruct::release_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.ArtifactStruct.artifact)
  if (_internal_has_artifact()) {
    clear_has_value();
    ::ml_metadata::ArtifactAndType* temp = _impl_.value_.artifact_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.artifact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ml_metadata::ArtifactAndType& ArtifactStruct::_internal_artifact() const {
  return _internal_has_artifact()
      ? *_impl_.value_.artifact_
      : reinterpret_cast< ::ml_metadata::ArtifactAndType&>(::ml_metadata::_ArtifactAndType_default_instance_);
}
inline const ::ml_metadata::ArtifactAndType& ArtifactStruct::artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactStruct.artifact)
  return _internal_artifact();
}
inline ::ml_metadata::ArtifactAndType* ArtifactStruct::unsafe_arena_release_artifact() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ml_metadata.ArtifactStruct.artifact)
  if (_internal_has_artifact()) {
    clear_has_value();
    ::ml_metadata::ArtifactAndType* temp = _impl_.value_.artifact_;
    _impl_.value_.artifact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ArtifactStruct::unsafe_arena_set_allocated_artifact(::ml_metadata::ArtifactAndType* artifact) {
  clear_value();
  if (artifact) {
    set_has_artifact();
    _impl_.value_.artifact_ = artifact;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.ArtifactStruct.artifact)
}
inline ::ml_metadata::ArtifactAndType* ArtifactStruct::_internal_mutable_artifact() {
  if (!_internal_has_artifact()) {
    clear_value();
    set_has_artifact();
    _impl_.value_.artifact_ = CreateMaybeMessage< ::ml_metadata::ArtifactAndType >(GetArenaForAllocation());
  }
  return _impl_.value_.artifact_;
}
inline ::ml_metadata::ArtifactAndType* ArtifactStruct::mutable_artifact() {
  ::ml_metadata::ArtifactAndType* _msg = _internal_mutable_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactStruct.artifact)
  return _msg;
}

// .ml_metadata.ArtifactStructMap map = 2;
inline bool ArtifactStruct::_internal_has_map() const {
  return value_case() == kMap;
}
inline bool ArtifactStruct::has_map() const {
  return _internal_has_map();
}
inline void ArtifactStruct::set_has_map() {
  _impl_._oneof_case_[0] = kMap;
}
inline void ArtifactStruct::clear_map() {
  if (_internal_has_map()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.value_.map_;
    }
    clear_has_value();
  }
}
inline ::ml_metadata::ArtifactStructMap* ArtifactStruct::release_map() {
  // @@protoc_insertion_point(field_release:ml_metadata.ArtifactStruct.map)
  if (_internal_has_map()) {
    clear_has_value();
    ::ml_metadata::ArtifactStructMap* temp = _impl_.value_.map_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.map_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ml_metadata::ArtifactStructMap& ArtifactStruct::_internal_map() const {
  return _internal_has_map()
      ? *_impl_.value_.map_
      : reinterpret_cast< ::ml_metadata::ArtifactStructMap&>(::ml_metadata::_ArtifactStructMap_default_instance_);
}
inline const ::ml_metadata::ArtifactStructMap& ArtifactStruct::map() const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactStruct.map)
  return _internal_map();
}
inline ::ml_metadata::ArtifactStructMap* ArtifactStruct::unsafe_arena_release_map() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ml_metadata.ArtifactStruct.map)
  if (_internal_has_map()) {
    clear_has_value();
    ::ml_metadata::ArtifactStructMap* temp = _impl_.value_.map_;
    _impl_.value_.map_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ArtifactStruct::unsafe_arena_set_allocated_map(::ml_metadata::ArtifactStructMap* map) {
  clear_value();
  if (map) {
    set_has_map();
    _impl_.value_.map_ = map;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.ArtifactStruct.map)
}
inline ::ml_metadata::ArtifactStructMap* ArtifactStruct::_internal_mutable_map() {
  if (!_internal_has_map()) {
    clear_value();
    set_has_map();
    _impl_.value_.map_ = CreateMaybeMessage< ::ml_metadata::ArtifactStructMap >(GetArenaForAllocation());
  }
  return _impl_.value_.map_;
}
inline ::ml_metadata::ArtifactStructMap* ArtifactStruct::mutable_map() {
  ::ml_metadata::ArtifactStructMap* _msg = _internal_mutable_map();
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactStruct.map)
  return _msg;
}

// .ml_metadata.ArtifactStructList list = 3;
inline bool ArtifactStruct::_internal_has_list() const {
  return value_case() == kList;
}
inline bool ArtifactStruct::has_list() const {
  return _internal_has_list();
}
inline void ArtifactStruct::set_has_list() {
  _impl_._oneof_case_[0] = kList;
}
inline void ArtifactStruct::clear_list() {
  if (_internal_has_list()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.value_.list_;
    }
    clear_has_value();
  }
}
inline ::ml_metadata::ArtifactStructList* ArtifactStruct::release_list() {
  // @@protoc_insertion_point(field_release:ml_metadata.ArtifactStruct.list)
  if (_internal_has_list()) {
    clear_has_value();
    ::ml_metadata::ArtifactStructList* temp = _impl_.value_.list_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ml_metadata::ArtifactStructList& ArtifactStruct::_internal_list() const {
  return _internal_has_list()
      ? *_impl_.value_.list_
      : reinterpret_cast< ::ml_metadata::ArtifactStructList&>(::ml_metadata::_ArtifactStructList_default_instance_);
}
inline const ::ml_metadata::ArtifactStructList& ArtifactStruct::list() const {
  // @@protoc_insertion_point(field_get:ml_metadata.ArtifactStruct.list)
  return _internal_list();
}
inline ::ml_metadata::ArtifactStructList* ArtifactStruct::unsafe_arena_release_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ml_metadata.ArtifactStruct.list)
  if (_internal_has_list()) {
    clear_has_value();
    ::ml_metadata::ArtifactStructList* temp = _impl_.value_.list_;
    _impl_.value_.list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ArtifactStruct::unsafe_arena_set_allocated_list(::ml_metadata::ArtifactStructList* list) {
  clear_value();
  if (list) {
    set_has_list();
    _impl_.value_.list_ = list;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.ArtifactStruct.list)
}
inline ::ml_metadata::ArtifactStructList* ArtifactStruct::_internal_mutable_list() {
  if (!_internal_has_list()) {
    clear_value();
    set_has_list();
    _impl_.value_.list_ = CreateMaybeMessage< ::ml_metadata::ArtifactStructList >(GetArenaForAllocation());
  }
  return _impl_.value_.list_;
}
inline ::ml_metadata::ArtifactStructList* ArtifactStruct::mutable_list() {
  ::ml_metadata::ArtifactStructList* _msg = _internal_mutable_list();
  // @@protoc_insertion_point(field_mutable:ml_metadata.ArtifactStruct.list)
  return _msg;
}

inline bool ArtifactStruct::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void ArtifactStruct::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline ArtifactStruct::ValueCase ArtifactStruct::value_case() const {
  return ArtifactStruct::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// PutArtifactsRequest_Options

// optional bool abort_if_latest_updated_time_changed = 1;
inline bool PutArtifactsRequest_Options::_internal_has_abort_if_latest_updated_time_changed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutArtifactsRequest_Options::has_abort_if_latest_updated_time_changed() const {
  return _internal_has_abort_if_latest_updated_time_changed();
}
inline void PutArtifactsRequest_Options::clear_abort_if_latest_updated_time_changed() {
  _impl_.abort_if_latest_updated_time_changed_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PutArtifactsRequest_Options::_internal_abort_if_latest_updated_time_changed() const {
  return _impl_.abort_if_latest_updated_time_changed_;
}
inline bool PutArtifactsRequest_Options::abort_if_latest_updated_time_changed() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsRequest.Options.abort_if_latest_updated_time_changed)
  return _internal_abort_if_latest_updated_time_changed();
}
inline void PutArtifactsRequest_Options::_internal_set_abort_if_latest_updated_time_changed(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.abort_if_latest_updated_time_changed_ = value;
}
inline void PutArtifactsRequest_Options::set_abort_if_latest_updated_time_changed(bool value) {
  _internal_set_abort_if_latest_updated_time_changed(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactsRequest.Options.abort_if_latest_updated_time_changed)
}

// -------------------------------------------------------------------

// PutArtifactsRequest

// repeated .ml_metadata.Artifact artifacts = 1;
inline int PutArtifactsRequest::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int PutArtifactsRequest::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* PutArtifactsRequest::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactsRequest.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
PutArtifactsRequest::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutArtifactsRequest.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& PutArtifactsRequest::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& PutArtifactsRequest::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsRequest.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* PutArtifactsRequest::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* PutArtifactsRequest::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutArtifactsRequest.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
PutArtifactsRequest::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutArtifactsRequest.artifacts)
  return _impl_.artifacts_;
}

// optional .ml_metadata.PutArtifactsRequest.Options options = 2;
inline bool PutArtifactsRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool PutArtifactsRequest::has_options() const {
  return _internal_has_options();
}
inline void PutArtifactsRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ml_metadata::PutArtifactsRequest_Options& PutArtifactsRequest::_internal_options() const {
  const ::ml_metadata::PutArtifactsRequest_Options* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::PutArtifactsRequest_Options&>(
      ::ml_metadata::_PutArtifactsRequest_Options_default_instance_);
}
inline const ::ml_metadata::PutArtifactsRequest_Options& PutArtifactsRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsRequest.options)
  return _internal_options();
}
inline void PutArtifactsRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::PutArtifactsRequest_Options* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutArtifactsRequest.options)
}
inline ::ml_metadata::PutArtifactsRequest_Options* PutArtifactsRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::PutArtifactsRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::PutArtifactsRequest_Options* PutArtifactsRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutArtifactsRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::PutArtifactsRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::PutArtifactsRequest_Options* PutArtifactsRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::PutArtifactsRequest_Options>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::PutArtifactsRequest_Options* PutArtifactsRequest::mutable_options() {
  ::ml_metadata::PutArtifactsRequest_Options* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactsRequest.options)
  return _msg;
}
inline void PutArtifactsRequest::set_allocated_options(::ml_metadata::PutArtifactsRequest_Options* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.options_;
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(options);
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutArtifactsRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool PutArtifactsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutArtifactsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutArtifactsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutArtifactsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutArtifactsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutArtifactsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutArtifactsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutArtifactsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutArtifactsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutArtifactsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutArtifactsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactsRequest.transaction_options)
  return _msg;
}
inline void PutArtifactsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutArtifactsRequest.transaction_options)
}

// optional .google.protobuf.FieldMask update_mask = 4;
inline bool PutArtifactsRequest::_internal_has_update_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_mask_ != nullptr);
  return value;
}
inline bool PutArtifactsRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutArtifactsRequest::_internal_update_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutArtifactsRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsRequest.update_mask)
  return _internal_update_mask();
}
inline void PutArtifactsRequest::unsafe_arena_set_allocated_update_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = update_mask;
  if (update_mask) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutArtifactsRequest.update_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutArtifactsRequest::release_update_mask() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutArtifactsRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutArtifactsRequest.update_mask)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutArtifactsRequest::_internal_mutable_update_mask() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = p;
  }
  return _impl_.update_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutArtifactsRequest::mutable_update_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactsRequest.update_mask)
  return _msg;
}
inline void PutArtifactsRequest::set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask));
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutArtifactsRequest.update_mask)
}

// -------------------------------------------------------------------

// PutArtifactsResponse

// repeated int64 artifact_ids = 1;
inline int PutArtifactsResponse::_internal_artifact_ids_size() const {
  return _impl_.artifact_ids_.size();
}
inline int PutArtifactsResponse::artifact_ids_size() const {
  return _internal_artifact_ids_size();
}
inline void PutArtifactsResponse::clear_artifact_ids() {
  _impl_.artifact_ids_.Clear();
}
inline int64_t PutArtifactsResponse::_internal_artifact_ids(int index) const {
  return _impl_.artifact_ids_.Get(index);
}
inline int64_t PutArtifactsResponse::artifact_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactsResponse.artifact_ids)
  return _internal_artifact_ids(index);
}
inline void PutArtifactsResponse::set_artifact_ids(int index, int64_t value) {
  _impl_.artifact_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactsResponse.artifact_ids)
}
inline void PutArtifactsResponse::_internal_add_artifact_ids(int64_t value) {
  _impl_.artifact_ids_.Add(value);
}
inline void PutArtifactsResponse::add_artifact_ids(int64_t value) {
  _internal_add_artifact_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutArtifactsResponse.artifact_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutArtifactsResponse::_internal_artifact_ids() const {
  return _impl_.artifact_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutArtifactsResponse::artifact_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutArtifactsResponse.artifact_ids)
  return _internal_artifact_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutArtifactsResponse::_internal_mutable_artifact_ids() {
  return &_impl_.artifact_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutArtifactsResponse::mutable_artifact_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutArtifactsResponse.artifact_ids)
  return _internal_mutable_artifact_ids();
}

// -------------------------------------------------------------------

// PutArtifactTypeRequest

// optional .ml_metadata.ArtifactType artifact_type = 1;
inline bool PutArtifactTypeRequest::_internal_has_artifact_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.artifact_type_ != nullptr);
  return value;
}
inline bool PutArtifactTypeRequest::has_artifact_type() const {
  return _internal_has_artifact_type();
}
inline const ::ml_metadata::ArtifactType& PutArtifactTypeRequest::_internal_artifact_type() const {
  const ::ml_metadata::ArtifactType* p = _impl_.artifact_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ArtifactType&>(
      ::ml_metadata::_ArtifactType_default_instance_);
}
inline const ::ml_metadata::ArtifactType& PutArtifactTypeRequest::artifact_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.artifact_type)
  return _internal_artifact_type();
}
inline void PutArtifactTypeRequest::unsafe_arena_set_allocated_artifact_type(
    ::ml_metadata::ArtifactType* artifact_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_type_);
  }
  _impl_.artifact_type_ = artifact_type;
  if (artifact_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutArtifactTypeRequest.artifact_type)
}
inline ::ml_metadata::ArtifactType* PutArtifactTypeRequest::release_artifact_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ArtifactType* temp = _impl_.artifact_type_;
  _impl_.artifact_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ArtifactType* PutArtifactTypeRequest::unsafe_arena_release_artifact_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutArtifactTypeRequest.artifact_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ArtifactType* temp = _impl_.artifact_type_;
  _impl_.artifact_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ArtifactType* PutArtifactTypeRequest::_internal_mutable_artifact_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.artifact_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ArtifactType>(GetArenaForAllocation());
    _impl_.artifact_type_ = p;
  }
  return _impl_.artifact_type_;
}
inline ::ml_metadata::ArtifactType* PutArtifactTypeRequest::mutable_artifact_type() {
  ::ml_metadata::ArtifactType* _msg = _internal_mutable_artifact_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactTypeRequest.artifact_type)
  return _msg;
}
inline void PutArtifactTypeRequest::set_allocated_artifact_type(::ml_metadata::ArtifactType* artifact_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_type_);
  }
  if (artifact_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(artifact_type));
    if (message_arena != submessage_arena) {
      artifact_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.artifact_type_ = artifact_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutArtifactTypeRequest.artifact_type)
}

// optional bool can_add_fields = 2;
inline bool PutArtifactTypeRequest::_internal_has_can_add_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutArtifactTypeRequest::has_can_add_fields() const {
  return _internal_has_can_add_fields();
}
inline void PutArtifactTypeRequest::clear_can_add_fields() {
  _impl_.can_add_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PutArtifactTypeRequest::_internal_can_add_fields() const {
  return _impl_.can_add_fields_;
}
inline bool PutArtifactTypeRequest::can_add_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.can_add_fields)
  return _internal_can_add_fields();
}
inline void PutArtifactTypeRequest::_internal_set_can_add_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.can_add_fields_ = value;
}
inline void PutArtifactTypeRequest::set_can_add_fields(bool value) {
  _internal_set_can_add_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactTypeRequest.can_add_fields)
}

// optional bool can_omit_fields = 5;
inline bool PutArtifactTypeRequest::_internal_has_can_omit_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PutArtifactTypeRequest::has_can_omit_fields() const {
  return _internal_has_can_omit_fields();
}
inline void PutArtifactTypeRequest::clear_can_omit_fields() {
  _impl_.can_omit_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutArtifactTypeRequest::_internal_can_omit_fields() const {
  return _impl_.can_omit_fields_;
}
inline bool PutArtifactTypeRequest::can_omit_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.can_omit_fields)
  return _internal_can_omit_fields();
}
inline void PutArtifactTypeRequest::_internal_set_can_omit_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.can_omit_fields_ = value;
}
inline void PutArtifactTypeRequest::set_can_omit_fields(bool value) {
  _internal_set_can_omit_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactTypeRequest.can_omit_fields)
}

// optional bool can_delete_fields = 3 [deprecated = true];
inline bool PutArtifactTypeRequest::_internal_has_can_delete_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PutArtifactTypeRequest::has_can_delete_fields() const {
  return _internal_has_can_delete_fields();
}
inline void PutArtifactTypeRequest::clear_can_delete_fields() {
  _impl_.can_delete_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PutArtifactTypeRequest::_internal_can_delete_fields() const {
  return _impl_.can_delete_fields_;
}
inline bool PutArtifactTypeRequest::can_delete_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.can_delete_fields)
  return _internal_can_delete_fields();
}
inline void PutArtifactTypeRequest::_internal_set_can_delete_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.can_delete_fields_ = value;
}
inline void PutArtifactTypeRequest::set_can_delete_fields(bool value) {
  _internal_set_can_delete_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactTypeRequest.can_delete_fields)
}

// optional bool all_fields_match = 4 [default = true, deprecated = true];
inline bool PutArtifactTypeRequest::_internal_has_all_fields_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PutArtifactTypeRequest::has_all_fields_match() const {
  return _internal_has_all_fields_match();
}
inline void PutArtifactTypeRequest::clear_all_fields_match() {
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool PutArtifactTypeRequest::_internal_all_fields_match() const {
  return _impl_.all_fields_match_;
}
inline bool PutArtifactTypeRequest::all_fields_match() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.all_fields_match)
  return _internal_all_fields_match();
}
inline void PutArtifactTypeRequest::_internal_set_all_fields_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.all_fields_match_ = value;
}
inline void PutArtifactTypeRequest::set_all_fields_match(bool value) {
  _internal_set_all_fields_match(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactTypeRequest.all_fields_match)
}

// optional .ml_metadata.TransactionOptions transaction_options = 6;
inline bool PutArtifactTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutArtifactTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutArtifactTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutArtifactTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutArtifactTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutArtifactTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutArtifactTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutArtifactTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutArtifactTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutArtifactTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutArtifactTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutArtifactTypeRequest.transaction_options)
  return _msg;
}
inline void PutArtifactTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutArtifactTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutArtifactTypeResponse

// optional int64 type_id = 1;
inline bool PutArtifactTypeResponse::_internal_has_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutArtifactTypeResponse::has_type_id() const {
  return _internal_has_type_id();
}
inline void PutArtifactTypeResponse::clear_type_id() {
  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PutArtifactTypeResponse::_internal_type_id() const {
  return _impl_.type_id_;
}
inline int64_t PutArtifactTypeResponse::type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutArtifactTypeResponse.type_id)
  return _internal_type_id();
}
inline void PutArtifactTypeResponse::_internal_set_type_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_id_ = value;
}
inline void PutArtifactTypeResponse::set_type_id(int64_t value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutArtifactTypeResponse.type_id)
}

// -------------------------------------------------------------------

// PutExecutionsRequest

// repeated .ml_metadata.Execution executions = 1;
inline int PutExecutionsRequest::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int PutExecutionsRequest::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* PutExecutionsRequest::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionsRequest.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
PutExecutionsRequest::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionsRequest.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& PutExecutionsRequest::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& PutExecutionsRequest::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionsRequest.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* PutExecutionsRequest::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* PutExecutionsRequest::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionsRequest.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
PutExecutionsRequest::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionsRequest.executions)
  return _impl_.executions_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool PutExecutionsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutExecutionsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutExecutionsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutExecutionsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutExecutionsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutExecutionsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutExecutionsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionsRequest.transaction_options)
  return _msg;
}
inline void PutExecutionsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionsRequest.transaction_options)
}

// optional .google.protobuf.FieldMask update_mask = 3;
inline bool PutExecutionsRequest::_internal_has_update_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_mask_ != nullptr);
  return value;
}
inline bool PutExecutionsRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutExecutionsRequest::_internal_update_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutExecutionsRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionsRequest.update_mask)
  return _internal_update_mask();
}
inline void PutExecutionsRequest::unsafe_arena_set_allocated_update_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = update_mask;
  if (update_mask) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionsRequest.update_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutExecutionsRequest::release_update_mask() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutExecutionsRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionsRequest.update_mask)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutExecutionsRequest::_internal_mutable_update_mask() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = p;
  }
  return _impl_.update_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutExecutionsRequest::mutable_update_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionsRequest.update_mask)
  return _msg;
}
inline void PutExecutionsRequest::set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask));
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionsRequest.update_mask)
}

// -------------------------------------------------------------------

// PutExecutionsResponse

// repeated int64 execution_ids = 1;
inline int PutExecutionsResponse::_internal_execution_ids_size() const {
  return _impl_.execution_ids_.size();
}
inline int PutExecutionsResponse::execution_ids_size() const {
  return _internal_execution_ids_size();
}
inline void PutExecutionsResponse::clear_execution_ids() {
  _impl_.execution_ids_.Clear();
}
inline int64_t PutExecutionsResponse::_internal_execution_ids(int index) const {
  return _impl_.execution_ids_.Get(index);
}
inline int64_t PutExecutionsResponse::execution_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionsResponse.execution_ids)
  return _internal_execution_ids(index);
}
inline void PutExecutionsResponse::set_execution_ids(int index, int64_t value) {
  _impl_.execution_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionsResponse.execution_ids)
}
inline void PutExecutionsResponse::_internal_add_execution_ids(int64_t value) {
  _impl_.execution_ids_.Add(value);
}
inline void PutExecutionsResponse::add_execution_ids(int64_t value) {
  _internal_add_execution_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionsResponse.execution_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionsResponse::_internal_execution_ids() const {
  return _impl_.execution_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionsResponse::execution_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionsResponse.execution_ids)
  return _internal_execution_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionsResponse::_internal_mutable_execution_ids() {
  return &_impl_.execution_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionsResponse::mutable_execution_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionsResponse.execution_ids)
  return _internal_mutable_execution_ids();
}

// -------------------------------------------------------------------

// PutExecutionTypeRequest

// optional .ml_metadata.ExecutionType execution_type = 1;
inline bool PutExecutionTypeRequest::_internal_has_execution_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_type_ != nullptr);
  return value;
}
inline bool PutExecutionTypeRequest::has_execution_type() const {
  return _internal_has_execution_type();
}
inline const ::ml_metadata::ExecutionType& PutExecutionTypeRequest::_internal_execution_type() const {
  const ::ml_metadata::ExecutionType* p = _impl_.execution_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ExecutionType&>(
      ::ml_metadata::_ExecutionType_default_instance_);
}
inline const ::ml_metadata::ExecutionType& PutExecutionTypeRequest::execution_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.execution_type)
  return _internal_execution_type();
}
inline void PutExecutionTypeRequest::unsafe_arena_set_allocated_execution_type(
    ::ml_metadata::ExecutionType* execution_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_type_);
  }
  _impl_.execution_type_ = execution_type;
  if (execution_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionTypeRequest.execution_type)
}
inline ::ml_metadata::ExecutionType* PutExecutionTypeRequest::release_execution_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ExecutionType* temp = _impl_.execution_type_;
  _impl_.execution_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ExecutionType* PutExecutionTypeRequest::unsafe_arena_release_execution_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionTypeRequest.execution_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ExecutionType* temp = _impl_.execution_type_;
  _impl_.execution_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ExecutionType* PutExecutionTypeRequest::_internal_mutable_execution_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.execution_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ExecutionType>(GetArenaForAllocation());
    _impl_.execution_type_ = p;
  }
  return _impl_.execution_type_;
}
inline ::ml_metadata::ExecutionType* PutExecutionTypeRequest::mutable_execution_type() {
  ::ml_metadata::ExecutionType* _msg = _internal_mutable_execution_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionTypeRequest.execution_type)
  return _msg;
}
inline void PutExecutionTypeRequest::set_allocated_execution_type(::ml_metadata::ExecutionType* execution_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_type_);
  }
  if (execution_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(execution_type));
    if (message_arena != submessage_arena) {
      execution_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, execution_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.execution_type_ = execution_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionTypeRequest.execution_type)
}

// optional bool can_add_fields = 2;
inline bool PutExecutionTypeRequest::_internal_has_can_add_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutExecutionTypeRequest::has_can_add_fields() const {
  return _internal_has_can_add_fields();
}
inline void PutExecutionTypeRequest::clear_can_add_fields() {
  _impl_.can_add_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PutExecutionTypeRequest::_internal_can_add_fields() const {
  return _impl_.can_add_fields_;
}
inline bool PutExecutionTypeRequest::can_add_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.can_add_fields)
  return _internal_can_add_fields();
}
inline void PutExecutionTypeRequest::_internal_set_can_add_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.can_add_fields_ = value;
}
inline void PutExecutionTypeRequest::set_can_add_fields(bool value) {
  _internal_set_can_add_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionTypeRequest.can_add_fields)
}

// optional bool can_omit_fields = 5;
inline bool PutExecutionTypeRequest::_internal_has_can_omit_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PutExecutionTypeRequest::has_can_omit_fields() const {
  return _internal_has_can_omit_fields();
}
inline void PutExecutionTypeRequest::clear_can_omit_fields() {
  _impl_.can_omit_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutExecutionTypeRequest::_internal_can_omit_fields() const {
  return _impl_.can_omit_fields_;
}
inline bool PutExecutionTypeRequest::can_omit_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.can_omit_fields)
  return _internal_can_omit_fields();
}
inline void PutExecutionTypeRequest::_internal_set_can_omit_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.can_omit_fields_ = value;
}
inline void PutExecutionTypeRequest::set_can_omit_fields(bool value) {
  _internal_set_can_omit_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionTypeRequest.can_omit_fields)
}

// optional bool can_delete_fields = 3 [deprecated = true];
inline bool PutExecutionTypeRequest::_internal_has_can_delete_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PutExecutionTypeRequest::has_can_delete_fields() const {
  return _internal_has_can_delete_fields();
}
inline void PutExecutionTypeRequest::clear_can_delete_fields() {
  _impl_.can_delete_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PutExecutionTypeRequest::_internal_can_delete_fields() const {
  return _impl_.can_delete_fields_;
}
inline bool PutExecutionTypeRequest::can_delete_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.can_delete_fields)
  return _internal_can_delete_fields();
}
inline void PutExecutionTypeRequest::_internal_set_can_delete_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.can_delete_fields_ = value;
}
inline void PutExecutionTypeRequest::set_can_delete_fields(bool value) {
  _internal_set_can_delete_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionTypeRequest.can_delete_fields)
}

// optional bool all_fields_match = 4 [default = true, deprecated = true];
inline bool PutExecutionTypeRequest::_internal_has_all_fields_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PutExecutionTypeRequest::has_all_fields_match() const {
  return _internal_has_all_fields_match();
}
inline void PutExecutionTypeRequest::clear_all_fields_match() {
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool PutExecutionTypeRequest::_internal_all_fields_match() const {
  return _impl_.all_fields_match_;
}
inline bool PutExecutionTypeRequest::all_fields_match() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.all_fields_match)
  return _internal_all_fields_match();
}
inline void PutExecutionTypeRequest::_internal_set_all_fields_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.all_fields_match_ = value;
}
inline void PutExecutionTypeRequest::set_all_fields_match(bool value) {
  _internal_set_all_fields_match(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionTypeRequest.all_fields_match)
}

// optional .ml_metadata.TransactionOptions transaction_options = 6;
inline bool PutExecutionTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutExecutionTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutExecutionTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutExecutionTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutExecutionTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutExecutionTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutExecutionTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionTypeRequest.transaction_options)
  return _msg;
}
inline void PutExecutionTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutExecutionTypeResponse

// optional int64 type_id = 1;
inline bool PutExecutionTypeResponse::_internal_has_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutExecutionTypeResponse::has_type_id() const {
  return _internal_has_type_id();
}
inline void PutExecutionTypeResponse::clear_type_id() {
  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PutExecutionTypeResponse::_internal_type_id() const {
  return _impl_.type_id_;
}
inline int64_t PutExecutionTypeResponse::type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionTypeResponse.type_id)
  return _internal_type_id();
}
inline void PutExecutionTypeResponse::_internal_set_type_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_id_ = value;
}
inline void PutExecutionTypeResponse::set_type_id(int64_t value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionTypeResponse.type_id)
}

// -------------------------------------------------------------------

// PutEventsRequest

// repeated .ml_metadata.Event events = 1;
inline int PutEventsRequest::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int PutEventsRequest::events_size() const {
  return _internal_events_size();
}
inline ::ml_metadata::Event* PutEventsRequest::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutEventsRequest.events)
  return _impl_.events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
PutEventsRequest::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutEventsRequest.events)
  return &_impl_.events_;
}
inline const ::ml_metadata::Event& PutEventsRequest::_internal_events(int index) const {
  return _impl_.events_.Get(index);
}
inline const ::ml_metadata::Event& PutEventsRequest::events(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutEventsRequest.events)
  return _internal_events(index);
}
inline ::ml_metadata::Event* PutEventsRequest::_internal_add_events() {
  return _impl_.events_.Add();
}
inline ::ml_metadata::Event* PutEventsRequest::add_events() {
  ::ml_metadata::Event* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:ml_metadata.PutEventsRequest.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
PutEventsRequest::events() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutEventsRequest.events)
  return _impl_.events_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool PutEventsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutEventsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutEventsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutEventsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutEventsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutEventsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutEventsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutEventsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutEventsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutEventsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutEventsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutEventsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutEventsRequest.transaction_options)
  return _msg;
}
inline void PutEventsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutEventsRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutEventsResponse

// -------------------------------------------------------------------

// PutExecutionRequest_ArtifactAndEvent

// optional .ml_metadata.Artifact artifact = 1;
inline bool PutExecutionRequest_ArtifactAndEvent::_internal_has_artifact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.artifact_ != nullptr);
  return value;
}
inline bool PutExecutionRequest_ArtifactAndEvent::has_artifact() const {
  return _internal_has_artifact();
}
inline const ::ml_metadata::Artifact& PutExecutionRequest_ArtifactAndEvent::_internal_artifact() const {
  const ::ml_metadata::Artifact* p = _impl_.artifact_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Artifact&>(
      ::ml_metadata::_Artifact_default_instance_);
}
inline const ::ml_metadata::Artifact& PutExecutionRequest_ArtifactAndEvent::artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact)
  return _internal_artifact();
}
inline void PutExecutionRequest_ArtifactAndEvent::unsafe_arena_set_allocated_artifact(
    ::ml_metadata::Artifact* artifact) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  _impl_.artifact_ = artifact;
  if (artifact) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact)
}
inline ::ml_metadata::Artifact* PutExecutionRequest_ArtifactAndEvent::release_artifact() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Artifact* PutExecutionRequest_ArtifactAndEvent::unsafe_arena_release_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
  return temp;
}
inline ::ml_metadata::Artifact* PutExecutionRequest_ArtifactAndEvent::_internal_mutable_artifact() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Artifact>(GetArenaForAllocation());
    _impl_.artifact_ = p;
  }
  return _impl_.artifact_;
}
inline ::ml_metadata::Artifact* PutExecutionRequest_ArtifactAndEvent::mutable_artifact() {
  ::ml_metadata::Artifact* _msg = _internal_mutable_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact)
  return _msg;
}
inline void PutExecutionRequest_ArtifactAndEvent::set_allocated_artifact(::ml_metadata::Artifact* artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  if (artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(artifact));
    if (message_arena != submessage_arena) {
      artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.artifact_ = artifact;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionRequest.ArtifactAndEvent.artifact)
}

// optional .ml_metadata.Event event = 2;
inline bool PutExecutionRequest_ArtifactAndEvent::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool PutExecutionRequest_ArtifactAndEvent::has_event() const {
  return _internal_has_event();
}
inline const ::ml_metadata::Event& PutExecutionRequest_ArtifactAndEvent::_internal_event() const {
  const ::ml_metadata::Event* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Event&>(
      ::ml_metadata::_Event_default_instance_);
}
inline const ::ml_metadata::Event& PutExecutionRequest_ArtifactAndEvent::event() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.ArtifactAndEvent.event)
  return _internal_event();
}
inline void PutExecutionRequest_ArtifactAndEvent::unsafe_arena_set_allocated_event(
    ::ml_metadata::Event* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionRequest.ArtifactAndEvent.event)
}
inline ::ml_metadata::Event* PutExecutionRequest_ArtifactAndEvent::release_event() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::Event* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Event* PutExecutionRequest_ArtifactAndEvent::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionRequest.ArtifactAndEvent.event)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::Event* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::ml_metadata::Event* PutExecutionRequest_ArtifactAndEvent::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Event>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::ml_metadata::Event* PutExecutionRequest_ArtifactAndEvent::mutable_event() {
  ::ml_metadata::Event* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.ArtifactAndEvent.event)
  return _msg;
}
inline void PutExecutionRequest_ArtifactAndEvent::set_allocated_event(::ml_metadata::Event* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionRequest.ArtifactAndEvent.event)
}

// -------------------------------------------------------------------

// PutExecutionRequest_Options

// optional bool reuse_context_if_already_exist = 1;
inline bool PutExecutionRequest_Options::_internal_has_reuse_context_if_already_exist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutExecutionRequest_Options::has_reuse_context_if_already_exist() const {
  return _internal_has_reuse_context_if_already_exist();
}
inline void PutExecutionRequest_Options::clear_reuse_context_if_already_exist() {
  _impl_.reuse_context_if_already_exist_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PutExecutionRequest_Options::_internal_reuse_context_if_already_exist() const {
  return _impl_.reuse_context_if_already_exist_;
}
inline bool PutExecutionRequest_Options::reuse_context_if_already_exist() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.Options.reuse_context_if_already_exist)
  return _internal_reuse_context_if_already_exist();
}
inline void PutExecutionRequest_Options::_internal_set_reuse_context_if_already_exist(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reuse_context_if_already_exist_ = value;
}
inline void PutExecutionRequest_Options::set_reuse_context_if_already_exist(bool value) {
  _internal_set_reuse_context_if_already_exist(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionRequest.Options.reuse_context_if_already_exist)
}

// optional bool reuse_artifact_if_already_exist_by_external_id = 2;
inline bool PutExecutionRequest_Options::_internal_has_reuse_artifact_if_already_exist_by_external_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PutExecutionRequest_Options::has_reuse_artifact_if_already_exist_by_external_id() const {
  return _internal_has_reuse_artifact_if_already_exist_by_external_id();
}
inline void PutExecutionRequest_Options::clear_reuse_artifact_if_already_exist_by_external_id() {
  _impl_.reuse_artifact_if_already_exist_by_external_id_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PutExecutionRequest_Options::_internal_reuse_artifact_if_already_exist_by_external_id() const {
  return _impl_.reuse_artifact_if_already_exist_by_external_id_;
}
inline bool PutExecutionRequest_Options::reuse_artifact_if_already_exist_by_external_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.Options.reuse_artifact_if_already_exist_by_external_id)
  return _internal_reuse_artifact_if_already_exist_by_external_id();
}
inline void PutExecutionRequest_Options::_internal_set_reuse_artifact_if_already_exist_by_external_id(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reuse_artifact_if_already_exist_by_external_id_ = value;
}
inline void PutExecutionRequest_Options::set_reuse_artifact_if_already_exist_by_external_id(bool value) {
  _internal_set_reuse_artifact_if_already_exist_by_external_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionRequest.Options.reuse_artifact_if_already_exist_by_external_id)
}

// optional bool force_update_time = 3;
inline bool PutExecutionRequest_Options::_internal_has_force_update_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutExecutionRequest_Options::has_force_update_time() const {
  return _internal_has_force_update_time();
}
inline void PutExecutionRequest_Options::clear_force_update_time() {
  _impl_.force_update_time_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PutExecutionRequest_Options::_internal_force_update_time() const {
  return _impl_.force_update_time_;
}
inline bool PutExecutionRequest_Options::force_update_time() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.Options.force_update_time)
  return _internal_force_update_time();
}
inline void PutExecutionRequest_Options::_internal_set_force_update_time(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.force_update_time_ = value;
}
inline void PutExecutionRequest_Options::set_force_update_time(bool value) {
  _internal_set_force_update_time(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionRequest.Options.force_update_time)
}

// optional bool force_reuse_context = 4;
inline bool PutExecutionRequest_Options::_internal_has_force_reuse_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PutExecutionRequest_Options::has_force_reuse_context() const {
  return _internal_has_force_reuse_context();
}
inline void PutExecutionRequest_Options::clear_force_reuse_context() {
  _impl_.force_reuse_context_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutExecutionRequest_Options::_internal_force_reuse_context() const {
  return _impl_.force_reuse_context_;
}
inline bool PutExecutionRequest_Options::force_reuse_context() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.Options.force_reuse_context)
  return _internal_force_reuse_context();
}
inline void PutExecutionRequest_Options::_internal_set_force_reuse_context(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.force_reuse_context_ = value;
}
inline void PutExecutionRequest_Options::set_force_reuse_context(bool value) {
  _internal_set_force_reuse_context(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionRequest.Options.force_reuse_context)
}

// -------------------------------------------------------------------

// PutExecutionRequest

// optional .ml_metadata.Execution execution = 1;
inline bool PutExecutionRequest::_internal_has_execution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_ != nullptr);
  return value;
}
inline bool PutExecutionRequest::has_execution() const {
  return _internal_has_execution();
}
inline const ::ml_metadata::Execution& PutExecutionRequest::_internal_execution() const {
  const ::ml_metadata::Execution* p = _impl_.execution_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Execution&>(
      ::ml_metadata::_Execution_default_instance_);
}
inline const ::ml_metadata::Execution& PutExecutionRequest::execution() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.execution)
  return _internal_execution();
}
inline void PutExecutionRequest::unsafe_arena_set_allocated_execution(
    ::ml_metadata::Execution* execution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_);
  }
  _impl_.execution_ = execution;
  if (execution) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionRequest.execution)
}
inline ::ml_metadata::Execution* PutExecutionRequest::release_execution() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Execution* temp = _impl_.execution_;
  _impl_.execution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Execution* PutExecutionRequest::unsafe_arena_release_execution() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionRequest.execution)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Execution* temp = _impl_.execution_;
  _impl_.execution_ = nullptr;
  return temp;
}
inline ::ml_metadata::Execution* PutExecutionRequest::_internal_mutable_execution() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.execution_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Execution>(GetArenaForAllocation());
    _impl_.execution_ = p;
  }
  return _impl_.execution_;
}
inline ::ml_metadata::Execution* PutExecutionRequest::mutable_execution() {
  ::ml_metadata::Execution* _msg = _internal_mutable_execution();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.execution)
  return _msg;
}
inline void PutExecutionRequest::set_allocated_execution(::ml_metadata::Execution* execution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_);
  }
  if (execution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(execution));
    if (message_arena != submessage_arena) {
      execution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, execution, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.execution_ = execution;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionRequest.execution)
}

// repeated .ml_metadata.PutExecutionRequest.ArtifactAndEvent artifact_event_pairs = 2;
inline int PutExecutionRequest::_internal_artifact_event_pairs_size() const {
  return _impl_.artifact_event_pairs_.size();
}
inline int PutExecutionRequest::artifact_event_pairs_size() const {
  return _internal_artifact_event_pairs_size();
}
inline void PutExecutionRequest::clear_artifact_event_pairs() {
  _impl_.artifact_event_pairs_.Clear();
}
inline ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* PutExecutionRequest::mutable_artifact_event_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.artifact_event_pairs)
  return _impl_.artifact_event_pairs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >*
PutExecutionRequest::mutable_artifact_event_pairs() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionRequest.artifact_event_pairs)
  return &_impl_.artifact_event_pairs_;
}
inline const ::ml_metadata::PutExecutionRequest_ArtifactAndEvent& PutExecutionRequest::_internal_artifact_event_pairs(int index) const {
  return _impl_.artifact_event_pairs_.Get(index);
}
inline const ::ml_metadata::PutExecutionRequest_ArtifactAndEvent& PutExecutionRequest::artifact_event_pairs(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.artifact_event_pairs)
  return _internal_artifact_event_pairs(index);
}
inline ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* PutExecutionRequest::_internal_add_artifact_event_pairs() {
  return _impl_.artifact_event_pairs_.Add();
}
inline ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* PutExecutionRequest::add_artifact_event_pairs() {
  ::ml_metadata::PutExecutionRequest_ArtifactAndEvent* _add = _internal_add_artifact_event_pairs();
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionRequest.artifact_event_pairs)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >&
PutExecutionRequest::artifact_event_pairs() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionRequest.artifact_event_pairs)
  return _impl_.artifact_event_pairs_;
}

// repeated .ml_metadata.Context contexts = 3;
inline int PutExecutionRequest::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int PutExecutionRequest::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* PutExecutionRequest::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
PutExecutionRequest::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionRequest.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& PutExecutionRequest::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& PutExecutionRequest::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* PutExecutionRequest::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* PutExecutionRequest::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionRequest.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
PutExecutionRequest::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionRequest.contexts)
  return _impl_.contexts_;
}

// optional .ml_metadata.PutExecutionRequest.Options options = 4;
inline bool PutExecutionRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool PutExecutionRequest::has_options() const {
  return _internal_has_options();
}
inline void PutExecutionRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::ml_metadata::PutExecutionRequest_Options& PutExecutionRequest::_internal_options() const {
  const ::ml_metadata::PutExecutionRequest_Options* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::PutExecutionRequest_Options&>(
      ::ml_metadata::_PutExecutionRequest_Options_default_instance_);
}
inline const ::ml_metadata::PutExecutionRequest_Options& PutExecutionRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.options)
  return _internal_options();
}
inline void PutExecutionRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::PutExecutionRequest_Options* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionRequest.options)
}
inline ::ml_metadata::PutExecutionRequest_Options* PutExecutionRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::PutExecutionRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::PutExecutionRequest_Options* PutExecutionRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionRequest.options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::PutExecutionRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::PutExecutionRequest_Options* PutExecutionRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::PutExecutionRequest_Options>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::PutExecutionRequest_Options* PutExecutionRequest::mutable_options() {
  ::ml_metadata::PutExecutionRequest_Options* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.options)
  return _msg;
}
inline void PutExecutionRequest::set_allocated_options(::ml_metadata::PutExecutionRequest_Options* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.options_;
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(options);
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 5;
inline bool PutExecutionRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutExecutionRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutExecutionRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutExecutionRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutExecutionRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutExecutionRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutExecutionRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutExecutionRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutExecutionRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutExecutionRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutExecutionRequest.transaction_options)
  return _msg;
}
inline void PutExecutionRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutExecutionRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutExecutionResponse

// optional int64 execution_id = 1;
inline bool PutExecutionResponse::_internal_has_execution_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutExecutionResponse::has_execution_id() const {
  return _internal_has_execution_id();
}
inline void PutExecutionResponse::clear_execution_id() {
  _impl_.execution_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PutExecutionResponse::_internal_execution_id() const {
  return _impl_.execution_id_;
}
inline int64_t PutExecutionResponse::execution_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionResponse.execution_id)
  return _internal_execution_id();
}
inline void PutExecutionResponse::_internal_set_execution_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.execution_id_ = value;
}
inline void PutExecutionResponse::set_execution_id(int64_t value) {
  _internal_set_execution_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionResponse.execution_id)
}

// repeated int64 artifact_ids = 2;
inline int PutExecutionResponse::_internal_artifact_ids_size() const {
  return _impl_.artifact_ids_.size();
}
inline int PutExecutionResponse::artifact_ids_size() const {
  return _internal_artifact_ids_size();
}
inline void PutExecutionResponse::clear_artifact_ids() {
  _impl_.artifact_ids_.Clear();
}
inline int64_t PutExecutionResponse::_internal_artifact_ids(int index) const {
  return _impl_.artifact_ids_.Get(index);
}
inline int64_t PutExecutionResponse::artifact_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionResponse.artifact_ids)
  return _internal_artifact_ids(index);
}
inline void PutExecutionResponse::set_artifact_ids(int index, int64_t value) {
  _impl_.artifact_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionResponse.artifact_ids)
}
inline void PutExecutionResponse::_internal_add_artifact_ids(int64_t value) {
  _impl_.artifact_ids_.Add(value);
}
inline void PutExecutionResponse::add_artifact_ids(int64_t value) {
  _internal_add_artifact_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionResponse.artifact_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionResponse::_internal_artifact_ids() const {
  return _impl_.artifact_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionResponse::artifact_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionResponse.artifact_ids)
  return _internal_artifact_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionResponse::_internal_mutable_artifact_ids() {
  return &_impl_.artifact_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionResponse::mutable_artifact_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionResponse.artifact_ids)
  return _internal_mutable_artifact_ids();
}

// repeated int64 context_ids = 3;
inline int PutExecutionResponse::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int PutExecutionResponse::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void PutExecutionResponse::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t PutExecutionResponse::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t PutExecutionResponse::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutExecutionResponse.context_ids)
  return _internal_context_ids(index);
}
inline void PutExecutionResponse::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutExecutionResponse.context_ids)
}
inline void PutExecutionResponse::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void PutExecutionResponse::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutExecutionResponse.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionResponse::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutExecutionResponse::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutExecutionResponse.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionResponse::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutExecutionResponse::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutExecutionResponse.context_ids)
  return _internal_mutable_context_ids();
}

// -------------------------------------------------------------------

// PutLineageSubgraphRequest_EventEdge

// optional int32 execution_index = 1;
inline bool PutLineageSubgraphRequest_EventEdge::_internal_has_execution_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PutLineageSubgraphRequest_EventEdge::has_execution_index() const {
  return _internal_has_execution_index();
}
inline void PutLineageSubgraphRequest_EventEdge::clear_execution_index() {
  _impl_.execution_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t PutLineageSubgraphRequest_EventEdge::_internal_execution_index() const {
  return _impl_.execution_index_;
}
inline int32_t PutLineageSubgraphRequest_EventEdge::execution_index() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.EventEdge.execution_index)
  return _internal_execution_index();
}
inline void PutLineageSubgraphRequest_EventEdge::_internal_set_execution_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.execution_index_ = value;
}
inline void PutLineageSubgraphRequest_EventEdge::set_execution_index(int32_t value) {
  _internal_set_execution_index(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphRequest.EventEdge.execution_index)
}

// optional int32 artifact_index = 2;
inline bool PutLineageSubgraphRequest_EventEdge::_internal_has_artifact_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutLineageSubgraphRequest_EventEdge::has_artifact_index() const {
  return _internal_has_artifact_index();
}
inline void PutLineageSubgraphRequest_EventEdge::clear_artifact_index() {
  _impl_.artifact_index_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t PutLineageSubgraphRequest_EventEdge::_internal_artifact_index() const {
  return _impl_.artifact_index_;
}
inline int32_t PutLineageSubgraphRequest_EventEdge::artifact_index() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.EventEdge.artifact_index)
  return _internal_artifact_index();
}
inline void PutLineageSubgraphRequest_EventEdge::_internal_set_artifact_index(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.artifact_index_ = value;
}
inline void PutLineageSubgraphRequest_EventEdge::set_artifact_index(int32_t value) {
  _internal_set_artifact_index(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphRequest.EventEdge.artifact_index)
}

// optional .ml_metadata.Event event = 3;
inline bool PutLineageSubgraphRequest_EventEdge::_internal_has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline bool PutLineageSubgraphRequest_EventEdge::has_event() const {
  return _internal_has_event();
}
inline const ::ml_metadata::Event& PutLineageSubgraphRequest_EventEdge::_internal_event() const {
  const ::ml_metadata::Event* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Event&>(
      ::ml_metadata::_Event_default_instance_);
}
inline const ::ml_metadata::Event& PutLineageSubgraphRequest_EventEdge::event() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.EventEdge.event)
  return _internal_event();
}
inline void PutLineageSubgraphRequest_EventEdge::unsafe_arena_set_allocated_event(
    ::ml_metadata::Event* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutLineageSubgraphRequest.EventEdge.event)
}
inline ::ml_metadata::Event* PutLineageSubgraphRequest_EventEdge::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Event* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Event* PutLineageSubgraphRequest_EventEdge::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutLineageSubgraphRequest.EventEdge.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Event* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::ml_metadata::Event* PutLineageSubgraphRequest_EventEdge::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Event>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::ml_metadata::Event* PutLineageSubgraphRequest_EventEdge::mutable_event() {
  ::ml_metadata::Event* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.EventEdge.event)
  return _msg;
}
inline void PutLineageSubgraphRequest_EventEdge::set_allocated_event(::ml_metadata::Event* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutLineageSubgraphRequest.EventEdge.event)
}

// -------------------------------------------------------------------

// PutLineageSubgraphRequest_Options

// optional bool reuse_context_if_already_exist = 1;
inline bool PutLineageSubgraphRequest_Options::_internal_has_reuse_context_if_already_exist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutLineageSubgraphRequest_Options::has_reuse_context_if_already_exist() const {
  return _internal_has_reuse_context_if_already_exist();
}
inline void PutLineageSubgraphRequest_Options::clear_reuse_context_if_already_exist() {
  _impl_.reuse_context_if_already_exist_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PutLineageSubgraphRequest_Options::_internal_reuse_context_if_already_exist() const {
  return _impl_.reuse_context_if_already_exist_;
}
inline bool PutLineageSubgraphRequest_Options::reuse_context_if_already_exist() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.Options.reuse_context_if_already_exist)
  return _internal_reuse_context_if_already_exist();
}
inline void PutLineageSubgraphRequest_Options::_internal_set_reuse_context_if_already_exist(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reuse_context_if_already_exist_ = value;
}
inline void PutLineageSubgraphRequest_Options::set_reuse_context_if_already_exist(bool value) {
  _internal_set_reuse_context_if_already_exist(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphRequest.Options.reuse_context_if_already_exist)
}

// optional bool reuse_artifact_if_already_exist_by_external_id = 2;
inline bool PutLineageSubgraphRequest_Options::_internal_has_reuse_artifact_if_already_exist_by_external_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PutLineageSubgraphRequest_Options::has_reuse_artifact_if_already_exist_by_external_id() const {
  return _internal_has_reuse_artifact_if_already_exist_by_external_id();
}
inline void PutLineageSubgraphRequest_Options::clear_reuse_artifact_if_already_exist_by_external_id() {
  _impl_.reuse_artifact_if_already_exist_by_external_id_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PutLineageSubgraphRequest_Options::_internal_reuse_artifact_if_already_exist_by_external_id() const {
  return _impl_.reuse_artifact_if_already_exist_by_external_id_;
}
inline bool PutLineageSubgraphRequest_Options::reuse_artifact_if_already_exist_by_external_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.Options.reuse_artifact_if_already_exist_by_external_id)
  return _internal_reuse_artifact_if_already_exist_by_external_id();
}
inline void PutLineageSubgraphRequest_Options::_internal_set_reuse_artifact_if_already_exist_by_external_id(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reuse_artifact_if_already_exist_by_external_id_ = value;
}
inline void PutLineageSubgraphRequest_Options::set_reuse_artifact_if_already_exist_by_external_id(bool value) {
  _internal_set_reuse_artifact_if_already_exist_by_external_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphRequest.Options.reuse_artifact_if_already_exist_by_external_id)
}

// -------------------------------------------------------------------

// PutLineageSubgraphRequest

// repeated .ml_metadata.Execution executions = 1;
inline int PutLineageSubgraphRequest::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int PutLineageSubgraphRequest::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* PutLineageSubgraphRequest::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
PutLineageSubgraphRequest::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphRequest.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& PutLineageSubgraphRequest::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& PutLineageSubgraphRequest::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* PutLineageSubgraphRequest::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* PutLineageSubgraphRequest::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphRequest.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
PutLineageSubgraphRequest::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphRequest.executions)
  return _impl_.executions_;
}

// repeated .ml_metadata.Artifact artifacts = 2;
inline int PutLineageSubgraphRequest::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int PutLineageSubgraphRequest::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* PutLineageSubgraphRequest::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
PutLineageSubgraphRequest::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphRequest.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& PutLineageSubgraphRequest::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& PutLineageSubgraphRequest::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* PutLineageSubgraphRequest::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* PutLineageSubgraphRequest::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphRequest.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
PutLineageSubgraphRequest::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphRequest.artifacts)
  return _impl_.artifacts_;
}

// repeated .ml_metadata.Context contexts = 3;
inline int PutLineageSubgraphRequest::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int PutLineageSubgraphRequest::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* PutLineageSubgraphRequest::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
PutLineageSubgraphRequest::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphRequest.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& PutLineageSubgraphRequest::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& PutLineageSubgraphRequest::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* PutLineageSubgraphRequest::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* PutLineageSubgraphRequest::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphRequest.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
PutLineageSubgraphRequest::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphRequest.contexts)
  return _impl_.contexts_;
}

// repeated .ml_metadata.PutLineageSubgraphRequest.EventEdge event_edges = 4;
inline int PutLineageSubgraphRequest::_internal_event_edges_size() const {
  return _impl_.event_edges_.size();
}
inline int PutLineageSubgraphRequest::event_edges_size() const {
  return _internal_event_edges_size();
}
inline void PutLineageSubgraphRequest::clear_event_edges() {
  _impl_.event_edges_.Clear();
}
inline ::ml_metadata::PutLineageSubgraphRequest_EventEdge* PutLineageSubgraphRequest::mutable_event_edges(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.event_edges)
  return _impl_.event_edges_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >*
PutLineageSubgraphRequest::mutable_event_edges() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphRequest.event_edges)
  return &_impl_.event_edges_;
}
inline const ::ml_metadata::PutLineageSubgraphRequest_EventEdge& PutLineageSubgraphRequest::_internal_event_edges(int index) const {
  return _impl_.event_edges_.Get(index);
}
inline const ::ml_metadata::PutLineageSubgraphRequest_EventEdge& PutLineageSubgraphRequest::event_edges(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.event_edges)
  return _internal_event_edges(index);
}
inline ::ml_metadata::PutLineageSubgraphRequest_EventEdge* PutLineageSubgraphRequest::_internal_add_event_edges() {
  return _impl_.event_edges_.Add();
}
inline ::ml_metadata::PutLineageSubgraphRequest_EventEdge* PutLineageSubgraphRequest::add_event_edges() {
  ::ml_metadata::PutLineageSubgraphRequest_EventEdge* _add = _internal_add_event_edges();
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphRequest.event_edges)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >&
PutLineageSubgraphRequest::event_edges() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphRequest.event_edges)
  return _impl_.event_edges_;
}

// optional .ml_metadata.PutLineageSubgraphRequest.Options options = 5;
inline bool PutLineageSubgraphRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool PutLineageSubgraphRequest::has_options() const {
  return _internal_has_options();
}
inline void PutLineageSubgraphRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ml_metadata::PutLineageSubgraphRequest_Options& PutLineageSubgraphRequest::_internal_options() const {
  const ::ml_metadata::PutLineageSubgraphRequest_Options* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::PutLineageSubgraphRequest_Options&>(
      ::ml_metadata::_PutLineageSubgraphRequest_Options_default_instance_);
}
inline const ::ml_metadata::PutLineageSubgraphRequest_Options& PutLineageSubgraphRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.options)
  return _internal_options();
}
inline void PutLineageSubgraphRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::PutLineageSubgraphRequest_Options* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutLineageSubgraphRequest.options)
}
inline ::ml_metadata::PutLineageSubgraphRequest_Options* PutLineageSubgraphRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::PutLineageSubgraphRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::PutLineageSubgraphRequest_Options* PutLineageSubgraphRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutLineageSubgraphRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::PutLineageSubgraphRequest_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::PutLineageSubgraphRequest_Options* PutLineageSubgraphRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::PutLineageSubgraphRequest_Options>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::PutLineageSubgraphRequest_Options* PutLineageSubgraphRequest::mutable_options() {
  ::ml_metadata::PutLineageSubgraphRequest_Options* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.options)
  return _msg;
}
inline void PutLineageSubgraphRequest::set_allocated_options(::ml_metadata::PutLineageSubgraphRequest_Options* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.options_;
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(options);
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutLineageSubgraphRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 6;
inline bool PutLineageSubgraphRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutLineageSubgraphRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutLineageSubgraphRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutLineageSubgraphRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutLineageSubgraphRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutLineageSubgraphRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutLineageSubgraphRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutLineageSubgraphRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutLineageSubgraphRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutLineageSubgraphRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutLineageSubgraphRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutLineageSubgraphRequest.transaction_options)
  return _msg;
}
inline void PutLineageSubgraphRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutLineageSubgraphRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutLineageSubgraphResponse

// repeated int64 execution_ids = 1 [packed = true];
inline int PutLineageSubgraphResponse::_internal_execution_ids_size() const {
  return _impl_.execution_ids_.size();
}
inline int PutLineageSubgraphResponse::execution_ids_size() const {
  return _internal_execution_ids_size();
}
inline void PutLineageSubgraphResponse::clear_execution_ids() {
  _impl_.execution_ids_.Clear();
}
inline int64_t PutLineageSubgraphResponse::_internal_execution_ids(int index) const {
  return _impl_.execution_ids_.Get(index);
}
inline int64_t PutLineageSubgraphResponse::execution_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphResponse.execution_ids)
  return _internal_execution_ids(index);
}
inline void PutLineageSubgraphResponse::set_execution_ids(int index, int64_t value) {
  _impl_.execution_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphResponse.execution_ids)
}
inline void PutLineageSubgraphResponse::_internal_add_execution_ids(int64_t value) {
  _impl_.execution_ids_.Add(value);
}
inline void PutLineageSubgraphResponse::add_execution_ids(int64_t value) {
  _internal_add_execution_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphResponse.execution_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::_internal_execution_ids() const {
  return _impl_.execution_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::execution_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphResponse.execution_ids)
  return _internal_execution_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::_internal_mutable_execution_ids() {
  return &_impl_.execution_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::mutable_execution_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphResponse.execution_ids)
  return _internal_mutable_execution_ids();
}

// repeated int64 artifact_ids = 2 [packed = true];
inline int PutLineageSubgraphResponse::_internal_artifact_ids_size() const {
  return _impl_.artifact_ids_.size();
}
inline int PutLineageSubgraphResponse::artifact_ids_size() const {
  return _internal_artifact_ids_size();
}
inline void PutLineageSubgraphResponse::clear_artifact_ids() {
  _impl_.artifact_ids_.Clear();
}
inline int64_t PutLineageSubgraphResponse::_internal_artifact_ids(int index) const {
  return _impl_.artifact_ids_.Get(index);
}
inline int64_t PutLineageSubgraphResponse::artifact_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphResponse.artifact_ids)
  return _internal_artifact_ids(index);
}
inline void PutLineageSubgraphResponse::set_artifact_ids(int index, int64_t value) {
  _impl_.artifact_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphResponse.artifact_ids)
}
inline void PutLineageSubgraphResponse::_internal_add_artifact_ids(int64_t value) {
  _impl_.artifact_ids_.Add(value);
}
inline void PutLineageSubgraphResponse::add_artifact_ids(int64_t value) {
  _internal_add_artifact_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphResponse.artifact_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::_internal_artifact_ids() const {
  return _impl_.artifact_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::artifact_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphResponse.artifact_ids)
  return _internal_artifact_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::_internal_mutable_artifact_ids() {
  return &_impl_.artifact_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::mutable_artifact_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphResponse.artifact_ids)
  return _internal_mutable_artifact_ids();
}

// repeated int64 context_ids = 3 [packed = true];
inline int PutLineageSubgraphResponse::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int PutLineageSubgraphResponse::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void PutLineageSubgraphResponse::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t PutLineageSubgraphResponse::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t PutLineageSubgraphResponse::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutLineageSubgraphResponse.context_ids)
  return _internal_context_ids(index);
}
inline void PutLineageSubgraphResponse::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutLineageSubgraphResponse.context_ids)
}
inline void PutLineageSubgraphResponse::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void PutLineageSubgraphResponse::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutLineageSubgraphResponse.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutLineageSubgraphResponse::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutLineageSubgraphResponse.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutLineageSubgraphResponse::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutLineageSubgraphResponse.context_ids)
  return _internal_mutable_context_ids();
}

// -------------------------------------------------------------------

// PutTypesRequest

// repeated .ml_metadata.ArtifactType artifact_types = 1;
inline int PutTypesRequest::_internal_artifact_types_size() const {
  return _impl_.artifact_types_.size();
}
inline int PutTypesRequest::artifact_types_size() const {
  return _internal_artifact_types_size();
}
inline ::ml_metadata::ArtifactType* PutTypesRequest::mutable_artifact_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutTypesRequest.artifact_types)
  return _impl_.artifact_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
PutTypesRequest::mutable_artifact_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesRequest.artifact_types)
  return &_impl_.artifact_types_;
}
inline const ::ml_metadata::ArtifactType& PutTypesRequest::_internal_artifact_types(int index) const {
  return _impl_.artifact_types_.Get(index);
}
inline const ::ml_metadata::ArtifactType& PutTypesRequest::artifact_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.artifact_types)
  return _internal_artifact_types(index);
}
inline ::ml_metadata::ArtifactType* PutTypesRequest::_internal_add_artifact_types() {
  return _impl_.artifact_types_.Add();
}
inline ::ml_metadata::ArtifactType* PutTypesRequest::add_artifact_types() {
  ::ml_metadata::ArtifactType* _add = _internal_add_artifact_types();
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesRequest.artifact_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
PutTypesRequest::artifact_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesRequest.artifact_types)
  return _impl_.artifact_types_;
}

// repeated .ml_metadata.ExecutionType execution_types = 2;
inline int PutTypesRequest::_internal_execution_types_size() const {
  return _impl_.execution_types_.size();
}
inline int PutTypesRequest::execution_types_size() const {
  return _internal_execution_types_size();
}
inline ::ml_metadata::ExecutionType* PutTypesRequest::mutable_execution_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutTypesRequest.execution_types)
  return _impl_.execution_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
PutTypesRequest::mutable_execution_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesRequest.execution_types)
  return &_impl_.execution_types_;
}
inline const ::ml_metadata::ExecutionType& PutTypesRequest::_internal_execution_types(int index) const {
  return _impl_.execution_types_.Get(index);
}
inline const ::ml_metadata::ExecutionType& PutTypesRequest::execution_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.execution_types)
  return _internal_execution_types(index);
}
inline ::ml_metadata::ExecutionType* PutTypesRequest::_internal_add_execution_types() {
  return _impl_.execution_types_.Add();
}
inline ::ml_metadata::ExecutionType* PutTypesRequest::add_execution_types() {
  ::ml_metadata::ExecutionType* _add = _internal_add_execution_types();
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesRequest.execution_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
PutTypesRequest::execution_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesRequest.execution_types)
  return _impl_.execution_types_;
}

// repeated .ml_metadata.ContextType context_types = 3;
inline int PutTypesRequest::_internal_context_types_size() const {
  return _impl_.context_types_.size();
}
inline int PutTypesRequest::context_types_size() const {
  return _internal_context_types_size();
}
inline ::ml_metadata::ContextType* PutTypesRequest::mutable_context_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutTypesRequest.context_types)
  return _impl_.context_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
PutTypesRequest::mutable_context_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesRequest.context_types)
  return &_impl_.context_types_;
}
inline const ::ml_metadata::ContextType& PutTypesRequest::_internal_context_types(int index) const {
  return _impl_.context_types_.Get(index);
}
inline const ::ml_metadata::ContextType& PutTypesRequest::context_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.context_types)
  return _internal_context_types(index);
}
inline ::ml_metadata::ContextType* PutTypesRequest::_internal_add_context_types() {
  return _impl_.context_types_.Add();
}
inline ::ml_metadata::ContextType* PutTypesRequest::add_context_types() {
  ::ml_metadata::ContextType* _add = _internal_add_context_types();
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesRequest.context_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
PutTypesRequest::context_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesRequest.context_types)
  return _impl_.context_types_;
}

// optional bool can_add_fields = 4;
inline bool PutTypesRequest::_internal_has_can_add_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PutTypesRequest::has_can_add_fields() const {
  return _internal_has_can_add_fields();
}
inline void PutTypesRequest::clear_can_add_fields() {
  _impl_.can_add_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool PutTypesRequest::_internal_can_add_fields() const {
  return _impl_.can_add_fields_;
}
inline bool PutTypesRequest::can_add_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.can_add_fields)
  return _internal_can_add_fields();
}
inline void PutTypesRequest::_internal_set_can_add_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.can_add_fields_ = value;
}
inline void PutTypesRequest::set_can_add_fields(bool value) {
  _internal_set_can_add_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesRequest.can_add_fields)
}

// optional bool can_omit_fields = 7;
inline bool PutTypesRequest::_internal_has_can_omit_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutTypesRequest::has_can_omit_fields() const {
  return _internal_has_can_omit_fields();
}
inline void PutTypesRequest::clear_can_omit_fields() {
  _impl_.can_omit_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PutTypesRequest::_internal_can_omit_fields() const {
  return _impl_.can_omit_fields_;
}
inline bool PutTypesRequest::can_omit_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.can_omit_fields)
  return _internal_can_omit_fields();
}
inline void PutTypesRequest::_internal_set_can_omit_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.can_omit_fields_ = value;
}
inline void PutTypesRequest::set_can_omit_fields(bool value) {
  _internal_set_can_omit_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesRequest.can_omit_fields)
}

// optional bool can_delete_fields = 5 [deprecated = true];
inline bool PutTypesRequest::_internal_has_can_delete_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PutTypesRequest::has_can_delete_fields() const {
  return _internal_has_can_delete_fields();
}
inline void PutTypesRequest::clear_can_delete_fields() {
  _impl_.can_delete_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutTypesRequest::_internal_can_delete_fields() const {
  return _impl_.can_delete_fields_;
}
inline bool PutTypesRequest::can_delete_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.can_delete_fields)
  return _internal_can_delete_fields();
}
inline void PutTypesRequest::_internal_set_can_delete_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.can_delete_fields_ = value;
}
inline void PutTypesRequest::set_can_delete_fields(bool value) {
  _internal_set_can_delete_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesRequest.can_delete_fields)
}

// optional bool all_fields_match = 6 [default = true, deprecated = true];
inline bool PutTypesRequest::_internal_has_all_fields_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PutTypesRequest::has_all_fields_match() const {
  return _internal_has_all_fields_match();
}
inline void PutTypesRequest::clear_all_fields_match() {
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PutTypesRequest::_internal_all_fields_match() const {
  return _impl_.all_fields_match_;
}
inline bool PutTypesRequest::all_fields_match() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.all_fields_match)
  return _internal_all_fields_match();
}
inline void PutTypesRequest::_internal_set_all_fields_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.all_fields_match_ = value;
}
inline void PutTypesRequest::set_all_fields_match(bool value) {
  _internal_set_all_fields_match(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesRequest.all_fields_match)
}

// optional .ml_metadata.TransactionOptions transaction_options = 8;
inline bool PutTypesRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutTypesRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutTypesRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutTypesRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutTypesRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutTypesRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutTypesRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutTypesRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutTypesRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutTypesRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutTypesRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutTypesRequest.transaction_options)
  return _msg;
}
inline void PutTypesRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutTypesRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutTypesResponse

// repeated int64 artifact_type_ids = 1;
inline int PutTypesResponse::_internal_artifact_type_ids_size() const {
  return _impl_.artifact_type_ids_.size();
}
inline int PutTypesResponse::artifact_type_ids_size() const {
  return _internal_artifact_type_ids_size();
}
inline void PutTypesResponse::clear_artifact_type_ids() {
  _impl_.artifact_type_ids_.Clear();
}
inline int64_t PutTypesResponse::_internal_artifact_type_ids(int index) const {
  return _impl_.artifact_type_ids_.Get(index);
}
inline int64_t PutTypesResponse::artifact_type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesResponse.artifact_type_ids)
  return _internal_artifact_type_ids(index);
}
inline void PutTypesResponse::set_artifact_type_ids(int index, int64_t value) {
  _impl_.artifact_type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesResponse.artifact_type_ids)
}
inline void PutTypesResponse::_internal_add_artifact_type_ids(int64_t value) {
  _impl_.artifact_type_ids_.Add(value);
}
inline void PutTypesResponse::add_artifact_type_ids(int64_t value) {
  _internal_add_artifact_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesResponse.artifact_type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::_internal_artifact_type_ids() const {
  return _impl_.artifact_type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::artifact_type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesResponse.artifact_type_ids)
  return _internal_artifact_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::_internal_mutable_artifact_type_ids() {
  return &_impl_.artifact_type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::mutable_artifact_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesResponse.artifact_type_ids)
  return _internal_mutable_artifact_type_ids();
}

// repeated int64 execution_type_ids = 2;
inline int PutTypesResponse::_internal_execution_type_ids_size() const {
  return _impl_.execution_type_ids_.size();
}
inline int PutTypesResponse::execution_type_ids_size() const {
  return _internal_execution_type_ids_size();
}
inline void PutTypesResponse::clear_execution_type_ids() {
  _impl_.execution_type_ids_.Clear();
}
inline int64_t PutTypesResponse::_internal_execution_type_ids(int index) const {
  return _impl_.execution_type_ids_.Get(index);
}
inline int64_t PutTypesResponse::execution_type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesResponse.execution_type_ids)
  return _internal_execution_type_ids(index);
}
inline void PutTypesResponse::set_execution_type_ids(int index, int64_t value) {
  _impl_.execution_type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesResponse.execution_type_ids)
}
inline void PutTypesResponse::_internal_add_execution_type_ids(int64_t value) {
  _impl_.execution_type_ids_.Add(value);
}
inline void PutTypesResponse::add_execution_type_ids(int64_t value) {
  _internal_add_execution_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesResponse.execution_type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::_internal_execution_type_ids() const {
  return _impl_.execution_type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::execution_type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesResponse.execution_type_ids)
  return _internal_execution_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::_internal_mutable_execution_type_ids() {
  return &_impl_.execution_type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::mutable_execution_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesResponse.execution_type_ids)
  return _internal_mutable_execution_type_ids();
}

// repeated int64 context_type_ids = 3;
inline int PutTypesResponse::_internal_context_type_ids_size() const {
  return _impl_.context_type_ids_.size();
}
inline int PutTypesResponse::context_type_ids_size() const {
  return _internal_context_type_ids_size();
}
inline void PutTypesResponse::clear_context_type_ids() {
  _impl_.context_type_ids_.Clear();
}
inline int64_t PutTypesResponse::_internal_context_type_ids(int index) const {
  return _impl_.context_type_ids_.Get(index);
}
inline int64_t PutTypesResponse::context_type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutTypesResponse.context_type_ids)
  return _internal_context_type_ids(index);
}
inline void PutTypesResponse::set_context_type_ids(int index, int64_t value) {
  _impl_.context_type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutTypesResponse.context_type_ids)
}
inline void PutTypesResponse::_internal_add_context_type_ids(int64_t value) {
  _impl_.context_type_ids_.Add(value);
}
inline void PutTypesResponse::add_context_type_ids(int64_t value) {
  _internal_add_context_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutTypesResponse.context_type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::_internal_context_type_ids() const {
  return _impl_.context_type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutTypesResponse::context_type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutTypesResponse.context_type_ids)
  return _internal_context_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::_internal_mutable_context_type_ids() {
  return &_impl_.context_type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutTypesResponse::mutable_context_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutTypesResponse.context_type_ids)
  return _internal_mutable_context_type_ids();
}

// -------------------------------------------------------------------

// PutContextTypeRequest

// optional .ml_metadata.ContextType context_type = 1;
inline bool PutContextTypeRequest::_internal_has_context_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_type_ != nullptr);
  return value;
}
inline bool PutContextTypeRequest::has_context_type() const {
  return _internal_has_context_type();
}
inline const ::ml_metadata::ContextType& PutContextTypeRequest::_internal_context_type() const {
  const ::ml_metadata::ContextType* p = _impl_.context_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ContextType&>(
      ::ml_metadata::_ContextType_default_instance_);
}
inline const ::ml_metadata::ContextType& PutContextTypeRequest::context_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.context_type)
  return _internal_context_type();
}
inline void PutContextTypeRequest::unsafe_arena_set_allocated_context_type(
    ::ml_metadata::ContextType* context_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_type_);
  }
  _impl_.context_type_ = context_type;
  if (context_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutContextTypeRequest.context_type)
}
inline ::ml_metadata::ContextType* PutContextTypeRequest::release_context_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ContextType* temp = _impl_.context_type_;
  _impl_.context_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ContextType* PutContextTypeRequest::unsafe_arena_release_context_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutContextTypeRequest.context_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ContextType* temp = _impl_.context_type_;
  _impl_.context_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ContextType* PutContextTypeRequest::_internal_mutable_context_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.context_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ContextType>(GetArenaForAllocation());
    _impl_.context_type_ = p;
  }
  return _impl_.context_type_;
}
inline ::ml_metadata::ContextType* PutContextTypeRequest::mutable_context_type() {
  ::ml_metadata::ContextType* _msg = _internal_mutable_context_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutContextTypeRequest.context_type)
  return _msg;
}
inline void PutContextTypeRequest::set_allocated_context_type(::ml_metadata::ContextType* context_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_type_);
  }
  if (context_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_type));
    if (message_arena != submessage_arena) {
      context_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_type_ = context_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutContextTypeRequest.context_type)
}

// optional bool can_add_fields = 2;
inline bool PutContextTypeRequest::_internal_has_can_add_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PutContextTypeRequest::has_can_add_fields() const {
  return _internal_has_can_add_fields();
}
inline void PutContextTypeRequest::clear_can_add_fields() {
  _impl_.can_add_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool PutContextTypeRequest::_internal_can_add_fields() const {
  return _impl_.can_add_fields_;
}
inline bool PutContextTypeRequest::can_add_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.can_add_fields)
  return _internal_can_add_fields();
}
inline void PutContextTypeRequest::_internal_set_can_add_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.can_add_fields_ = value;
}
inline void PutContextTypeRequest::set_can_add_fields(bool value) {
  _internal_set_can_add_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextTypeRequest.can_add_fields)
}

// optional bool can_omit_fields = 5;
inline bool PutContextTypeRequest::_internal_has_can_omit_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PutContextTypeRequest::has_can_omit_fields() const {
  return _internal_has_can_omit_fields();
}
inline void PutContextTypeRequest::clear_can_omit_fields() {
  _impl_.can_omit_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool PutContextTypeRequest::_internal_can_omit_fields() const {
  return _impl_.can_omit_fields_;
}
inline bool PutContextTypeRequest::can_omit_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.can_omit_fields)
  return _internal_can_omit_fields();
}
inline void PutContextTypeRequest::_internal_set_can_omit_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.can_omit_fields_ = value;
}
inline void PutContextTypeRequest::set_can_omit_fields(bool value) {
  _internal_set_can_omit_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextTypeRequest.can_omit_fields)
}

// optional bool can_delete_fields = 3 [deprecated = true];
inline bool PutContextTypeRequest::_internal_has_can_delete_fields() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PutContextTypeRequest::has_can_delete_fields() const {
  return _internal_has_can_delete_fields();
}
inline void PutContextTypeRequest::clear_can_delete_fields() {
  _impl_.can_delete_fields_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool PutContextTypeRequest::_internal_can_delete_fields() const {
  return _impl_.can_delete_fields_;
}
inline bool PutContextTypeRequest::can_delete_fields() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.can_delete_fields)
  return _internal_can_delete_fields();
}
inline void PutContextTypeRequest::_internal_set_can_delete_fields(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.can_delete_fields_ = value;
}
inline void PutContextTypeRequest::set_can_delete_fields(bool value) {
  _internal_set_can_delete_fields(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextTypeRequest.can_delete_fields)
}

// optional bool all_fields_match = 4 [default = true, deprecated = true];
inline bool PutContextTypeRequest::_internal_has_all_fields_match() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool PutContextTypeRequest::has_all_fields_match() const {
  return _internal_has_all_fields_match();
}
inline void PutContextTypeRequest::clear_all_fields_match() {
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool PutContextTypeRequest::_internal_all_fields_match() const {
  return _impl_.all_fields_match_;
}
inline bool PutContextTypeRequest::all_fields_match() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.all_fields_match)
  return _internal_all_fields_match();
}
inline void PutContextTypeRequest::_internal_set_all_fields_match(bool value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.all_fields_match_ = value;
}
inline void PutContextTypeRequest::set_all_fields_match(bool value) {
  _internal_set_all_fields_match(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextTypeRequest.all_fields_match)
}

// optional .ml_metadata.TransactionOptions transaction_options = 6;
inline bool PutContextTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutContextTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutContextTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutContextTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutContextTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutContextTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutContextTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutContextTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutContextTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutContextTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutContextTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutContextTypeRequest.transaction_options)
  return _msg;
}
inline void PutContextTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutContextTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutContextTypeResponse

// optional int64 type_id = 1;
inline bool PutContextTypeResponse::_internal_has_type_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PutContextTypeResponse::has_type_id() const {
  return _internal_has_type_id();
}
inline void PutContextTypeResponse::clear_type_id() {
  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t PutContextTypeResponse::_internal_type_id() const {
  return _impl_.type_id_;
}
inline int64_t PutContextTypeResponse::type_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextTypeResponse.type_id)
  return _internal_type_id();
}
inline void PutContextTypeResponse::_internal_set_type_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_id_ = value;
}
inline void PutContextTypeResponse::set_type_id(int64_t value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextTypeResponse.type_id)
}

// -------------------------------------------------------------------

// PutContextsRequest

// repeated .ml_metadata.Context contexts = 1;
inline int PutContextsRequest::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int PutContextsRequest::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* PutContextsRequest::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutContextsRequest.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
PutContextsRequest::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutContextsRequest.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& PutContextsRequest::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& PutContextsRequest::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextsRequest.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* PutContextsRequest::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* PutContextsRequest::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutContextsRequest.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
PutContextsRequest::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutContextsRequest.contexts)
  return _impl_.contexts_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool PutContextsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutContextsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutContextsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutContextsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutContextsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutContextsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutContextsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutContextsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutContextsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutContextsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutContextsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutContextsRequest.transaction_options)
  return _msg;
}
inline void PutContextsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutContextsRequest.transaction_options)
}

// optional .google.protobuf.FieldMask update_mask = 3;
inline bool PutContextsRequest::_internal_has_update_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_mask_ != nullptr);
  return value;
}
inline bool PutContextsRequest::has_update_mask() const {
  return _internal_has_update_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutContextsRequest::_internal_update_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.update_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& PutContextsRequest::update_mask() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextsRequest.update_mask)
  return _internal_update_mask();
}
inline void PutContextsRequest::unsafe_arena_set_allocated_update_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  _impl_.update_mask_ = update_mask;
  if (update_mask) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutContextsRequest.update_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutContextsRequest::release_update_mask() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutContextsRequest::unsafe_arena_release_update_mask() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutContextsRequest.update_mask)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.update_mask_;
  _impl_.update_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutContextsRequest::_internal_mutable_update_mask() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.update_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.update_mask_ = p;
  }
  return _impl_.update_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* PutContextsRequest::mutable_update_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_update_mask();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutContextsRequest.update_mask)
  return _msg;
}
inline void PutContextsRequest::set_allocated_update_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* update_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.update_mask_);
  }
  if (update_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(update_mask));
    if (message_arena != submessage_arena) {
      update_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutContextsRequest.update_mask)
}

// -------------------------------------------------------------------

// PutContextsResponse

// repeated int64 context_ids = 1;
inline int PutContextsResponse::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int PutContextsResponse::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void PutContextsResponse::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t PutContextsResponse::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t PutContextsResponse::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutContextsResponse.context_ids)
  return _internal_context_ids(index);
}
inline void PutContextsResponse::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.PutContextsResponse.context_ids)
}
inline void PutContextsResponse::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void PutContextsResponse::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.PutContextsResponse.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutContextsResponse::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
PutContextsResponse::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutContextsResponse.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutContextsResponse::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
PutContextsResponse::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutContextsResponse.context_ids)
  return _internal_mutable_context_ids();
}

// -------------------------------------------------------------------

// PutAttributionsAndAssociationsRequest

// repeated .ml_metadata.Attribution attributions = 1;
inline int PutAttributionsAndAssociationsRequest::_internal_attributions_size() const {
  return _impl_.attributions_.size();
}
inline int PutAttributionsAndAssociationsRequest::attributions_size() const {
  return _internal_attributions_size();
}
inline ::ml_metadata::Attribution* PutAttributionsAndAssociationsRequest::mutable_attributions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutAttributionsAndAssociationsRequest.attributions)
  return _impl_.attributions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Attribution >*
PutAttributionsAndAssociationsRequest::mutable_attributions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutAttributionsAndAssociationsRequest.attributions)
  return &_impl_.attributions_;
}
inline const ::ml_metadata::Attribution& PutAttributionsAndAssociationsRequest::_internal_attributions(int index) const {
  return _impl_.attributions_.Get(index);
}
inline const ::ml_metadata::Attribution& PutAttributionsAndAssociationsRequest::attributions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutAttributionsAndAssociationsRequest.attributions)
  return _internal_attributions(index);
}
inline ::ml_metadata::Attribution* PutAttributionsAndAssociationsRequest::_internal_add_attributions() {
  return _impl_.attributions_.Add();
}
inline ::ml_metadata::Attribution* PutAttributionsAndAssociationsRequest::add_attributions() {
  ::ml_metadata::Attribution* _add = _internal_add_attributions();
  // @@protoc_insertion_point(field_add:ml_metadata.PutAttributionsAndAssociationsRequest.attributions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Attribution >&
PutAttributionsAndAssociationsRequest::attributions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutAttributionsAndAssociationsRequest.attributions)
  return _impl_.attributions_;
}

// repeated .ml_metadata.Association associations = 2;
inline int PutAttributionsAndAssociationsRequest::_internal_associations_size() const {
  return _impl_.associations_.size();
}
inline int PutAttributionsAndAssociationsRequest::associations_size() const {
  return _internal_associations_size();
}
inline ::ml_metadata::Association* PutAttributionsAndAssociationsRequest::mutable_associations(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutAttributionsAndAssociationsRequest.associations)
  return _impl_.associations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Association >*
PutAttributionsAndAssociationsRequest::mutable_associations() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutAttributionsAndAssociationsRequest.associations)
  return &_impl_.associations_;
}
inline const ::ml_metadata::Association& PutAttributionsAndAssociationsRequest::_internal_associations(int index) const {
  return _impl_.associations_.Get(index);
}
inline const ::ml_metadata::Association& PutAttributionsAndAssociationsRequest::associations(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutAttributionsAndAssociationsRequest.associations)
  return _internal_associations(index);
}
inline ::ml_metadata::Association* PutAttributionsAndAssociationsRequest::_internal_add_associations() {
  return _impl_.associations_.Add();
}
inline ::ml_metadata::Association* PutAttributionsAndAssociationsRequest::add_associations() {
  ::ml_metadata::Association* _add = _internal_add_associations();
  // @@protoc_insertion_point(field_add:ml_metadata.PutAttributionsAndAssociationsRequest.associations)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Association >&
PutAttributionsAndAssociationsRequest::associations() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutAttributionsAndAssociationsRequest.associations)
  return _impl_.associations_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool PutAttributionsAndAssociationsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutAttributionsAndAssociationsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutAttributionsAndAssociationsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutAttributionsAndAssociationsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutAttributionsAndAssociationsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutAttributionsAndAssociationsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutAttributionsAndAssociationsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutAttributionsAndAssociationsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutAttributionsAndAssociationsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutAttributionsAndAssociationsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutAttributionsAndAssociationsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutAttributionsAndAssociationsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutAttributionsAndAssociationsRequest.transaction_options)
  return _msg;
}
inline void PutAttributionsAndAssociationsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutAttributionsAndAssociationsRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutAttributionsAndAssociationsResponse

// -------------------------------------------------------------------

// PutParentContextsRequest

// repeated .ml_metadata.ParentContext parent_contexts = 1;
inline int PutParentContextsRequest::_internal_parent_contexts_size() const {
  return _impl_.parent_contexts_.size();
}
inline int PutParentContextsRequest::parent_contexts_size() const {
  return _internal_parent_contexts_size();
}
inline ::ml_metadata::ParentContext* PutParentContextsRequest::mutable_parent_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutParentContextsRequest.parent_contexts)
  return _impl_.parent_contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ParentContext >*
PutParentContextsRequest::mutable_parent_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.PutParentContextsRequest.parent_contexts)
  return &_impl_.parent_contexts_;
}
inline const ::ml_metadata::ParentContext& PutParentContextsRequest::_internal_parent_contexts(int index) const {
  return _impl_.parent_contexts_.Get(index);
}
inline const ::ml_metadata::ParentContext& PutParentContextsRequest::parent_contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutParentContextsRequest.parent_contexts)
  return _internal_parent_contexts(index);
}
inline ::ml_metadata::ParentContext* PutParentContextsRequest::_internal_add_parent_contexts() {
  return _impl_.parent_contexts_.Add();
}
inline ::ml_metadata::ParentContext* PutParentContextsRequest::add_parent_contexts() {
  ::ml_metadata::ParentContext* _add = _internal_add_parent_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.PutParentContextsRequest.parent_contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ParentContext >&
PutParentContextsRequest::parent_contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.PutParentContextsRequest.parent_contexts)
  return _impl_.parent_contexts_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool PutParentContextsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool PutParentContextsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& PutParentContextsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& PutParentContextsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.PutParentContextsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void PutParentContextsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.PutParentContextsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* PutParentContextsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutParentContextsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.PutParentContextsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* PutParentContextsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* PutParentContextsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.PutParentContextsRequest.transaction_options)
  return _msg;
}
inline void PutParentContextsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.PutParentContextsRequest.transaction_options)
}

// -------------------------------------------------------------------

// PutParentContextsResponse

// -------------------------------------------------------------------

// GetArtifactsByTypeRequest

// optional string type_name = 1;
inline bool GetArtifactsByTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactsByTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetArtifactsByTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactsByTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactsByTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByTypeRequest.type_name)
}
inline std::string* GetArtifactsByTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeRequest.type_name)
  return _s;
}
inline const std::string& GetArtifactsByTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetArtifactsByTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactsByTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByTypeRequest.type_name)
}

// optional string type_version = 2;
inline bool GetArtifactsByTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetArtifactsByTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetArtifactsByTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetArtifactsByTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactsByTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByTypeRequest.type_version)
}
inline std::string* GetArtifactsByTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeRequest.type_version)
  return _s;
}
inline const std::string& GetArtifactsByTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetArtifactsByTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactsByTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByTypeRequest.type_version)
}

// optional .ml_metadata.ListOperationOptions options = 3;
inline bool GetArtifactsByTypeRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetArtifactsByTypeRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsByTypeRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsByTypeRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeRequest.options)
  return _internal_options();
}
inline void GetArtifactsByTypeRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByTypeRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByTypeRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByTypeRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByTypeRequest.options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByTypeRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByTypeRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeRequest.options)
  return _msg;
}
inline void GetArtifactsByTypeRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByTypeRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetArtifactsByTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsByTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsByTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsByTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsByTypeResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsByTypeResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsByTypeResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsByTypeResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsByTypeResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByTypeResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsByTypeResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsByTypeResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsByTypeResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsByTypeResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByTypeResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsByTypeResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByTypeResponse.artifacts)
  return _impl_.artifacts_;
}

// optional string next_page_token = 2;
inline bool GetArtifactsByTypeResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactsByTypeResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetArtifactsByTypeResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactsByTypeResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByTypeResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactsByTypeResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByTypeResponse.next_page_token)
}
inline std::string* GetArtifactsByTypeResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByTypeResponse.next_page_token)
  return _s;
}
inline const std::string& GetArtifactsByTypeResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetArtifactsByTypeResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactsByTypeResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByTypeResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactsByTypeResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByTypeResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetArtifactByTypeAndNameRequest

// optional string type_name = 1;
inline bool GetArtifactByTypeAndNameRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactByTypeAndNameRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetArtifactByTypeAndNameRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactByTypeAndNameRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactByTypeAndNameRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactByTypeAndNameRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactByTypeAndNameRequest.type_name)
}
inline std::string* GetArtifactByTypeAndNameRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactByTypeAndNameRequest.type_name)
  return _s;
}
inline const std::string& GetArtifactByTypeAndNameRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetArtifactByTypeAndNameRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactByTypeAndNameRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactByTypeAndNameRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactByTypeAndNameRequest.type_name)
}

// optional string type_version = 3;
inline bool GetArtifactByTypeAndNameRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetArtifactByTypeAndNameRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetArtifactByTypeAndNameRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GetArtifactByTypeAndNameRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactByTypeAndNameRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactByTypeAndNameRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactByTypeAndNameRequest.type_version)
}
inline std::string* GetArtifactByTypeAndNameRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactByTypeAndNameRequest.type_version)
  return _s;
}
inline const std::string& GetArtifactByTypeAndNameRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetArtifactByTypeAndNameRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactByTypeAndNameRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactByTypeAndNameRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactByTypeAndNameRequest.type_version)
}

// optional string artifact_name = 2;
inline bool GetArtifactByTypeAndNameRequest::_internal_has_artifact_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetArtifactByTypeAndNameRequest::has_artifact_name() const {
  return _internal_has_artifact_name();
}
inline void GetArtifactByTypeAndNameRequest::clear_artifact_name() {
  _impl_.artifact_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetArtifactByTypeAndNameRequest::artifact_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name)
  return _internal_artifact_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactByTypeAndNameRequest::set_artifact_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.artifact_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name)
}
inline std::string* GetArtifactByTypeAndNameRequest::mutable_artifact_name() {
  std::string* _s = _internal_mutable_artifact_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name)
  return _s;
}
inline const std::string& GetArtifactByTypeAndNameRequest::_internal_artifact_name() const {
  return _impl_.artifact_name_.Get();
}
inline void GetArtifactByTypeAndNameRequest::_internal_set_artifact_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.artifact_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::_internal_mutable_artifact_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.artifact_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactByTypeAndNameRequest::release_artifact_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name)
  if (!_internal_has_artifact_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.artifact_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.artifact_name_.IsDefault()) {
    _impl_.artifact_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactByTypeAndNameRequest::set_allocated_artifact_name(std::string* artifact_name) {
  if (artifact_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.artifact_name_.SetAllocated(artifact_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.artifact_name_.IsDefault()) {
    _impl_.artifact_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetArtifactByTypeAndNameRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactByTypeAndNameRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactByTypeAndNameRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactByTypeAndNameRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactByTypeAndNameRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactByTypeAndNameRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactByTypeAndNameRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactByTypeAndNameRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactByTypeAndNameRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactByTypeAndNameRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactByTypeAndNameRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactByTypeAndNameRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactByTypeAndNameRequest.transaction_options)
  return _msg;
}
inline void GetArtifactByTypeAndNameRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactByTypeAndNameRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactByTypeAndNameResponse

// optional .ml_metadata.Artifact artifact = 1;
inline bool GetArtifactByTypeAndNameResponse::_internal_has_artifact() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.artifact_ != nullptr);
  return value;
}
inline bool GetArtifactByTypeAndNameResponse::has_artifact() const {
  return _internal_has_artifact();
}
inline const ::ml_metadata::Artifact& GetArtifactByTypeAndNameResponse::_internal_artifact() const {
  const ::ml_metadata::Artifact* p = _impl_.artifact_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Artifact&>(
      ::ml_metadata::_Artifact_default_instance_);
}
inline const ::ml_metadata::Artifact& GetArtifactByTypeAndNameResponse::artifact() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactByTypeAndNameResponse.artifact)
  return _internal_artifact();
}
inline void GetArtifactByTypeAndNameResponse::unsafe_arena_set_allocated_artifact(
    ::ml_metadata::Artifact* artifact) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  _impl_.artifact_ = artifact;
  if (artifact) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactByTypeAndNameResponse.artifact)
}
inline ::ml_metadata::Artifact* GetArtifactByTypeAndNameResponse::release_artifact() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Artifact* GetArtifactByTypeAndNameResponse::unsafe_arena_release_artifact() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactByTypeAndNameResponse.artifact)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Artifact* temp = _impl_.artifact_;
  _impl_.artifact_ = nullptr;
  return temp;
}
inline ::ml_metadata::Artifact* GetArtifactByTypeAndNameResponse::_internal_mutable_artifact() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.artifact_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Artifact>(GetArenaForAllocation());
    _impl_.artifact_ = p;
  }
  return _impl_.artifact_;
}
inline ::ml_metadata::Artifact* GetArtifactByTypeAndNameResponse::mutable_artifact() {
  ::ml_metadata::Artifact* _msg = _internal_mutable_artifact();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactByTypeAndNameResponse.artifact)
  return _msg;
}
inline void GetArtifactByTypeAndNameResponse::set_allocated_artifact(::ml_metadata::Artifact* artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_);
  }
  if (artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(artifact));
    if (message_arena != submessage_arena) {
      artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.artifact_ = artifact;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactByTypeAndNameResponse.artifact)
}

// -------------------------------------------------------------------

// GetArtifactsByIDRequest

// repeated int64 artifact_ids = 1;
inline int GetArtifactsByIDRequest::_internal_artifact_ids_size() const {
  return _impl_.artifact_ids_.size();
}
inline int GetArtifactsByIDRequest::artifact_ids_size() const {
  return _internal_artifact_ids_size();
}
inline void GetArtifactsByIDRequest::clear_artifact_ids() {
  _impl_.artifact_ids_.Clear();
}
inline int64_t GetArtifactsByIDRequest::_internal_artifact_ids(int index) const {
  return _impl_.artifact_ids_.Get(index);
}
inline int64_t GetArtifactsByIDRequest::artifact_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByIDRequest.artifact_ids)
  return _internal_artifact_ids(index);
}
inline void GetArtifactsByIDRequest::set_artifact_ids(int index, int64_t value) {
  _impl_.artifact_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByIDRequest.artifact_ids)
}
inline void GetArtifactsByIDRequest::_internal_add_artifact_ids(int64_t value) {
  _impl_.artifact_ids_.Add(value);
}
inline void GetArtifactsByIDRequest::add_artifact_ids(int64_t value) {
  _internal_add_artifact_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByIDRequest.artifact_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetArtifactsByIDRequest::_internal_artifact_ids() const {
  return _impl_.artifact_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetArtifactsByIDRequest::artifact_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByIDRequest.artifact_ids)
  return _internal_artifact_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetArtifactsByIDRequest::_internal_mutable_artifact_ids() {
  return &_impl_.artifact_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetArtifactsByIDRequest::mutable_artifact_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByIDRequest.artifact_ids)
  return _internal_mutable_artifact_ids();
}

// optional bool populate_artifact_types = 3 [default = false];
inline bool GetArtifactsByIDRequest::_internal_has_populate_artifact_types() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetArtifactsByIDRequest::has_populate_artifact_types() const {
  return _internal_has_populate_artifact_types();
}
inline void GetArtifactsByIDRequest::clear_populate_artifact_types() {
  _impl_.populate_artifact_types_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool GetArtifactsByIDRequest::_internal_populate_artifact_types() const {
  return _impl_.populate_artifact_types_;
}
inline bool GetArtifactsByIDRequest::populate_artifact_types() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByIDRequest.populate_artifact_types)
  return _internal_populate_artifact_types();
}
inline void GetArtifactsByIDRequest::_internal_set_populate_artifact_types(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.populate_artifact_types_ = value;
}
inline void GetArtifactsByIDRequest::set_populate_artifact_types(bool value) {
  _internal_set_populate_artifact_types(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByIDRequest.populate_artifact_types)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetArtifactsByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByIDRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsByIDResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsByIDResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsByIDResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsByIDResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByIDResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsByIDResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByIDResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsByIDResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsByIDResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByIDResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsByIDResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsByIDResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByIDResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsByIDResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByIDResponse.artifacts)
  return _impl_.artifacts_;
}

// repeated .ml_metadata.ArtifactType artifact_types = 2;
inline int GetArtifactsByIDResponse::_internal_artifact_types_size() const {
  return _impl_.artifact_types_.size();
}
inline int GetArtifactsByIDResponse::artifact_types_size() const {
  return _internal_artifact_types_size();
}
inline ::ml_metadata::ArtifactType* GetArtifactsByIDResponse::mutable_artifact_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByIDResponse.artifact_types)
  return _impl_.artifact_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
GetArtifactsByIDResponse::mutable_artifact_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByIDResponse.artifact_types)
  return &_impl_.artifact_types_;
}
inline const ::ml_metadata::ArtifactType& GetArtifactsByIDResponse::_internal_artifact_types(int index) const {
  return _impl_.artifact_types_.Get(index);
}
inline const ::ml_metadata::ArtifactType& GetArtifactsByIDResponse::artifact_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByIDResponse.artifact_types)
  return _internal_artifact_types(index);
}
inline ::ml_metadata::ArtifactType* GetArtifactsByIDResponse::_internal_add_artifact_types() {
  return _impl_.artifact_types_.Add();
}
inline ::ml_metadata::ArtifactType* GetArtifactsByIDResponse::add_artifact_types() {
  ::ml_metadata::ArtifactType* _add = _internal_add_artifact_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByIDResponse.artifact_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
GetArtifactsByIDResponse::artifact_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByIDResponse.artifact_types)
  return _impl_.artifact_types_;
}

// -------------------------------------------------------------------

// GetArtifactsRequest

// optional .ml_metadata.ListOperationOptions options = 1;
inline bool GetArtifactsRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetArtifactsRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsRequest.options)
  return _internal_options();
}
inline void GetArtifactsRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsRequest.options)
  return _msg;
}
inline void GetArtifactsRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetArtifactsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsResponse.artifacts)
  return _impl_.artifacts_;
}

// optional string next_page_token = 2;
inline bool GetArtifactsResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactsResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetArtifactsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsResponse.next_page_token)
}
inline std::string* GetArtifactsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsResponse.next_page_token)
  return _s;
}
inline const std::string& GetArtifactsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetArtifactsResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactsResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetArtifactsByURIRequest

// repeated string uris = 2;
inline int GetArtifactsByURIRequest::_internal_uris_size() const {
  return _impl_.uris_.size();
}
inline int GetArtifactsByURIRequest::uris_size() const {
  return _internal_uris_size();
}
inline void GetArtifactsByURIRequest::clear_uris() {
  _impl_.uris_.Clear();
}
inline std::string* GetArtifactsByURIRequest::add_uris() {
  std::string* _s = _internal_add_uris();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetArtifactsByURIRequest.uris)
  return _s;
}
inline const std::string& GetArtifactsByURIRequest::_internal_uris(int index) const {
  return _impl_.uris_.Get(index);
}
inline const std::string& GetArtifactsByURIRequest::uris(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByURIRequest.uris)
  return _internal_uris(index);
}
inline std::string* GetArtifactsByURIRequest::mutable_uris(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByURIRequest.uris)
  return _impl_.uris_.Mutable(index);
}
inline void GetArtifactsByURIRequest::set_uris(int index, const std::string& value) {
  _impl_.uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::set_uris(int index, std::string&& value) {
  _impl_.uris_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::set_uris(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.uris_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::set_uris(int index, const char* value, size_t size) {
  _impl_.uris_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline std::string* GetArtifactsByURIRequest::_internal_add_uris() {
  return _impl_.uris_.Add();
}
inline void GetArtifactsByURIRequest::add_uris(const std::string& value) {
  _impl_.uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::add_uris(std::string&& value) {
  _impl_.uris_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::add_uris(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.uris_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline void GetArtifactsByURIRequest::add_uris(const char* value, size_t size) {
  _impl_.uris_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetArtifactsByURIRequest.uris)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetArtifactsByURIRequest::uris() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByURIRequest.uris)
  return _impl_.uris_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetArtifactsByURIRequest::mutable_uris() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByURIRequest.uris)
  return &_impl_.uris_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetArtifactsByURIRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsByURIRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByURIRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByURIRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByURIRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsByURIRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByURIRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByURIRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByURIRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByURIRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByURIRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByURIRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByURIRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsByURIRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByURIRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsByURIResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsByURIResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsByURIResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsByURIResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByURIResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsByURIResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByURIResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsByURIResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsByURIResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByURIResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsByURIResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsByURIResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByURIResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsByURIResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByURIResponse.artifacts)
  return _impl_.artifacts_;
}

// -------------------------------------------------------------------

// GetExecutionsRequest

// optional .ml_metadata.ListOperationOptions options = 1;
inline bool GetExecutionsRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetExecutionsRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsRequest.options)
  return _internal_options();
}
inline void GetExecutionsRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsRequest.options)
  return _msg;
}
inline void GetExecutionsRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetExecutionsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsRequest.transaction_options)
  return _msg;
}
inline void GetExecutionsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionsResponse

// repeated .ml_metadata.Execution executions = 1;
inline int GetExecutionsResponse::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int GetExecutionsResponse::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* GetExecutionsResponse::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsResponse.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
GetExecutionsResponse::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsResponse.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& GetExecutionsResponse::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& GetExecutionsResponse::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsResponse.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* GetExecutionsResponse::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* GetExecutionsResponse::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsResponse.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
GetExecutionsResponse::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsResponse.executions)
  return _impl_.executions_;
}

// optional string next_page_token = 2;
inline bool GetExecutionsResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionsResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetExecutionsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsResponse.next_page_token)
}
inline std::string* GetExecutionsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsResponse.next_page_token)
  return _s;
}
inline const std::string& GetExecutionsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetExecutionsResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionsResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetArtifactTypeRequest

// optional string type_name = 1;
inline bool GetArtifactTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetArtifactTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactTypeRequest.type_name)
}
inline std::string* GetArtifactTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypeRequest.type_name)
  return _s;
}
inline const std::string& GetArtifactTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetArtifactTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypeRequest.type_name)
}

// optional string type_version = 2;
inline bool GetArtifactTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetArtifactTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetArtifactTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetArtifactTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactTypeRequest.type_version)
}
inline std::string* GetArtifactTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypeRequest.type_version)
  return _s;
}
inline const std::string& GetArtifactTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetArtifactTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypeRequest.type_version)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetArtifactTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypeRequest.transaction_options)
  return _msg;
}
inline void GetArtifactTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactTypeResponse

// optional .ml_metadata.ArtifactType artifact_type = 1;
inline bool GetArtifactTypeResponse::_internal_has_artifact_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.artifact_type_ != nullptr);
  return value;
}
inline bool GetArtifactTypeResponse::has_artifact_type() const {
  return _internal_has_artifact_type();
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypeResponse::_internal_artifact_type() const {
  const ::ml_metadata::ArtifactType* p = _impl_.artifact_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ArtifactType&>(
      ::ml_metadata::_ArtifactType_default_instance_);
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypeResponse::artifact_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypeResponse.artifact_type)
  return _internal_artifact_type();
}
inline void GetArtifactTypeResponse::unsafe_arena_set_allocated_artifact_type(
    ::ml_metadata::ArtifactType* artifact_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_type_);
  }
  _impl_.artifact_type_ = artifact_type;
  if (artifact_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactTypeResponse.artifact_type)
}
inline ::ml_metadata::ArtifactType* GetArtifactTypeResponse::release_artifact_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ArtifactType* temp = _impl_.artifact_type_;
  _impl_.artifact_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ArtifactType* GetArtifactTypeResponse::unsafe_arena_release_artifact_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypeResponse.artifact_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ArtifactType* temp = _impl_.artifact_type_;
  _impl_.artifact_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ArtifactType* GetArtifactTypeResponse::_internal_mutable_artifact_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.artifact_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ArtifactType>(GetArenaForAllocation());
    _impl_.artifact_type_ = p;
  }
  return _impl_.artifact_type_;
}
inline ::ml_metadata::ArtifactType* GetArtifactTypeResponse::mutable_artifact_type() {
  ::ml_metadata::ArtifactType* _msg = _internal_mutable_artifact_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypeResponse.artifact_type)
  return _msg;
}
inline void GetArtifactTypeResponse::set_allocated_artifact_type(::ml_metadata::ArtifactType* artifact_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.artifact_type_);
  }
  if (artifact_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(artifact_type));
    if (message_arena != submessage_arena) {
      artifact_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.artifact_type_ = artifact_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypeResponse.artifact_type)
}

// -------------------------------------------------------------------

// GetArtifactTypesRequest

// optional .ml_metadata.TransactionOptions transaction_options = 1;
inline bool GetArtifactTypesRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactTypesRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactTypesRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactTypesRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypesRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesRequest.transaction_options)
  return _msg;
}
inline void GetArtifactTypesRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypesRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactTypesResponse

// repeated .ml_metadata.ArtifactType artifact_types = 1;
inline int GetArtifactTypesResponse::_internal_artifact_types_size() const {
  return _impl_.artifact_types_.size();
}
inline int GetArtifactTypesResponse::artifact_types_size() const {
  return _internal_artifact_types_size();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesResponse::mutable_artifact_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesResponse.artifact_types)
  return _impl_.artifact_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
GetArtifactTypesResponse::mutable_artifact_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactTypesResponse.artifact_types)
  return &_impl_.artifact_types_;
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesResponse::_internal_artifact_types(int index) const {
  return _impl_.artifact_types_.Get(index);
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesResponse::artifact_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesResponse.artifact_types)
  return _internal_artifact_types(index);
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesResponse::_internal_add_artifact_types() {
  return _impl_.artifact_types_.Add();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesResponse::add_artifact_types() {
  ::ml_metadata::ArtifactType* _add = _internal_add_artifact_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesResponse.artifact_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
GetArtifactTypesResponse::artifact_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactTypesResponse.artifact_types)
  return _impl_.artifact_types_;
}

// -------------------------------------------------------------------

// GetExecutionTypesRequest

// optional .ml_metadata.TransactionOptions transaction_options = 1;
inline bool GetExecutionTypesRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionTypesRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionTypesRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionTypesRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypesRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesRequest.transaction_options)
  return _msg;
}
inline void GetExecutionTypesRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypesRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionTypesResponse

// repeated .ml_metadata.ExecutionType execution_types = 1;
inline int GetExecutionTypesResponse::_internal_execution_types_size() const {
  return _impl_.execution_types_.size();
}
inline int GetExecutionTypesResponse::execution_types_size() const {
  return _internal_execution_types_size();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesResponse::mutable_execution_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesResponse.execution_types)
  return _impl_.execution_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
GetExecutionTypesResponse::mutable_execution_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionTypesResponse.execution_types)
  return &_impl_.execution_types_;
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesResponse::_internal_execution_types(int index) const {
  return _impl_.execution_types_.Get(index);
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesResponse::execution_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesResponse.execution_types)
  return _internal_execution_types(index);
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesResponse::_internal_add_execution_types() {
  return _impl_.execution_types_.Add();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesResponse::add_execution_types() {
  ::ml_metadata::ExecutionType* _add = _internal_add_execution_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesResponse.execution_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
GetExecutionTypesResponse::execution_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionTypesResponse.execution_types)
  return _impl_.execution_types_;
}

// -------------------------------------------------------------------

// GetContextTypesRequest

// optional .ml_metadata.TransactionOptions transaction_options = 1;
inline bool GetContextTypesRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextTypesRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextTypesRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextTypesRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextTypesRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypesRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesRequest.transaction_options)
  return _msg;
}
inline void GetContextTypesRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypesRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextTypesResponse

// repeated .ml_metadata.ContextType context_types = 1;
inline int GetContextTypesResponse::_internal_context_types_size() const {
  return _impl_.context_types_.size();
}
inline int GetContextTypesResponse::context_types_size() const {
  return _internal_context_types_size();
}
inline ::ml_metadata::ContextType* GetContextTypesResponse::mutable_context_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesResponse.context_types)
  return _impl_.context_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
GetContextTypesResponse::mutable_context_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextTypesResponse.context_types)
  return &_impl_.context_types_;
}
inline const ::ml_metadata::ContextType& GetContextTypesResponse::_internal_context_types(int index) const {
  return _impl_.context_types_.Get(index);
}
inline const ::ml_metadata::ContextType& GetContextTypesResponse::context_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesResponse.context_types)
  return _internal_context_types(index);
}
inline ::ml_metadata::ContextType* GetContextTypesResponse::_internal_add_context_types() {
  return _impl_.context_types_.Add();
}
inline ::ml_metadata::ContextType* GetContextTypesResponse::add_context_types() {
  ::ml_metadata::ContextType* _add = _internal_add_context_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesResponse.context_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
GetContextTypesResponse::context_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextTypesResponse.context_types)
  return _impl_.context_types_;
}

// -------------------------------------------------------------------

// GetArtifactsByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetArtifactsByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetArtifactsByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetArtifactsByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetArtifactsByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetArtifactsByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetArtifactsByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetArtifactsByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetArtifactsByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline std::string* GetArtifactsByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetArtifactsByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline void GetArtifactsByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetArtifactsByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetArtifactsByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetArtifactsByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsByExternalIdsResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsByExternalIdsResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsByExternalIdsResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsByExternalIdsResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByExternalIdsResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsByExternalIdsResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByExternalIdsResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsByExternalIdsResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsByExternalIdsResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByExternalIdsResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsByExternalIdsResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsByExternalIdsResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByExternalIdsResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsByExternalIdsResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByExternalIdsResponse.artifacts)
  return _impl_.artifacts_;
}

// -------------------------------------------------------------------

// GetExecutionsByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetExecutionsByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetExecutionsByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetExecutionsByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetExecutionsByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetExecutionsByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetExecutionsByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetExecutionsByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetExecutionsByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline std::string* GetExecutionsByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetExecutionsByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline void GetExecutionsByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetExecutionsByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetExecutionsByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetExecutionsByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetExecutionsByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionsByExternalIdsResponse

// repeated .ml_metadata.Execution executions = 1;
inline int GetExecutionsByExternalIdsResponse::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int GetExecutionsByExternalIdsResponse::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* GetExecutionsByExternalIdsResponse::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByExternalIdsResponse.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
GetExecutionsByExternalIdsResponse::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByExternalIdsResponse.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& GetExecutionsByExternalIdsResponse::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& GetExecutionsByExternalIdsResponse::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByExternalIdsResponse.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* GetExecutionsByExternalIdsResponse::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* GetExecutionsByExternalIdsResponse::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByExternalIdsResponse.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
GetExecutionsByExternalIdsResponse::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByExternalIdsResponse.executions)
  return _impl_.executions_;
}

// -------------------------------------------------------------------

// GetContextsByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetContextsByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetContextsByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetContextsByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetContextsByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetContextsByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetContextsByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetContextsByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetContextsByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline std::string* GetContextsByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetContextsByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline void GetContextsByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetContextsByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetContextsByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextsByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetContextsByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsByExternalIdsResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsByExternalIdsResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsByExternalIdsResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsByExternalIdsResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByExternalIdsResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsByExternalIdsResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByExternalIdsResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsByExternalIdsResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsByExternalIdsResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExternalIdsResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsByExternalIdsResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsByExternalIdsResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByExternalIdsResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsByExternalIdsResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByExternalIdsResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetArtifactTypesByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetArtifactTypesByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetArtifactTypesByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetArtifactTypesByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetArtifactTypesByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetArtifactTypesByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetArtifactTypesByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetArtifactTypesByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetArtifactTypesByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline std::string* GetArtifactTypesByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetArtifactTypesByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline void GetArtifactTypesByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetArtifactTypesByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetArtifactTypesByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetArtifactTypesByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactTypesByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactTypesByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactTypesByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypesByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetArtifactTypesByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypesByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactTypesByExternalIdsResponse

// repeated .ml_metadata.ArtifactType artifact_types = 1;
inline int GetArtifactTypesByExternalIdsResponse::_internal_artifact_types_size() const {
  return _impl_.artifact_types_.size();
}
inline int GetArtifactTypesByExternalIdsResponse::artifact_types_size() const {
  return _internal_artifact_types_size();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByExternalIdsResponse::mutable_artifact_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesByExternalIdsResponse.artifact_types)
  return _impl_.artifact_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
GetArtifactTypesByExternalIdsResponse::mutable_artifact_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactTypesByExternalIdsResponse.artifact_types)
  return &_impl_.artifact_types_;
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesByExternalIdsResponse::_internal_artifact_types(int index) const {
  return _impl_.artifact_types_.Get(index);
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesByExternalIdsResponse::artifact_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByExternalIdsResponse.artifact_types)
  return _internal_artifact_types(index);
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByExternalIdsResponse::_internal_add_artifact_types() {
  return _impl_.artifact_types_.Add();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByExternalIdsResponse::add_artifact_types() {
  ::ml_metadata::ArtifactType* _add = _internal_add_artifact_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesByExternalIdsResponse.artifact_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
GetArtifactTypesByExternalIdsResponse::artifact_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactTypesByExternalIdsResponse.artifact_types)
  return _impl_.artifact_types_;
}

// -------------------------------------------------------------------

// GetExecutionTypesByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetExecutionTypesByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetExecutionTypesByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetExecutionTypesByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetExecutionTypesByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetExecutionTypesByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetExecutionTypesByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetExecutionTypesByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetExecutionTypesByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline std::string* GetExecutionTypesByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetExecutionTypesByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline void GetExecutionTypesByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetExecutionTypesByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetExecutionTypesByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetExecutionTypesByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionTypesByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionTypesByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionTypesByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypesByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetExecutionTypesByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypesByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionTypesByExternalIdsResponse

// repeated .ml_metadata.ExecutionType execution_types = 1;
inline int GetExecutionTypesByExternalIdsResponse::_internal_execution_types_size() const {
  return _impl_.execution_types_.size();
}
inline int GetExecutionTypesByExternalIdsResponse::execution_types_size() const {
  return _internal_execution_types_size();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByExternalIdsResponse::mutable_execution_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesByExternalIdsResponse.execution_types)
  return _impl_.execution_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
GetExecutionTypesByExternalIdsResponse::mutable_execution_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionTypesByExternalIdsResponse.execution_types)
  return &_impl_.execution_types_;
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesByExternalIdsResponse::_internal_execution_types(int index) const {
  return _impl_.execution_types_.Get(index);
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesByExternalIdsResponse::execution_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByExternalIdsResponse.execution_types)
  return _internal_execution_types(index);
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByExternalIdsResponse::_internal_add_execution_types() {
  return _impl_.execution_types_.Add();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByExternalIdsResponse::add_execution_types() {
  ::ml_metadata::ExecutionType* _add = _internal_add_execution_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesByExternalIdsResponse.execution_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
GetExecutionTypesByExternalIdsResponse::execution_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionTypesByExternalIdsResponse.execution_types)
  return _impl_.execution_types_;
}

// -------------------------------------------------------------------

// GetContextTypesByExternalIdsRequest

// repeated string external_ids = 1;
inline int GetContextTypesByExternalIdsRequest::_internal_external_ids_size() const {
  return _impl_.external_ids_.size();
}
inline int GetContextTypesByExternalIdsRequest::external_ids_size() const {
  return _internal_external_ids_size();
}
inline void GetContextTypesByExternalIdsRequest::clear_external_ids() {
  _impl_.external_ids_.Clear();
}
inline std::string* GetContextTypesByExternalIdsRequest::add_external_ids() {
  std::string* _s = _internal_add_external_ids();
  // @@protoc_insertion_point(field_add_mutable:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
  return _s;
}
inline const std::string& GetContextTypesByExternalIdsRequest::_internal_external_ids(int index) const {
  return _impl_.external_ids_.Get(index);
}
inline const std::string& GetContextTypesByExternalIdsRequest::external_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
  return _internal_external_ids(index);
}
inline std::string* GetContextTypesByExternalIdsRequest::mutable_external_ids(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_.Mutable(index);
}
inline void GetContextTypesByExternalIdsRequest::set_external_ids(int index, const std::string& value) {
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::set_external_ids(int index, std::string&& value) {
  _impl_.external_ids_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::set_external_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::set_external_ids(int index, const char* value, size_t size) {
  _impl_.external_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline std::string* GetContextTypesByExternalIdsRequest::_internal_add_external_ids() {
  return _impl_.external_ids_.Add();
}
inline void GetContextTypesByExternalIdsRequest::add_external_ids(const std::string& value) {
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::add_external_ids(std::string&& value) {
  _impl_.external_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::add_external_ids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.external_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline void GetContextTypesByExternalIdsRequest::add_external_ids(const char* value, size_t size) {
  _impl_.external_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetContextTypesByExternalIdsRequest::external_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
  return _impl_.external_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetContextTypesByExternalIdsRequest::mutable_external_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextTypesByExternalIdsRequest.external_ids)
  return &_impl_.external_ids_;
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextTypesByExternalIdsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextTypesByExternalIdsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesByExternalIdsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesByExternalIdsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByExternalIdsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextTypesByExternalIdsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextTypesByExternalIdsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByExternalIdsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByExternalIdsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypesByExternalIdsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByExternalIdsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByExternalIdsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesByExternalIdsRequest.transaction_options)
  return _msg;
}
inline void GetContextTypesByExternalIdsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypesByExternalIdsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextTypesByExternalIdsResponse

// repeated .ml_metadata.ContextType context_types = 1;
inline int GetContextTypesByExternalIdsResponse::_internal_context_types_size() const {
  return _impl_.context_types_.size();
}
inline int GetContextTypesByExternalIdsResponse::context_types_size() const {
  return _internal_context_types_size();
}
inline ::ml_metadata::ContextType* GetContextTypesByExternalIdsResponse::mutable_context_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesByExternalIdsResponse.context_types)
  return _impl_.context_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
GetContextTypesByExternalIdsResponse::mutable_context_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextTypesByExternalIdsResponse.context_types)
  return &_impl_.context_types_;
}
inline const ::ml_metadata::ContextType& GetContextTypesByExternalIdsResponse::_internal_context_types(int index) const {
  return _impl_.context_types_.Get(index);
}
inline const ::ml_metadata::ContextType& GetContextTypesByExternalIdsResponse::context_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByExternalIdsResponse.context_types)
  return _internal_context_types(index);
}
inline ::ml_metadata::ContextType* GetContextTypesByExternalIdsResponse::_internal_add_context_types() {
  return _impl_.context_types_.Add();
}
inline ::ml_metadata::ContextType* GetContextTypesByExternalIdsResponse::add_context_types() {
  ::ml_metadata::ContextType* _add = _internal_add_context_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesByExternalIdsResponse.context_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
GetContextTypesByExternalIdsResponse::context_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextTypesByExternalIdsResponse.context_types)
  return _impl_.context_types_;
}

// -------------------------------------------------------------------

// GetExecutionsByTypeRequest

// optional string type_name = 1;
inline bool GetExecutionsByTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionsByTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetExecutionsByTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionsByTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionsByTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByTypeRequest.type_name)
}
inline std::string* GetExecutionsByTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeRequest.type_name)
  return _s;
}
inline const std::string& GetExecutionsByTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetExecutionsByTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionsByTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByTypeRequest.type_name)
}

// optional string type_version = 2;
inline bool GetExecutionsByTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetExecutionsByTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetExecutionsByTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetExecutionsByTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionsByTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByTypeRequest.type_version)
}
inline std::string* GetExecutionsByTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeRequest.type_version)
  return _s;
}
inline const std::string& GetExecutionsByTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetExecutionsByTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionsByTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByTypeRequest.type_version)
}

// optional .ml_metadata.ListOperationOptions options = 3;
inline bool GetExecutionsByTypeRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetExecutionsByTypeRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsByTypeRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsByTypeRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeRequest.options)
  return _internal_options();
}
inline void GetExecutionsByTypeRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByTypeRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByTypeRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByTypeRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByTypeRequest.options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByTypeRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByTypeRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeRequest.options)
  return _msg;
}
inline void GetExecutionsByTypeRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByTypeRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetExecutionsByTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsByTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsByTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeRequest.transaction_options)
  return _msg;
}
inline void GetExecutionsByTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionsByTypeResponse

// repeated .ml_metadata.Execution executions = 1;
inline int GetExecutionsByTypeResponse::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int GetExecutionsByTypeResponse::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* GetExecutionsByTypeResponse::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeResponse.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
GetExecutionsByTypeResponse::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByTypeResponse.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& GetExecutionsByTypeResponse::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& GetExecutionsByTypeResponse::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeResponse.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* GetExecutionsByTypeResponse::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* GetExecutionsByTypeResponse::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByTypeResponse.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
GetExecutionsByTypeResponse::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByTypeResponse.executions)
  return _impl_.executions_;
}

// optional string next_page_token = 2;
inline bool GetExecutionsByTypeResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionsByTypeResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetExecutionsByTypeResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionsByTypeResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByTypeResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionsByTypeResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByTypeResponse.next_page_token)
}
inline std::string* GetExecutionsByTypeResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByTypeResponse.next_page_token)
  return _s;
}
inline const std::string& GetExecutionsByTypeResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetExecutionsByTypeResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionsByTypeResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByTypeResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionsByTypeResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByTypeResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetExecutionByTypeAndNameRequest

// optional string type_name = 1;
inline bool GetExecutionByTypeAndNameRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionByTypeAndNameRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetExecutionByTypeAndNameRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionByTypeAndNameRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionByTypeAndNameRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionByTypeAndNameRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionByTypeAndNameRequest.type_name)
}
inline std::string* GetExecutionByTypeAndNameRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionByTypeAndNameRequest.type_name)
  return _s;
}
inline const std::string& GetExecutionByTypeAndNameRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetExecutionByTypeAndNameRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionByTypeAndNameRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionByTypeAndNameRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionByTypeAndNameRequest.type_name)
}

// optional string type_version = 3;
inline bool GetExecutionByTypeAndNameRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetExecutionByTypeAndNameRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetExecutionByTypeAndNameRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GetExecutionByTypeAndNameRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionByTypeAndNameRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionByTypeAndNameRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionByTypeAndNameRequest.type_version)
}
inline std::string* GetExecutionByTypeAndNameRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionByTypeAndNameRequest.type_version)
  return _s;
}
inline const std::string& GetExecutionByTypeAndNameRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetExecutionByTypeAndNameRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionByTypeAndNameRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionByTypeAndNameRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionByTypeAndNameRequest.type_version)
}

// optional string execution_name = 2;
inline bool GetExecutionByTypeAndNameRequest::_internal_has_execution_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetExecutionByTypeAndNameRequest::has_execution_name() const {
  return _internal_has_execution_name();
}
inline void GetExecutionByTypeAndNameRequest::clear_execution_name() {
  _impl_.execution_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetExecutionByTypeAndNameRequest::execution_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionByTypeAndNameRequest.execution_name)
  return _internal_execution_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionByTypeAndNameRequest::set_execution_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.execution_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionByTypeAndNameRequest.execution_name)
}
inline std::string* GetExecutionByTypeAndNameRequest::mutable_execution_name() {
  std::string* _s = _internal_mutable_execution_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionByTypeAndNameRequest.execution_name)
  return _s;
}
inline const std::string& GetExecutionByTypeAndNameRequest::_internal_execution_name() const {
  return _impl_.execution_name_.Get();
}
inline void GetExecutionByTypeAndNameRequest::_internal_set_execution_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.execution_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::_internal_mutable_execution_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.execution_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionByTypeAndNameRequest::release_execution_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionByTypeAndNameRequest.execution_name)
  if (!_internal_has_execution_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.execution_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.execution_name_.IsDefault()) {
    _impl_.execution_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionByTypeAndNameRequest::set_allocated_execution_name(std::string* execution_name) {
  if (execution_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.execution_name_.SetAllocated(execution_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.execution_name_.IsDefault()) {
    _impl_.execution_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionByTypeAndNameRequest.execution_name)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetExecutionByTypeAndNameRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionByTypeAndNameRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionByTypeAndNameRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionByTypeAndNameRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionByTypeAndNameRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionByTypeAndNameRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionByTypeAndNameRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionByTypeAndNameRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionByTypeAndNameRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionByTypeAndNameRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionByTypeAndNameRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionByTypeAndNameRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionByTypeAndNameRequest.transaction_options)
  return _msg;
}
inline void GetExecutionByTypeAndNameRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionByTypeAndNameRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionByTypeAndNameResponse

// optional .ml_metadata.Execution execution = 1;
inline bool GetExecutionByTypeAndNameResponse::_internal_has_execution() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_ != nullptr);
  return value;
}
inline bool GetExecutionByTypeAndNameResponse::has_execution() const {
  return _internal_has_execution();
}
inline const ::ml_metadata::Execution& GetExecutionByTypeAndNameResponse::_internal_execution() const {
  const ::ml_metadata::Execution* p = _impl_.execution_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Execution&>(
      ::ml_metadata::_Execution_default_instance_);
}
inline const ::ml_metadata::Execution& GetExecutionByTypeAndNameResponse::execution() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionByTypeAndNameResponse.execution)
  return _internal_execution();
}
inline void GetExecutionByTypeAndNameResponse::unsafe_arena_set_allocated_execution(
    ::ml_metadata::Execution* execution) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_);
  }
  _impl_.execution_ = execution;
  if (execution) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionByTypeAndNameResponse.execution)
}
inline ::ml_metadata::Execution* GetExecutionByTypeAndNameResponse::release_execution() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Execution* temp = _impl_.execution_;
  _impl_.execution_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Execution* GetExecutionByTypeAndNameResponse::unsafe_arena_release_execution() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionByTypeAndNameResponse.execution)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Execution* temp = _impl_.execution_;
  _impl_.execution_ = nullptr;
  return temp;
}
inline ::ml_metadata::Execution* GetExecutionByTypeAndNameResponse::_internal_mutable_execution() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.execution_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Execution>(GetArenaForAllocation());
    _impl_.execution_ = p;
  }
  return _impl_.execution_;
}
inline ::ml_metadata::Execution* GetExecutionByTypeAndNameResponse::mutable_execution() {
  ::ml_metadata::Execution* _msg = _internal_mutable_execution();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionByTypeAndNameResponse.execution)
  return _msg;
}
inline void GetExecutionByTypeAndNameResponse::set_allocated_execution(::ml_metadata::Execution* execution) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_);
  }
  if (execution) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(execution));
    if (message_arena != submessage_arena) {
      execution = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, execution, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.execution_ = execution;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionByTypeAndNameResponse.execution)
}

// -------------------------------------------------------------------

// GetExecutionsByIDRequest

// repeated int64 execution_ids = 1;
inline int GetExecutionsByIDRequest::_internal_execution_ids_size() const {
  return _impl_.execution_ids_.size();
}
inline int GetExecutionsByIDRequest::execution_ids_size() const {
  return _internal_execution_ids_size();
}
inline void GetExecutionsByIDRequest::clear_execution_ids() {
  _impl_.execution_ids_.Clear();
}
inline int64_t GetExecutionsByIDRequest::_internal_execution_ids(int index) const {
  return _impl_.execution_ids_.Get(index);
}
inline int64_t GetExecutionsByIDRequest::execution_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByIDRequest.execution_ids)
  return _internal_execution_ids(index);
}
inline void GetExecutionsByIDRequest::set_execution_ids(int index, int64_t value) {
  _impl_.execution_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByIDRequest.execution_ids)
}
inline void GetExecutionsByIDRequest::_internal_add_execution_ids(int64_t value) {
  _impl_.execution_ids_.Add(value);
}
inline void GetExecutionsByIDRequest::add_execution_ids(int64_t value) {
  _internal_add_execution_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByIDRequest.execution_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetExecutionsByIDRequest::_internal_execution_ids() const {
  return _impl_.execution_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetExecutionsByIDRequest::execution_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByIDRequest.execution_ids)
  return _internal_execution_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetExecutionsByIDRequest::_internal_mutable_execution_ids() {
  return &_impl_.execution_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetExecutionsByIDRequest::mutable_execution_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByIDRequest.execution_ids)
  return _internal_mutable_execution_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetExecutionsByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByIDRequest.transaction_options)
  return _msg;
}
inline void GetExecutionsByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionsByIDResponse

// repeated .ml_metadata.Execution executions = 1;
inline int GetExecutionsByIDResponse::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int GetExecutionsByIDResponse::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* GetExecutionsByIDResponse::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByIDResponse.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
GetExecutionsByIDResponse::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByIDResponse.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& GetExecutionsByIDResponse::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& GetExecutionsByIDResponse::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByIDResponse.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* GetExecutionsByIDResponse::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* GetExecutionsByIDResponse::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByIDResponse.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
GetExecutionsByIDResponse::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByIDResponse.executions)
  return _impl_.executions_;
}

// -------------------------------------------------------------------

// GetExecutionTypeRequest

// optional string type_name = 1;
inline bool GetExecutionTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetExecutionTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionTypeRequest.type_name)
}
inline std::string* GetExecutionTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypeRequest.type_name)
  return _s;
}
inline const std::string& GetExecutionTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetExecutionTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypeRequest.type_name)
}

// optional string type_version = 2;
inline bool GetExecutionTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetExecutionTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetExecutionTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetExecutionTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionTypeRequest.type_version)
}
inline std::string* GetExecutionTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypeRequest.type_version)
  return _s;
}
inline const std::string& GetExecutionTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetExecutionTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypeRequest.type_version)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetExecutionTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypeRequest.transaction_options)
  return _msg;
}
inline void GetExecutionTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionTypeResponse

// optional .ml_metadata.ExecutionType execution_type = 1;
inline bool GetExecutionTypeResponse::_internal_has_execution_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.execution_type_ != nullptr);
  return value;
}
inline bool GetExecutionTypeResponse::has_execution_type() const {
  return _internal_has_execution_type();
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypeResponse::_internal_execution_type() const {
  const ::ml_metadata::ExecutionType* p = _impl_.execution_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ExecutionType&>(
      ::ml_metadata::_ExecutionType_default_instance_);
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypeResponse::execution_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypeResponse.execution_type)
  return _internal_execution_type();
}
inline void GetExecutionTypeResponse::unsafe_arena_set_allocated_execution_type(
    ::ml_metadata::ExecutionType* execution_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_type_);
  }
  _impl_.execution_type_ = execution_type;
  if (execution_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionTypeResponse.execution_type)
}
inline ::ml_metadata::ExecutionType* GetExecutionTypeResponse::release_execution_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ExecutionType* temp = _impl_.execution_type_;
  _impl_.execution_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ExecutionType* GetExecutionTypeResponse::unsafe_arena_release_execution_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypeResponse.execution_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ExecutionType* temp = _impl_.execution_type_;
  _impl_.execution_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ExecutionType* GetExecutionTypeResponse::_internal_mutable_execution_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.execution_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ExecutionType>(GetArenaForAllocation());
    _impl_.execution_type_ = p;
  }
  return _impl_.execution_type_;
}
inline ::ml_metadata::ExecutionType* GetExecutionTypeResponse::mutable_execution_type() {
  ::ml_metadata::ExecutionType* _msg = _internal_mutable_execution_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypeResponse.execution_type)
  return _msg;
}
inline void GetExecutionTypeResponse::set_allocated_execution_type(::ml_metadata::ExecutionType* execution_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.execution_type_);
  }
  if (execution_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(execution_type));
    if (message_arena != submessage_arena) {
      execution_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, execution_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.execution_type_ = execution_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypeResponse.execution_type)
}

// -------------------------------------------------------------------

// GetEventsByExecutionIDsRequest

// repeated int64 execution_ids = 1;
inline int GetEventsByExecutionIDsRequest::_internal_execution_ids_size() const {
  return _impl_.execution_ids_.size();
}
inline int GetEventsByExecutionIDsRequest::execution_ids_size() const {
  return _internal_execution_ids_size();
}
inline void GetEventsByExecutionIDsRequest::clear_execution_ids() {
  _impl_.execution_ids_.Clear();
}
inline int64_t GetEventsByExecutionIDsRequest::_internal_execution_ids(int index) const {
  return _impl_.execution_ids_.Get(index);
}
inline int64_t GetEventsByExecutionIDsRequest::execution_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByExecutionIDsRequest.execution_ids)
  return _internal_execution_ids(index);
}
inline void GetEventsByExecutionIDsRequest::set_execution_ids(int index, int64_t value) {
  _impl_.execution_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetEventsByExecutionIDsRequest.execution_ids)
}
inline void GetEventsByExecutionIDsRequest::_internal_add_execution_ids(int64_t value) {
  _impl_.execution_ids_.Add(value);
}
inline void GetEventsByExecutionIDsRequest::add_execution_ids(int64_t value) {
  _internal_add_execution_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetEventsByExecutionIDsRequest.execution_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetEventsByExecutionIDsRequest::_internal_execution_ids() const {
  return _impl_.execution_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetEventsByExecutionIDsRequest::execution_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetEventsByExecutionIDsRequest.execution_ids)
  return _internal_execution_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetEventsByExecutionIDsRequest::_internal_mutable_execution_ids() {
  return &_impl_.execution_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetEventsByExecutionIDsRequest::mutable_execution_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetEventsByExecutionIDsRequest.execution_ids)
  return _internal_mutable_execution_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetEventsByExecutionIDsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetEventsByExecutionIDsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetEventsByExecutionIDsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetEventsByExecutionIDsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByExecutionIDsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetEventsByExecutionIDsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetEventsByExecutionIDsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetEventsByExecutionIDsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetEventsByExecutionIDsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetEventsByExecutionIDsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetEventsByExecutionIDsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetEventsByExecutionIDsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetEventsByExecutionIDsRequest.transaction_options)
  return _msg;
}
inline void GetEventsByExecutionIDsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetEventsByExecutionIDsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetEventsByExecutionIDsResponse

// repeated .ml_metadata.Event events = 1;
inline int GetEventsByExecutionIDsResponse::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int GetEventsByExecutionIDsResponse::events_size() const {
  return _internal_events_size();
}
inline ::ml_metadata::Event* GetEventsByExecutionIDsResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetEventsByExecutionIDsResponse.events)
  return _impl_.events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
GetEventsByExecutionIDsResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetEventsByExecutionIDsResponse.events)
  return &_impl_.events_;
}
inline const ::ml_metadata::Event& GetEventsByExecutionIDsResponse::_internal_events(int index) const {
  return _impl_.events_.Get(index);
}
inline const ::ml_metadata::Event& GetEventsByExecutionIDsResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByExecutionIDsResponse.events)
  return _internal_events(index);
}
inline ::ml_metadata::Event* GetEventsByExecutionIDsResponse::_internal_add_events() {
  return _impl_.events_.Add();
}
inline ::ml_metadata::Event* GetEventsByExecutionIDsResponse::add_events() {
  ::ml_metadata::Event* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:ml_metadata.GetEventsByExecutionIDsResponse.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
GetEventsByExecutionIDsResponse::events() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetEventsByExecutionIDsResponse.events)
  return _impl_.events_;
}

// -------------------------------------------------------------------

// GetEventsByArtifactIDsRequest

// repeated int64 artifact_ids = 1;
inline int GetEventsByArtifactIDsRequest::_internal_artifact_ids_size() const {
  return _impl_.artifact_ids_.size();
}
inline int GetEventsByArtifactIDsRequest::artifact_ids_size() const {
  return _internal_artifact_ids_size();
}
inline void GetEventsByArtifactIDsRequest::clear_artifact_ids() {
  _impl_.artifact_ids_.Clear();
}
inline int64_t GetEventsByArtifactIDsRequest::_internal_artifact_ids(int index) const {
  return _impl_.artifact_ids_.Get(index);
}
inline int64_t GetEventsByArtifactIDsRequest::artifact_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByArtifactIDsRequest.artifact_ids)
  return _internal_artifact_ids(index);
}
inline void GetEventsByArtifactIDsRequest::set_artifact_ids(int index, int64_t value) {
  _impl_.artifact_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetEventsByArtifactIDsRequest.artifact_ids)
}
inline void GetEventsByArtifactIDsRequest::_internal_add_artifact_ids(int64_t value) {
  _impl_.artifact_ids_.Add(value);
}
inline void GetEventsByArtifactIDsRequest::add_artifact_ids(int64_t value) {
  _internal_add_artifact_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetEventsByArtifactIDsRequest.artifact_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetEventsByArtifactIDsRequest::_internal_artifact_ids() const {
  return _impl_.artifact_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetEventsByArtifactIDsRequest::artifact_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetEventsByArtifactIDsRequest.artifact_ids)
  return _internal_artifact_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetEventsByArtifactIDsRequest::_internal_mutable_artifact_ids() {
  return &_impl_.artifact_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetEventsByArtifactIDsRequest::mutable_artifact_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetEventsByArtifactIDsRequest.artifact_ids)
  return _internal_mutable_artifact_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetEventsByArtifactIDsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetEventsByArtifactIDsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetEventsByArtifactIDsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetEventsByArtifactIDsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByArtifactIDsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetEventsByArtifactIDsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetEventsByArtifactIDsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetEventsByArtifactIDsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetEventsByArtifactIDsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetEventsByArtifactIDsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetEventsByArtifactIDsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetEventsByArtifactIDsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetEventsByArtifactIDsRequest.transaction_options)
  return _msg;
}
inline void GetEventsByArtifactIDsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetEventsByArtifactIDsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetEventsByArtifactIDsResponse

// repeated .ml_metadata.Event events = 1;
inline int GetEventsByArtifactIDsResponse::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int GetEventsByArtifactIDsResponse::events_size() const {
  return _internal_events_size();
}
inline ::ml_metadata::Event* GetEventsByArtifactIDsResponse::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetEventsByArtifactIDsResponse.events)
  return _impl_.events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >*
GetEventsByArtifactIDsResponse::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetEventsByArtifactIDsResponse.events)
  return &_impl_.events_;
}
inline const ::ml_metadata::Event& GetEventsByArtifactIDsResponse::_internal_events(int index) const {
  return _impl_.events_.Get(index);
}
inline const ::ml_metadata::Event& GetEventsByArtifactIDsResponse::events(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetEventsByArtifactIDsResponse.events)
  return _internal_events(index);
}
inline ::ml_metadata::Event* GetEventsByArtifactIDsResponse::_internal_add_events() {
  return _impl_.events_.Add();
}
inline ::ml_metadata::Event* GetEventsByArtifactIDsResponse::add_events() {
  ::ml_metadata::Event* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:ml_metadata.GetEventsByArtifactIDsResponse.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Event >&
GetEventsByArtifactIDsResponse::events() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetEventsByArtifactIDsResponse.events)
  return _impl_.events_;
}

// -------------------------------------------------------------------

// GetArtifactTypesByIDRequest

// repeated int64 type_ids = 1;
inline int GetArtifactTypesByIDRequest::_internal_type_ids_size() const {
  return _impl_.type_ids_.size();
}
inline int GetArtifactTypesByIDRequest::type_ids_size() const {
  return _internal_type_ids_size();
}
inline void GetArtifactTypesByIDRequest::clear_type_ids() {
  _impl_.type_ids_.Clear();
}
inline int64_t GetArtifactTypesByIDRequest::_internal_type_ids(int index) const {
  return _impl_.type_ids_.Get(index);
}
inline int64_t GetArtifactTypesByIDRequest::type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByIDRequest.type_ids)
  return _internal_type_ids(index);
}
inline void GetArtifactTypesByIDRequest::set_type_ids(int index, int64_t value) {
  _impl_.type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactTypesByIDRequest.type_ids)
}
inline void GetArtifactTypesByIDRequest::_internal_add_type_ids(int64_t value) {
  _impl_.type_ids_.Add(value);
}
inline void GetArtifactTypesByIDRequest::add_type_ids(int64_t value) {
  _internal_add_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesByIDRequest.type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetArtifactTypesByIDRequest::_internal_type_ids() const {
  return _impl_.type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetArtifactTypesByIDRequest::type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactTypesByIDRequest.type_ids)
  return _internal_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetArtifactTypesByIDRequest::_internal_mutable_type_ids() {
  return &_impl_.type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetArtifactTypesByIDRequest::mutable_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactTypesByIDRequest.type_ids)
  return _internal_mutable_type_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetArtifactTypesByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactTypesByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactTypesByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactTypesByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactTypesByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactTypesByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactTypesByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesByIDRequest.transaction_options)
  return _msg;
}
inline void GetArtifactTypesByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactTypesByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactTypesByIDResponse

// repeated .ml_metadata.ArtifactType artifact_types = 1;
inline int GetArtifactTypesByIDResponse::_internal_artifact_types_size() const {
  return _impl_.artifact_types_.size();
}
inline int GetArtifactTypesByIDResponse::artifact_types_size() const {
  return _internal_artifact_types_size();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByIDResponse::mutable_artifact_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactTypesByIDResponse.artifact_types)
  return _impl_.artifact_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >*
GetArtifactTypesByIDResponse::mutable_artifact_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactTypesByIDResponse.artifact_types)
  return &_impl_.artifact_types_;
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesByIDResponse::_internal_artifact_types(int index) const {
  return _impl_.artifact_types_.Get(index);
}
inline const ::ml_metadata::ArtifactType& GetArtifactTypesByIDResponse::artifact_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactTypesByIDResponse.artifact_types)
  return _internal_artifact_types(index);
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByIDResponse::_internal_add_artifact_types() {
  return _impl_.artifact_types_.Add();
}
inline ::ml_metadata::ArtifactType* GetArtifactTypesByIDResponse::add_artifact_types() {
  ::ml_metadata::ArtifactType* _add = _internal_add_artifact_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactTypesByIDResponse.artifact_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ArtifactType >&
GetArtifactTypesByIDResponse::artifact_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactTypesByIDResponse.artifact_types)
  return _impl_.artifact_types_;
}

// -------------------------------------------------------------------

// GetExecutionTypesByIDRequest

// repeated int64 type_ids = 1;
inline int GetExecutionTypesByIDRequest::_internal_type_ids_size() const {
  return _impl_.type_ids_.size();
}
inline int GetExecutionTypesByIDRequest::type_ids_size() const {
  return _internal_type_ids_size();
}
inline void GetExecutionTypesByIDRequest::clear_type_ids() {
  _impl_.type_ids_.Clear();
}
inline int64_t GetExecutionTypesByIDRequest::_internal_type_ids(int index) const {
  return _impl_.type_ids_.Get(index);
}
inline int64_t GetExecutionTypesByIDRequest::type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByIDRequest.type_ids)
  return _internal_type_ids(index);
}
inline void GetExecutionTypesByIDRequest::set_type_ids(int index, int64_t value) {
  _impl_.type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionTypesByIDRequest.type_ids)
}
inline void GetExecutionTypesByIDRequest::_internal_add_type_ids(int64_t value) {
  _impl_.type_ids_.Add(value);
}
inline void GetExecutionTypesByIDRequest::add_type_ids(int64_t value) {
  _internal_add_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesByIDRequest.type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetExecutionTypesByIDRequest::_internal_type_ids() const {
  return _impl_.type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetExecutionTypesByIDRequest::type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionTypesByIDRequest.type_ids)
  return _internal_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetExecutionTypesByIDRequest::_internal_mutable_type_ids() {
  return &_impl_.type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetExecutionTypesByIDRequest::mutable_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionTypesByIDRequest.type_ids)
  return _internal_mutable_type_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetExecutionTypesByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionTypesByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionTypesByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionTypesByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionTypesByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionTypesByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionTypesByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesByIDRequest.transaction_options)
  return _msg;
}
inline void GetExecutionTypesByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionTypesByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionTypesByIDResponse

// repeated .ml_metadata.ExecutionType execution_types = 1;
inline int GetExecutionTypesByIDResponse::_internal_execution_types_size() const {
  return _impl_.execution_types_.size();
}
inline int GetExecutionTypesByIDResponse::execution_types_size() const {
  return _internal_execution_types_size();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByIDResponse::mutable_execution_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionTypesByIDResponse.execution_types)
  return _impl_.execution_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >*
GetExecutionTypesByIDResponse::mutable_execution_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionTypesByIDResponse.execution_types)
  return &_impl_.execution_types_;
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesByIDResponse::_internal_execution_types(int index) const {
  return _impl_.execution_types_.Get(index);
}
inline const ::ml_metadata::ExecutionType& GetExecutionTypesByIDResponse::execution_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionTypesByIDResponse.execution_types)
  return _internal_execution_types(index);
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByIDResponse::_internal_add_execution_types() {
  return _impl_.execution_types_.Add();
}
inline ::ml_metadata::ExecutionType* GetExecutionTypesByIDResponse::add_execution_types() {
  ::ml_metadata::ExecutionType* _add = _internal_add_execution_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionTypesByIDResponse.execution_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ExecutionType >&
GetExecutionTypesByIDResponse::execution_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionTypesByIDResponse.execution_types)
  return _impl_.execution_types_;
}

// -------------------------------------------------------------------

// GetContextTypeRequest

// optional string type_name = 1;
inline bool GetContextTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetContextTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetContextTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetContextTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextTypeRequest.type_name)
}
inline std::string* GetContextTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypeRequest.type_name)
  return _s;
}
inline const std::string& GetContextTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetContextTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypeRequest.type_name)
}

// optional string type_version = 2;
inline bool GetContextTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetContextTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetContextTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetContextTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextTypeRequest.type_version)
}
inline std::string* GetContextTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypeRequest.type_version)
  return _s;
}
inline const std::string& GetContextTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetContextTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypeRequest.type_version)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetContextTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypeRequest.transaction_options)
  return _msg;
}
inline void GetContextTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextTypeResponse

// optional .ml_metadata.ContextType context_type = 1;
inline bool GetContextTypeResponse::_internal_has_context_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_type_ != nullptr);
  return value;
}
inline bool GetContextTypeResponse::has_context_type() const {
  return _internal_has_context_type();
}
inline const ::ml_metadata::ContextType& GetContextTypeResponse::_internal_context_type() const {
  const ::ml_metadata::ContextType* p = _impl_.context_type_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ContextType&>(
      ::ml_metadata::_ContextType_default_instance_);
}
inline const ::ml_metadata::ContextType& GetContextTypeResponse::context_type() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypeResponse.context_type)
  return _internal_context_type();
}
inline void GetContextTypeResponse::unsafe_arena_set_allocated_context_type(
    ::ml_metadata::ContextType* context_type) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_type_);
  }
  _impl_.context_type_ = context_type;
  if (context_type) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextTypeResponse.context_type)
}
inline ::ml_metadata::ContextType* GetContextTypeResponse::release_context_type() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ContextType* temp = _impl_.context_type_;
  _impl_.context_type_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ContextType* GetContextTypeResponse::unsafe_arena_release_context_type() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypeResponse.context_type)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ContextType* temp = _impl_.context_type_;
  _impl_.context_type_ = nullptr;
  return temp;
}
inline ::ml_metadata::ContextType* GetContextTypeResponse::_internal_mutable_context_type() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.context_type_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ContextType>(GetArenaForAllocation());
    _impl_.context_type_ = p;
  }
  return _impl_.context_type_;
}
inline ::ml_metadata::ContextType* GetContextTypeResponse::mutable_context_type() {
  ::ml_metadata::ContextType* _msg = _internal_mutable_context_type();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypeResponse.context_type)
  return _msg;
}
inline void GetContextTypeResponse::set_allocated_context_type(::ml_metadata::ContextType* context_type) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_type_);
  }
  if (context_type) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context_type));
    if (message_arena != submessage_arena) {
      context_type = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context_type, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_type_ = context_type;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypeResponse.context_type)
}

// -------------------------------------------------------------------

// GetContextTypesByIDRequest

// repeated int64 type_ids = 1;
inline int GetContextTypesByIDRequest::_internal_type_ids_size() const {
  return _impl_.type_ids_.size();
}
inline int GetContextTypesByIDRequest::type_ids_size() const {
  return _internal_type_ids_size();
}
inline void GetContextTypesByIDRequest::clear_type_ids() {
  _impl_.type_ids_.Clear();
}
inline int64_t GetContextTypesByIDRequest::_internal_type_ids(int index) const {
  return _impl_.type_ids_.Get(index);
}
inline int64_t GetContextTypesByIDRequest::type_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByIDRequest.type_ids)
  return _internal_type_ids(index);
}
inline void GetContextTypesByIDRequest::set_type_ids(int index, int64_t value) {
  _impl_.type_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextTypesByIDRequest.type_ids)
}
inline void GetContextTypesByIDRequest::_internal_add_type_ids(int64_t value) {
  _impl_.type_ids_.Add(value);
}
inline void GetContextTypesByIDRequest::add_type_ids(int64_t value) {
  _internal_add_type_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesByIDRequest.type_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetContextTypesByIDRequest::_internal_type_ids() const {
  return _impl_.type_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetContextTypesByIDRequest::type_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextTypesByIDRequest.type_ids)
  return _internal_type_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetContextTypesByIDRequest::_internal_mutable_type_ids() {
  return &_impl_.type_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetContextTypesByIDRequest::mutable_type_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextTypesByIDRequest.type_ids)
  return _internal_mutable_type_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextTypesByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextTypesByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextTypesByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextTypesByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextTypesByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextTypesByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextTypesByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesByIDRequest.transaction_options)
  return _msg;
}
inline void GetContextTypesByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextTypesByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextTypesByIDResponse

// repeated .ml_metadata.ContextType context_types = 1;
inline int GetContextTypesByIDResponse::_internal_context_types_size() const {
  return _impl_.context_types_.size();
}
inline int GetContextTypesByIDResponse::context_types_size() const {
  return _internal_context_types_size();
}
inline ::ml_metadata::ContextType* GetContextTypesByIDResponse::mutable_context_types(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextTypesByIDResponse.context_types)
  return _impl_.context_types_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >*
GetContextTypesByIDResponse::mutable_context_types() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextTypesByIDResponse.context_types)
  return &_impl_.context_types_;
}
inline const ::ml_metadata::ContextType& GetContextTypesByIDResponse::_internal_context_types(int index) const {
  return _impl_.context_types_.Get(index);
}
inline const ::ml_metadata::ContextType& GetContextTypesByIDResponse::context_types(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextTypesByIDResponse.context_types)
  return _internal_context_types(index);
}
inline ::ml_metadata::ContextType* GetContextTypesByIDResponse::_internal_add_context_types() {
  return _impl_.context_types_.Add();
}
inline ::ml_metadata::ContextType* GetContextTypesByIDResponse::add_context_types() {
  ::ml_metadata::ContextType* _add = _internal_add_context_types();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextTypesByIDResponse.context_types)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::ContextType >&
GetContextTypesByIDResponse::context_types() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextTypesByIDResponse.context_types)
  return _impl_.context_types_;
}

// -------------------------------------------------------------------

// GetContextsRequest

// optional .ml_metadata.ListOperationOptions options = 1;
inline bool GetContextsRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetContextsRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetContextsRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetContextsRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsRequest.options)
  return _internal_options();
}
inline void GetContextsRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetContextsRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetContextsRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetContextsRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetContextsRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsRequest.options)
  return _msg;
}
inline void GetContextsRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsRequest.transaction_options)
  return _msg;
}
inline void GetContextsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsResponse.contexts)
  return _impl_.contexts_;
}

// optional string next_page_token = 2;
inline bool GetContextsResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetContextsResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetContextsResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetContextsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextsResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsResponse.next_page_token)
}
inline std::string* GetContextsResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsResponse.next_page_token)
  return _s;
}
inline const std::string& GetContextsResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetContextsResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextsResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetContextsByTypeRequest

// optional string type_name = 1;
inline bool GetContextsByTypeRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetContextsByTypeRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetContextsByTypeRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetContextsByTypeRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextsByTypeRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByTypeRequest.type_name)
}
inline std::string* GetContextsByTypeRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeRequest.type_name)
  return _s;
}
inline const std::string& GetContextsByTypeRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetContextsByTypeRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextsByTypeRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextsByTypeRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByTypeRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextsByTypeRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByTypeRequest.type_name)
}

// optional .ml_metadata.ListOperationOptions options = 2;
inline bool GetContextsByTypeRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetContextsByTypeRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetContextsByTypeRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetContextsByTypeRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeRequest.options)
  return _internal_options();
}
inline void GetContextsByTypeRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByTypeRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetContextsByTypeRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetContextsByTypeRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByTypeRequest.options)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetContextsByTypeRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetContextsByTypeRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeRequest.options)
  return _msg;
}
inline void GetContextsByTypeRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByTypeRequest.options)
}

// optional string type_version = 3;
inline bool GetContextsByTypeRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetContextsByTypeRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetContextsByTypeRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetContextsByTypeRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextsByTypeRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByTypeRequest.type_version)
}
inline std::string* GetContextsByTypeRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeRequest.type_version)
  return _s;
}
inline const std::string& GetContextsByTypeRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetContextsByTypeRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextsByTypeRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextsByTypeRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByTypeRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextsByTypeRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByTypeRequest.type_version)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetContextsByTypeRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsByTypeRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsByTypeRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsByTypeRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsByTypeRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByTypeRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsByTypeRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByTypeRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByTypeRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByTypeRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsByTypeRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeRequest.transaction_options)
  return _msg;
}
inline void GetContextsByTypeRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByTypeRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsByTypeResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsByTypeResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsByTypeResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsByTypeResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsByTypeResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByTypeResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsByTypeResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsByTypeResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsByTypeResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsByTypeResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByTypeResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsByTypeResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByTypeResponse.contexts)
  return _impl_.contexts_;
}

// optional string next_page_token = 2;
inline bool GetContextsByTypeResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetContextsByTypeResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetContextsByTypeResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetContextsByTypeResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByTypeResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextsByTypeResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByTypeResponse.next_page_token)
}
inline std::string* GetContextsByTypeResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByTypeResponse.next_page_token)
  return _s;
}
inline const std::string& GetContextsByTypeResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetContextsByTypeResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextsByTypeResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextsByTypeResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByTypeResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextsByTypeResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByTypeResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetContextByTypeAndNameRequest

// optional string type_name = 1;
inline bool GetContextByTypeAndNameRequest::_internal_has_type_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetContextByTypeAndNameRequest::has_type_name() const {
  return _internal_has_type_name();
}
inline void GetContextByTypeAndNameRequest::clear_type_name() {
  _impl_.type_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetContextByTypeAndNameRequest::type_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextByTypeAndNameRequest.type_name)
  return _internal_type_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextByTypeAndNameRequest::set_type_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.type_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextByTypeAndNameRequest.type_name)
}
inline std::string* GetContextByTypeAndNameRequest::mutable_type_name() {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextByTypeAndNameRequest.type_name)
  return _s;
}
inline const std::string& GetContextByTypeAndNameRequest::_internal_type_name() const {
  return _impl_.type_name_.Get();
}
inline void GetContextByTypeAndNameRequest::_internal_set_type_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::_internal_mutable_type_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::release_type_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextByTypeAndNameRequest.type_name)
  if (!_internal_has_type_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.type_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextByTypeAndNameRequest::set_allocated_type_name(std::string* type_name) {
  if (type_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_name_.SetAllocated(type_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_name_.IsDefault()) {
    _impl_.type_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextByTypeAndNameRequest.type_name)
}

// optional string type_version = 3;
inline bool GetContextByTypeAndNameRequest::_internal_has_type_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetContextByTypeAndNameRequest::has_type_version() const {
  return _internal_has_type_version();
}
inline void GetContextByTypeAndNameRequest::clear_type_version() {
  _impl_.type_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GetContextByTypeAndNameRequest::type_version() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextByTypeAndNameRequest.type_version)
  return _internal_type_version();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextByTypeAndNameRequest::set_type_version(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000004u;
 _impl_.type_version_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextByTypeAndNameRequest.type_version)
}
inline std::string* GetContextByTypeAndNameRequest::mutable_type_version() {
  std::string* _s = _internal_mutable_type_version();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextByTypeAndNameRequest.type_version)
  return _s;
}
inline const std::string& GetContextByTypeAndNameRequest::_internal_type_version() const {
  return _impl_.type_version_.Get();
}
inline void GetContextByTypeAndNameRequest::_internal_set_type_version(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.type_version_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::_internal_mutable_type_version() {
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.type_version_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::release_type_version() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextByTypeAndNameRequest.type_version)
  if (!_internal_has_type_version()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* p = _impl_.type_version_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextByTypeAndNameRequest::set_allocated_type_version(std::string* type_version) {
  if (type_version != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.type_version_.SetAllocated(type_version, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.type_version_.IsDefault()) {
    _impl_.type_version_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextByTypeAndNameRequest.type_version)
}

// optional string context_name = 2;
inline bool GetContextByTypeAndNameRequest::_internal_has_context_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetContextByTypeAndNameRequest::has_context_name() const {
  return _internal_has_context_name();
}
inline void GetContextByTypeAndNameRequest::clear_context_name() {
  _impl_.context_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GetContextByTypeAndNameRequest::context_name() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextByTypeAndNameRequest.context_name)
  return _internal_context_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetContextByTypeAndNameRequest::set_context_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.context_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextByTypeAndNameRequest.context_name)
}
inline std::string* GetContextByTypeAndNameRequest::mutable_context_name() {
  std::string* _s = _internal_mutable_context_name();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextByTypeAndNameRequest.context_name)
  return _s;
}
inline const std::string& GetContextByTypeAndNameRequest::_internal_context_name() const {
  return _impl_.context_name_.Get();
}
inline void GetContextByTypeAndNameRequest::_internal_set_context_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.context_name_.Set(value, GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::_internal_mutable_context_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.context_name_.Mutable(GetArenaForAllocation());
}
inline std::string* GetContextByTypeAndNameRequest::release_context_name() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextByTypeAndNameRequest.context_name)
  if (!_internal_has_context_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.context_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.context_name_.IsDefault()) {
    _impl_.context_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetContextByTypeAndNameRequest::set_allocated_context_name(std::string* context_name) {
  if (context_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.context_name_.SetAllocated(context_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.context_name_.IsDefault()) {
    _impl_.context_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextByTypeAndNameRequest.context_name)
}

// optional .ml_metadata.TransactionOptions transaction_options = 4;
inline bool GetContextByTypeAndNameRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextByTypeAndNameRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextByTypeAndNameRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextByTypeAndNameRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextByTypeAndNameRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextByTypeAndNameRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextByTypeAndNameRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextByTypeAndNameRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextByTypeAndNameRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextByTypeAndNameRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextByTypeAndNameRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextByTypeAndNameRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextByTypeAndNameRequest.transaction_options)
  return _msg;
}
inline void GetContextByTypeAndNameRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextByTypeAndNameRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextByTypeAndNameResponse

// optional .ml_metadata.Context context = 1;
inline bool GetContextByTypeAndNameResponse::_internal_has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_ != nullptr);
  return value;
}
inline bool GetContextByTypeAndNameResponse::has_context() const {
  return _internal_has_context();
}
inline const ::ml_metadata::Context& GetContextByTypeAndNameResponse::_internal_context() const {
  const ::ml_metadata::Context* p = _impl_.context_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::Context&>(
      ::ml_metadata::_Context_default_instance_);
}
inline const ::ml_metadata::Context& GetContextByTypeAndNameResponse::context() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextByTypeAndNameResponse.context)
  return _internal_context();
}
inline void GetContextByTypeAndNameResponse::unsafe_arena_set_allocated_context(
    ::ml_metadata::Context* context) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_);
  }
  _impl_.context_ = context;
  if (context) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextByTypeAndNameResponse.context)
}
inline ::ml_metadata::Context* GetContextByTypeAndNameResponse::release_context() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Context* temp = _impl_.context_;
  _impl_.context_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::Context* GetContextByTypeAndNameResponse::unsafe_arena_release_context() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextByTypeAndNameResponse.context)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::Context* temp = _impl_.context_;
  _impl_.context_ = nullptr;
  return temp;
}
inline ::ml_metadata::Context* GetContextByTypeAndNameResponse::_internal_mutable_context() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.context_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::Context>(GetArenaForAllocation());
    _impl_.context_ = p;
  }
  return _impl_.context_;
}
inline ::ml_metadata::Context* GetContextByTypeAndNameResponse::mutable_context() {
  ::ml_metadata::Context* _msg = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextByTypeAndNameResponse.context)
  return _msg;
}
inline void GetContextByTypeAndNameResponse::set_allocated_context(::ml_metadata::Context* context) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.context_);
  }
  if (context) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(context));
    if (message_arena != submessage_arena) {
      context = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.context_ = context;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextByTypeAndNameResponse.context)
}

// -------------------------------------------------------------------

// GetContextsByIDRequest

// repeated int64 context_ids = 1;
inline int GetContextsByIDRequest::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int GetContextsByIDRequest::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void GetContextsByIDRequest::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t GetContextsByIDRequest::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t GetContextsByIDRequest::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByIDRequest.context_ids)
  return _internal_context_ids(index);
}
inline void GetContextsByIDRequest::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByIDRequest.context_ids)
}
inline void GetContextsByIDRequest::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void GetContextsByIDRequest::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByIDRequest.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetContextsByIDRequest::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetContextsByIDRequest::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByIDRequest.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetContextsByIDRequest::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetContextsByIDRequest::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByIDRequest.context_ids)
  return _internal_mutable_context_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextsByIDRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsByIDRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsByIDRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsByIDRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByIDRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsByIDRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByIDRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsByIDRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByIDRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByIDRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByIDRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsByIDRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByIDRequest.transaction_options)
  return _msg;
}
inline void GetContextsByIDRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByIDRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsByIDResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsByIDResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsByIDResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsByIDResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByIDResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsByIDResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByIDResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsByIDResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsByIDResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByIDResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsByIDResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsByIDResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByIDResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsByIDResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByIDResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetContextsByArtifactRequest

// optional int64 artifact_id = 1;
inline bool GetContextsByArtifactRequest::_internal_has_artifact_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetContextsByArtifactRequest::has_artifact_id() const {
  return _internal_has_artifact_id();
}
inline void GetContextsByArtifactRequest::clear_artifact_id() {
  _impl_.artifact_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetContextsByArtifactRequest::_internal_artifact_id() const {
  return _impl_.artifact_id_;
}
inline int64_t GetContextsByArtifactRequest::artifact_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByArtifactRequest.artifact_id)
  return _internal_artifact_id();
}
inline void GetContextsByArtifactRequest::_internal_set_artifact_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.artifact_id_ = value;
}
inline void GetContextsByArtifactRequest::set_artifact_id(int64_t value) {
  _internal_set_artifact_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByArtifactRequest.artifact_id)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextsByArtifactRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsByArtifactRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsByArtifactRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsByArtifactRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByArtifactRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsByArtifactRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByArtifactRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsByArtifactRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByArtifactRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByArtifactRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByArtifactRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsByArtifactRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByArtifactRequest.transaction_options)
  return _msg;
}
inline void GetContextsByArtifactRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByArtifactRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsByArtifactResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsByArtifactResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsByArtifactResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsByArtifactResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByArtifactResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsByArtifactResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByArtifactResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsByArtifactResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsByArtifactResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByArtifactResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsByArtifactResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsByArtifactResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByArtifactResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsByArtifactResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByArtifactResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetContextsByExecutionRequest

// optional int64 execution_id = 1;
inline bool GetContextsByExecutionRequest::_internal_has_execution_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetContextsByExecutionRequest::has_execution_id() const {
  return _internal_has_execution_id();
}
inline void GetContextsByExecutionRequest::clear_execution_id() {
  _impl_.execution_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetContextsByExecutionRequest::_internal_execution_id() const {
  return _impl_.execution_id_;
}
inline int64_t GetContextsByExecutionRequest::execution_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExecutionRequest.execution_id)
  return _internal_execution_id();
}
inline void GetContextsByExecutionRequest::_internal_set_execution_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.execution_id_ = value;
}
inline void GetContextsByExecutionRequest::set_execution_id(int64_t value) {
  _internal_set_execution_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetContextsByExecutionRequest.execution_id)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetContextsByExecutionRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetContextsByExecutionRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetContextsByExecutionRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetContextsByExecutionRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExecutionRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetContextsByExecutionRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetContextsByExecutionRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetContextsByExecutionRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExecutionRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetContextsByExecutionRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExecutionRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetContextsByExecutionRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByExecutionRequest.transaction_options)
  return _msg;
}
inline void GetContextsByExecutionRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetContextsByExecutionRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetContextsByExecutionResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetContextsByExecutionResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetContextsByExecutionResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetContextsByExecutionResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetContextsByExecutionResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetContextsByExecutionResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetContextsByExecutionResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetContextsByExecutionResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetContextsByExecutionResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetContextsByExecutionResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetContextsByExecutionResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetContextsByExecutionResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetContextsByExecutionResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetContextsByExecutionResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetContextsByExecutionResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetParentContextsByContextRequest

// optional int64 context_id = 1;
inline bool GetParentContextsByContextRequest::_internal_has_context_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetParentContextsByContextRequest::has_context_id() const {
  return _internal_has_context_id();
}
inline void GetParentContextsByContextRequest::clear_context_id() {
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetParentContextsByContextRequest::_internal_context_id() const {
  return _impl_.context_id_;
}
inline int64_t GetParentContextsByContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextRequest.context_id)
  return _internal_context_id();
}
inline void GetParentContextsByContextRequest::_internal_set_context_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.context_id_ = value;
}
inline void GetParentContextsByContextRequest::set_context_id(int64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetParentContextsByContextRequest.context_id)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetParentContextsByContextRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetParentContextsByContextRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetParentContextsByContextRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetParentContextsByContextRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetParentContextsByContextRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetParentContextsByContextRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetParentContextsByContextRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetParentContextsByContextRequest.transaction_options)
  return _msg;
}
inline void GetParentContextsByContextRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetParentContextsByContextRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetParentContextsByContextResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetParentContextsByContextResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetParentContextsByContextResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetParentContextsByContextResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetParentContextsByContextResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetParentContextsByContextResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetParentContextsByContextResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetParentContextsByContextResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetParentContextsByContextResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetParentContextsByContextResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetParentContextsByContextResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetParentContextsByContextResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetParentContextsByContextResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetParentContextsByContextResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetChildrenContextsByContextRequest

// optional int64 context_id = 1;
inline bool GetChildrenContextsByContextRequest::_internal_has_context_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool GetChildrenContextsByContextRequest::has_context_id() const {
  return _internal_has_context_id();
}
inline void GetChildrenContextsByContextRequest::clear_context_id() {
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int64_t GetChildrenContextsByContextRequest::_internal_context_id() const {
  return _impl_.context_id_;
}
inline int64_t GetChildrenContextsByContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextRequest.context_id)
  return _internal_context_id();
}
inline void GetChildrenContextsByContextRequest::_internal_set_context_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.context_id_ = value;
}
inline void GetChildrenContextsByContextRequest::set_context_id(int64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetChildrenContextsByContextRequest.context_id)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetChildrenContextsByContextRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetChildrenContextsByContextRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetChildrenContextsByContextRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetChildrenContextsByContextRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetChildrenContextsByContextRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetChildrenContextsByContextRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetChildrenContextsByContextRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetChildrenContextsByContextRequest.transaction_options)
  return _msg;
}
inline void GetChildrenContextsByContextRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetChildrenContextsByContextRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetChildrenContextsByContextResponse

// repeated .ml_metadata.Context contexts = 1;
inline int GetChildrenContextsByContextResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetChildrenContextsByContextResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline ::ml_metadata::Context* GetChildrenContextsByContextResponse::mutable_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetChildrenContextsByContextResponse.contexts)
  return _impl_.contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetChildrenContextsByContextResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetChildrenContextsByContextResponse.contexts)
  return &_impl_.contexts_;
}
inline const ::ml_metadata::Context& GetChildrenContextsByContextResponse::_internal_contexts(int index) const {
  return _impl_.contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetChildrenContextsByContextResponse::contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextResponse.contexts)
  return _internal_contexts(index);
}
inline ::ml_metadata::Context* GetChildrenContextsByContextResponse::_internal_add_contexts() {
  return _impl_.contexts_.Add();
}
inline ::ml_metadata::Context* GetChildrenContextsByContextResponse::add_contexts() {
  ::ml_metadata::Context* _add = _internal_add_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetChildrenContextsByContextResponse.contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetChildrenContextsByContextResponse::contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetChildrenContextsByContextResponse.contexts)
  return _impl_.contexts_;
}

// -------------------------------------------------------------------

// GetParentContextsByContextsRequest

// repeated int64 context_ids = 1 [packed = true];
inline int GetParentContextsByContextsRequest::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int GetParentContextsByContextsRequest::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void GetParentContextsByContextsRequest::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t GetParentContextsByContextsRequest::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t GetParentContextsByContextsRequest::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextsRequest.context_ids)
  return _internal_context_ids(index);
}
inline void GetParentContextsByContextsRequest::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetParentContextsByContextsRequest.context_ids)
}
inline void GetParentContextsByContextsRequest::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void GetParentContextsByContextsRequest::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetParentContextsByContextsRequest.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetParentContextsByContextsRequest::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetParentContextsByContextsRequest::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetParentContextsByContextsRequest.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetParentContextsByContextsRequest::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetParentContextsByContextsRequest::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetParentContextsByContextsRequest.context_ids)
  return _internal_mutable_context_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetParentContextsByContextsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetParentContextsByContextsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetParentContextsByContextsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetParentContextsByContextsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetParentContextsByContextsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetParentContextsByContextsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetParentContextsByContextsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetParentContextsByContextsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetParentContextsByContextsRequest.transaction_options)
  return _msg;
}
inline void GetParentContextsByContextsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetParentContextsByContextsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetParentContextsByContextsResponse_ParentContextsPerChild

// repeated .ml_metadata.Context parent_contexts = 1;
inline int GetParentContextsByContextsResponse_ParentContextsPerChild::_internal_parent_contexts_size() const {
  return _impl_.parent_contexts_.size();
}
inline int GetParentContextsByContextsResponse_ParentContextsPerChild::parent_contexts_size() const {
  return _internal_parent_contexts_size();
}
inline ::ml_metadata::Context* GetParentContextsByContextsResponse_ParentContextsPerChild::mutable_parent_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild.parent_contexts)
  return _impl_.parent_contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetParentContextsByContextsResponse_ParentContextsPerChild::mutable_parent_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild.parent_contexts)
  return &_impl_.parent_contexts_;
}
inline const ::ml_metadata::Context& GetParentContextsByContextsResponse_ParentContextsPerChild::_internal_parent_contexts(int index) const {
  return _impl_.parent_contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetParentContextsByContextsResponse_ParentContextsPerChild::parent_contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild.parent_contexts)
  return _internal_parent_contexts(index);
}
inline ::ml_metadata::Context* GetParentContextsByContextsResponse_ParentContextsPerChild::_internal_add_parent_contexts() {
  return _impl_.parent_contexts_.Add();
}
inline ::ml_metadata::Context* GetParentContextsByContextsResponse_ParentContextsPerChild::add_parent_contexts() {
  ::ml_metadata::Context* _add = _internal_add_parent_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild.parent_contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetParentContextsByContextsResponse_ParentContextsPerChild::parent_contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild.parent_contexts)
  return _impl_.parent_contexts_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetParentContextsByContextsResponse

// map<int64, .ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild> contexts = 2;
inline int GetParentContextsByContextsResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetParentContextsByContextsResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline void GetParentContextsByContextsResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >&
GetParentContextsByContextsResponse::_internal_contexts() const {
  return _impl_.contexts_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >&
GetParentContextsByContextsResponse::contexts() const {
  // @@protoc_insertion_point(field_map:ml_metadata.GetParentContextsByContextsResponse.contexts)
  return _internal_contexts();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >*
GetParentContextsByContextsResponse::_internal_mutable_contexts() {
  return _impl_.contexts_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >*
GetParentContextsByContextsResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_map:ml_metadata.GetParentContextsByContextsResponse.contexts)
  return _internal_mutable_contexts();
}

// -------------------------------------------------------------------

// GetChildrenContextsByContextsRequest

// repeated int64 context_ids = 1 [packed = true];
inline int GetChildrenContextsByContextsRequest::_internal_context_ids_size() const {
  return _impl_.context_ids_.size();
}
inline int GetChildrenContextsByContextsRequest::context_ids_size() const {
  return _internal_context_ids_size();
}
inline void GetChildrenContextsByContextsRequest::clear_context_ids() {
  _impl_.context_ids_.Clear();
}
inline int64_t GetChildrenContextsByContextsRequest::_internal_context_ids(int index) const {
  return _impl_.context_ids_.Get(index);
}
inline int64_t GetChildrenContextsByContextsRequest::context_ids(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextsRequest.context_ids)
  return _internal_context_ids(index);
}
inline void GetChildrenContextsByContextsRequest::set_context_ids(int index, int64_t value) {
  _impl_.context_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetChildrenContextsByContextsRequest.context_ids)
}
inline void GetChildrenContextsByContextsRequest::_internal_add_context_ids(int64_t value) {
  _impl_.context_ids_.Add(value);
}
inline void GetChildrenContextsByContextsRequest::add_context_ids(int64_t value) {
  _internal_add_context_ids(value);
  // @@protoc_insertion_point(field_add:ml_metadata.GetChildrenContextsByContextsRequest.context_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetChildrenContextsByContextsRequest::_internal_context_ids() const {
  return _impl_.context_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >&
GetChildrenContextsByContextsRequest::context_ids() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetChildrenContextsByContextsRequest.context_ids)
  return _internal_context_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetChildrenContextsByContextsRequest::_internal_mutable_context_ids() {
  return &_impl_.context_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int64_t >*
GetChildrenContextsByContextsRequest::mutable_context_ids() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetChildrenContextsByContextsRequest.context_ids)
  return _internal_mutable_context_ids();
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetChildrenContextsByContextsRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetChildrenContextsByContextsRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetChildrenContextsByContextsRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetChildrenContextsByContextsRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextsRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetChildrenContextsByContextsRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetChildrenContextsByContextsRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextsRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextsRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetChildrenContextsByContextsRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextsRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetChildrenContextsByContextsRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetChildrenContextsByContextsRequest.transaction_options)
  return _msg;
}
inline void GetChildrenContextsByContextsRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetChildrenContextsByContextsRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetChildrenContextsByContextsResponse_ChildrenContextsPerParent

// repeated .ml_metadata.Context children_contexts = 1;
inline int GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_internal_children_contexts_size() const {
  return _impl_.children_contexts_.size();
}
inline int GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::children_contexts_size() const {
  return _internal_children_contexts_size();
}
inline ::ml_metadata::Context* GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::mutable_children_contexts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent.children_contexts)
  return _impl_.children_contexts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >*
GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::mutable_children_contexts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent.children_contexts)
  return &_impl_.children_contexts_;
}
inline const ::ml_metadata::Context& GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_internal_children_contexts(int index) const {
  return _impl_.children_contexts_.Get(index);
}
inline const ::ml_metadata::Context& GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::children_contexts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent.children_contexts)
  return _internal_children_contexts(index);
}
inline ::ml_metadata::Context* GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_internal_add_children_contexts() {
  return _impl_.children_contexts_.Add();
}
inline ::ml_metadata::Context* GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::add_children_contexts() {
  ::ml_metadata::Context* _add = _internal_add_children_contexts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent.children_contexts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Context >&
GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::children_contexts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent.children_contexts)
  return _impl_.children_contexts_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetChildrenContextsByContextsResponse

// map<int64, .ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent> contexts = 2;
inline int GetChildrenContextsByContextsResponse::_internal_contexts_size() const {
  return _impl_.contexts_.size();
}
inline int GetChildrenContextsByContextsResponse::contexts_size() const {
  return _internal_contexts_size();
}
inline void GetChildrenContextsByContextsResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >&
GetChildrenContextsByContextsResponse::_internal_contexts() const {
  return _impl_.contexts_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >&
GetChildrenContextsByContextsResponse::contexts() const {
  // @@protoc_insertion_point(field_map:ml_metadata.GetChildrenContextsByContextsResponse.contexts)
  return _internal_contexts();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >*
GetChildrenContextsByContextsResponse::_internal_mutable_contexts() {
  return _impl_.contexts_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >*
GetChildrenContextsByContextsResponse::mutable_contexts() {
  // @@protoc_insertion_point(field_mutable_map:ml_metadata.GetChildrenContextsByContextsResponse.contexts)
  return _internal_mutable_contexts();
}

// -------------------------------------------------------------------

// GetArtifactsByContextRequest

// optional int64 context_id = 1;
inline bool GetArtifactsByContextRequest::_internal_has_context_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetArtifactsByContextRequest::has_context_id() const {
  return _internal_has_context_id();
}
inline void GetArtifactsByContextRequest::clear_context_id() {
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t GetArtifactsByContextRequest::_internal_context_id() const {
  return _impl_.context_id_;
}
inline int64_t GetArtifactsByContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByContextRequest.context_id)
  return _internal_context_id();
}
inline void GetArtifactsByContextRequest::_internal_set_context_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.context_id_ = value;
}
inline void GetArtifactsByContextRequest::set_context_id(int64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByContextRequest.context_id)
}

// optional .ml_metadata.ListOperationOptions options = 2;
inline bool GetArtifactsByContextRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetArtifactsByContextRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsByContextRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetArtifactsByContextRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByContextRequest.options)
  return _internal_options();
}
inline void GetArtifactsByContextRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByContextRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByContextRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByContextRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByContextRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByContextRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetArtifactsByContextRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByContextRequest.options)
  return _msg;
}
inline void GetArtifactsByContextRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByContextRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetArtifactsByContextRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetArtifactsByContextRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByContextRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetArtifactsByContextRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByContextRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetArtifactsByContextRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetArtifactsByContextRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByContextRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByContextRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByContextRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByContextRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetArtifactsByContextRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByContextRequest.transaction_options)
  return _msg;
}
inline void GetArtifactsByContextRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByContextRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetArtifactsByContextResponse

// repeated .ml_metadata.Artifact artifacts = 1;
inline int GetArtifactsByContextResponse::_internal_artifacts_size() const {
  return _impl_.artifacts_.size();
}
inline int GetArtifactsByContextResponse::artifacts_size() const {
  return _internal_artifacts_size();
}
inline ::ml_metadata::Artifact* GetArtifactsByContextResponse::mutable_artifacts(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByContextResponse.artifacts)
  return _impl_.artifacts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >*
GetArtifactsByContextResponse::mutable_artifacts() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetArtifactsByContextResponse.artifacts)
  return &_impl_.artifacts_;
}
inline const ::ml_metadata::Artifact& GetArtifactsByContextResponse::_internal_artifacts(int index) const {
  return _impl_.artifacts_.Get(index);
}
inline const ::ml_metadata::Artifact& GetArtifactsByContextResponse::artifacts(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByContextResponse.artifacts)
  return _internal_artifacts(index);
}
inline ::ml_metadata::Artifact* GetArtifactsByContextResponse::_internal_add_artifacts() {
  return _impl_.artifacts_.Add();
}
inline ::ml_metadata::Artifact* GetArtifactsByContextResponse::add_artifacts() {
  ::ml_metadata::Artifact* _add = _internal_add_artifacts();
  // @@protoc_insertion_point(field_add:ml_metadata.GetArtifactsByContextResponse.artifacts)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Artifact >&
GetArtifactsByContextResponse::artifacts() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetArtifactsByContextResponse.artifacts)
  return _impl_.artifacts_;
}

// optional string next_page_token = 2;
inline bool GetArtifactsByContextResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetArtifactsByContextResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetArtifactsByContextResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetArtifactsByContextResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetArtifactsByContextResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetArtifactsByContextResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetArtifactsByContextResponse.next_page_token)
}
inline std::string* GetArtifactsByContextResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetArtifactsByContextResponse.next_page_token)
  return _s;
}
inline const std::string& GetArtifactsByContextResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetArtifactsByContextResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetArtifactsByContextResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetArtifactsByContextResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetArtifactsByContextResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetArtifactsByContextResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetArtifactsByContextResponse.next_page_token)
}

// -------------------------------------------------------------------

// GetExecutionsByContextRequest

// optional int64 context_id = 1;
inline bool GetExecutionsByContextRequest::_internal_has_context_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool GetExecutionsByContextRequest::has_context_id() const {
  return _internal_has_context_id();
}
inline void GetExecutionsByContextRequest::clear_context_id() {
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int64_t GetExecutionsByContextRequest::_internal_context_id() const {
  return _impl_.context_id_;
}
inline int64_t GetExecutionsByContextRequest::context_id() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextRequest.context_id)
  return _internal_context_id();
}
inline void GetExecutionsByContextRequest::_internal_set_context_id(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.context_id_ = value;
}
inline void GetExecutionsByContextRequest::set_context_id(int64_t value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByContextRequest.context_id)
}

// optional .ml_metadata.ListOperationOptions options = 2;
inline bool GetExecutionsByContextRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetExecutionsByContextRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsByContextRequest::_internal_options() const {
  const ::ml_metadata::ListOperationOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::ListOperationOptions&>(
      ::ml_metadata::_ListOperationOptions_default_instance_);
}
inline const ::ml_metadata::ListOperationOptions& GetExecutionsByContextRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextRequest.options)
  return _internal_options();
}
inline void GetExecutionsByContextRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::ListOperationOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByContextRequest.options)
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByContextRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByContextRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByContextRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::ListOperationOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByContextRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::ListOperationOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::ListOperationOptions* GetExecutionsByContextRequest::mutable_options() {
  ::ml_metadata::ListOperationOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByContextRequest.options)
  return _msg;
}
inline void GetExecutionsByContextRequest::set_allocated_options(::ml_metadata::ListOperationOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByContextRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetExecutionsByContextRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsByContextRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByContextRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByContextRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsByContextRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByContextRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByContextRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByContextRequest.transaction_options)
  return _msg;
}
inline void GetExecutionsByContextRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByContextRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetExecutionsByContextResponse

// repeated .ml_metadata.Execution executions = 1;
inline int GetExecutionsByContextResponse::_internal_executions_size() const {
  return _impl_.executions_.size();
}
inline int GetExecutionsByContextResponse::executions_size() const {
  return _internal_executions_size();
}
inline ::ml_metadata::Execution* GetExecutionsByContextResponse::mutable_executions(int index) {
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByContextResponse.executions)
  return _impl_.executions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >*
GetExecutionsByContextResponse::mutable_executions() {
  // @@protoc_insertion_point(field_mutable_list:ml_metadata.GetExecutionsByContextResponse.executions)
  return &_impl_.executions_;
}
inline const ::ml_metadata::Execution& GetExecutionsByContextResponse::_internal_executions(int index) const {
  return _impl_.executions_.Get(index);
}
inline const ::ml_metadata::Execution& GetExecutionsByContextResponse::executions(int index) const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextResponse.executions)
  return _internal_executions(index);
}
inline ::ml_metadata::Execution* GetExecutionsByContextResponse::_internal_add_executions() {
  return _impl_.executions_.Add();
}
inline ::ml_metadata::Execution* GetExecutionsByContextResponse::add_executions() {
  ::ml_metadata::Execution* _add = _internal_add_executions();
  // @@protoc_insertion_point(field_add:ml_metadata.GetExecutionsByContextResponse.executions)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ml_metadata::Execution >&
GetExecutionsByContextResponse::executions() const {
  // @@protoc_insertion_point(field_list:ml_metadata.GetExecutionsByContextResponse.executions)
  return _impl_.executions_;
}

// optional string next_page_token = 2;
inline bool GetExecutionsByContextResponse::_internal_has_next_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool GetExecutionsByContextResponse::has_next_page_token() const {
  return _internal_has_next_page_token();
}
inline void GetExecutionsByContextResponse::clear_next_page_token() {
  _impl_.next_page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GetExecutionsByContextResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextResponse.next_page_token)
  return _internal_next_page_token();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void GetExecutionsByContextResponse::set_next_page_token(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.next_page_token_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ml_metadata.GetExecutionsByContextResponse.next_page_token)
}
inline std::string* GetExecutionsByContextResponse::mutable_next_page_token() {
  std::string* _s = _internal_mutable_next_page_token();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByContextResponse.next_page_token)
  return _s;
}
inline const std::string& GetExecutionsByContextResponse::_internal_next_page_token() const {
  return _impl_.next_page_token_.Get();
}
inline void GetExecutionsByContextResponse::_internal_set_next_page_token(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.next_page_token_.Set(value, GetArenaForAllocation());
}
inline std::string* GetExecutionsByContextResponse::_internal_mutable_next_page_token() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.next_page_token_.Mutable(GetArenaForAllocation());
}
inline std::string* GetExecutionsByContextResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByContextResponse.next_page_token)
  if (!_internal_has_next_page_token()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.next_page_token_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void GetExecutionsByContextResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.next_page_token_.SetAllocated(next_page_token, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.next_page_token_.IsDefault()) {
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByContextResponse.next_page_token)
}

// optional .ml_metadata.TransactionOptions transaction_options = 3;
inline bool GetExecutionsByContextResponse::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetExecutionsByContextResponse::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByContextResponse::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetExecutionsByContextResponse::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetExecutionsByContextResponse.transaction_options)
  return _internal_transaction_options();
}
inline void GetExecutionsByContextResponse::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetExecutionsByContextResponse.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextResponse::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextResponse::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetExecutionsByContextResponse.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextResponse::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetExecutionsByContextResponse::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetExecutionsByContextResponse.transaction_options)
  return _msg;
}
inline void GetExecutionsByContextResponse::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetExecutionsByContextResponse.transaction_options)
}

// -------------------------------------------------------------------

// GetLineageGraphRequest

// optional .ml_metadata.LineageGraphQueryOptions options = 1;
inline bool GetLineageGraphRequest::_internal_has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline bool GetLineageGraphRequest::has_options() const {
  return _internal_has_options();
}
inline const ::ml_metadata::LineageGraphQueryOptions& GetLineageGraphRequest::_internal_options() const {
  const ::ml_metadata::LineageGraphQueryOptions* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::LineageGraphQueryOptions&>(
      ::ml_metadata::_LineageGraphQueryOptions_default_instance_);
}
inline const ::ml_metadata::LineageGraphQueryOptions& GetLineageGraphRequest::options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageGraphRequest.options)
  return _internal_options();
}
inline void GetLineageGraphRequest::unsafe_arena_set_allocated_options(
    ::ml_metadata::LineageGraphQueryOptions* options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = options;
  if (options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageGraphRequest.options)
}
inline ::ml_metadata::LineageGraphQueryOptions* GetLineageGraphRequest::release_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraphQueryOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::LineageGraphQueryOptions* GetLineageGraphRequest::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageGraphRequest.options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraphQueryOptions* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::ml_metadata::LineageGraphQueryOptions* GetLineageGraphRequest::_internal_mutable_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::LineageGraphQueryOptions>(GetArenaForAllocation());
    _impl_.options_ = p;
  }
  return _impl_.options_;
}
inline ::ml_metadata::LineageGraphQueryOptions* GetLineageGraphRequest::mutable_options() {
  ::ml_metadata::LineageGraphQueryOptions* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageGraphRequest.options)
  return _msg;
}
inline void GetLineageGraphRequest::set_allocated_options(::ml_metadata::LineageGraphQueryOptions* options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.options_);
  }
  if (options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(options));
    if (message_arena != submessage_arena) {
      options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.options_ = options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageGraphRequest.options)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetLineageGraphRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetLineageGraphRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetLineageGraphRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetLineageGraphRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageGraphRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetLineageGraphRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageGraphRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetLineageGraphRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetLineageGraphRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageGraphRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetLineageGraphRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetLineageGraphRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageGraphRequest.transaction_options)
  return _msg;
}
inline void GetLineageGraphRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageGraphRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetLineageGraphResponse

// optional .ml_metadata.LineageGraph subgraph = 1;
inline bool GetLineageGraphResponse::_internal_has_subgraph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.subgraph_ != nullptr);
  return value;
}
inline bool GetLineageGraphResponse::has_subgraph() const {
  return _internal_has_subgraph();
}
inline const ::ml_metadata::LineageGraph& GetLineageGraphResponse::_internal_subgraph() const {
  const ::ml_metadata::LineageGraph* p = _impl_.subgraph_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::LineageGraph&>(
      ::ml_metadata::_LineageGraph_default_instance_);
}
inline const ::ml_metadata::LineageGraph& GetLineageGraphResponse::subgraph() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageGraphResponse.subgraph)
  return _internal_subgraph();
}
inline void GetLineageGraphResponse::unsafe_arena_set_allocated_subgraph(
    ::ml_metadata::LineageGraph* subgraph) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.subgraph_);
  }
  _impl_.subgraph_ = subgraph;
  if (subgraph) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageGraphResponse.subgraph)
}
inline ::ml_metadata::LineageGraph* GetLineageGraphResponse::release_subgraph() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraph* temp = _impl_.subgraph_;
  _impl_.subgraph_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::LineageGraph* GetLineageGraphResponse::unsafe_arena_release_subgraph() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageGraphResponse.subgraph)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraph* temp = _impl_.subgraph_;
  _impl_.subgraph_ = nullptr;
  return temp;
}
inline ::ml_metadata::LineageGraph* GetLineageGraphResponse::_internal_mutable_subgraph() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.subgraph_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::LineageGraph>(GetArenaForAllocation());
    _impl_.subgraph_ = p;
  }
  return _impl_.subgraph_;
}
inline ::ml_metadata::LineageGraph* GetLineageGraphResponse::mutable_subgraph() {
  ::ml_metadata::LineageGraph* _msg = _internal_mutable_subgraph();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageGraphResponse.subgraph)
  return _msg;
}
inline void GetLineageGraphResponse::set_allocated_subgraph(::ml_metadata::LineageGraph* subgraph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.subgraph_);
  }
  if (subgraph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(subgraph));
    if (message_arena != submessage_arena) {
      subgraph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, subgraph, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subgraph_ = subgraph;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageGraphResponse.subgraph)
}

// -------------------------------------------------------------------

// GetLineageSubgraphRequest

// optional .ml_metadata.LineageSubgraphQueryOptions lineage_subgraph_query_options = 1;
inline bool GetLineageSubgraphRequest::_internal_has_lineage_subgraph_query_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lineage_subgraph_query_options_ != nullptr);
  return value;
}
inline bool GetLineageSubgraphRequest::has_lineage_subgraph_query_options() const {
  return _internal_has_lineage_subgraph_query_options();
}
inline const ::ml_metadata::LineageSubgraphQueryOptions& GetLineageSubgraphRequest::_internal_lineage_subgraph_query_options() const {
  const ::ml_metadata::LineageSubgraphQueryOptions* p = _impl_.lineage_subgraph_query_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::LineageSubgraphQueryOptions&>(
      ::ml_metadata::_LineageSubgraphQueryOptions_default_instance_);
}
inline const ::ml_metadata::LineageSubgraphQueryOptions& GetLineageSubgraphRequest::lineage_subgraph_query_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageSubgraphRequest.lineage_subgraph_query_options)
  return _internal_lineage_subgraph_query_options();
}
inline void GetLineageSubgraphRequest::unsafe_arena_set_allocated_lineage_subgraph_query_options(
    ::ml_metadata::LineageSubgraphQueryOptions* lineage_subgraph_query_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lineage_subgraph_query_options_);
  }
  _impl_.lineage_subgraph_query_options_ = lineage_subgraph_query_options;
  if (lineage_subgraph_query_options) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageSubgraphRequest.lineage_subgraph_query_options)
}
inline ::ml_metadata::LineageSubgraphQueryOptions* GetLineageSubgraphRequest::release_lineage_subgraph_query_options() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageSubgraphQueryOptions* temp = _impl_.lineage_subgraph_query_options_;
  _impl_.lineage_subgraph_query_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::LineageSubgraphQueryOptions* GetLineageSubgraphRequest::unsafe_arena_release_lineage_subgraph_query_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageSubgraphRequest.lineage_subgraph_query_options)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageSubgraphQueryOptions* temp = _impl_.lineage_subgraph_query_options_;
  _impl_.lineage_subgraph_query_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::LineageSubgraphQueryOptions* GetLineageSubgraphRequest::_internal_mutable_lineage_subgraph_query_options() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lineage_subgraph_query_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::LineageSubgraphQueryOptions>(GetArenaForAllocation());
    _impl_.lineage_subgraph_query_options_ = p;
  }
  return _impl_.lineage_subgraph_query_options_;
}
inline ::ml_metadata::LineageSubgraphQueryOptions* GetLineageSubgraphRequest::mutable_lineage_subgraph_query_options() {
  ::ml_metadata::LineageSubgraphQueryOptions* _msg = _internal_mutable_lineage_subgraph_query_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageSubgraphRequest.lineage_subgraph_query_options)
  return _msg;
}
inline void GetLineageSubgraphRequest::set_allocated_lineage_subgraph_query_options(::ml_metadata::LineageSubgraphQueryOptions* lineage_subgraph_query_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lineage_subgraph_query_options_);
  }
  if (lineage_subgraph_query_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lineage_subgraph_query_options));
    if (message_arena != submessage_arena) {
      lineage_subgraph_query_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lineage_subgraph_query_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.lineage_subgraph_query_options_ = lineage_subgraph_query_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageSubgraphRequest.lineage_subgraph_query_options)
}

// optional .google.protobuf.FieldMask read_mask = 3;
inline bool GetLineageSubgraphRequest::_internal_has_read_mask() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.read_mask_ != nullptr);
  return value;
}
inline bool GetLineageSubgraphRequest::has_read_mask() const {
  return _internal_has_read_mask();
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& GetLineageSubgraphRequest::_internal_read_mask() const {
  const ::PROTOBUF_NAMESPACE_ID::FieldMask* p = _impl_.read_mask_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::FieldMask&>(
      ::PROTOBUF_NAMESPACE_ID::_FieldMask_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::FieldMask& GetLineageSubgraphRequest::read_mask() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageSubgraphRequest.read_mask)
  return _internal_read_mask();
}
inline void GetLineageSubgraphRequest::unsafe_arena_set_allocated_read_mask(
    ::PROTOBUF_NAMESPACE_ID::FieldMask* read_mask) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.read_mask_);
  }
  _impl_.read_mask_ = read_mask;
  if (read_mask) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageSubgraphRequest.read_mask)
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* GetLineageSubgraphRequest::release_read_mask() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.read_mask_;
  _impl_.read_mask_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* GetLineageSubgraphRequest::unsafe_arena_release_read_mask() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageSubgraphRequest.read_mask)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::FieldMask* temp = _impl_.read_mask_;
  _impl_.read_mask_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* GetLineageSubgraphRequest::_internal_mutable_read_mask() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.read_mask_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::FieldMask>(GetArenaForAllocation());
    _impl_.read_mask_ = p;
  }
  return _impl_.read_mask_;
}
inline ::PROTOBUF_NAMESPACE_ID::FieldMask* GetLineageSubgraphRequest::mutable_read_mask() {
  ::PROTOBUF_NAMESPACE_ID::FieldMask* _msg = _internal_mutable_read_mask();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageSubgraphRequest.read_mask)
  return _msg;
}
inline void GetLineageSubgraphRequest::set_allocated_read_mask(::PROTOBUF_NAMESPACE_ID::FieldMask* read_mask) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.read_mask_);
  }
  if (read_mask) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(read_mask));
    if (message_arena != submessage_arena) {
      read_mask = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, read_mask, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.read_mask_ = read_mask;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageSubgraphRequest.read_mask)
}

// optional .ml_metadata.TransactionOptions transaction_options = 2;
inline bool GetLineageSubgraphRequest::_internal_has_transaction_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transaction_options_ != nullptr);
  return value;
}
inline bool GetLineageSubgraphRequest::has_transaction_options() const {
  return _internal_has_transaction_options();
}
inline const ::ml_metadata::TransactionOptions& GetLineageSubgraphRequest::_internal_transaction_options() const {
  const ::ml_metadata::TransactionOptions* p = _impl_.transaction_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::TransactionOptions&>(
      ::ml_metadata::_TransactionOptions_default_instance_);
}
inline const ::ml_metadata::TransactionOptions& GetLineageSubgraphRequest::transaction_options() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageSubgraphRequest.transaction_options)
  return _internal_transaction_options();
}
inline void GetLineageSubgraphRequest::unsafe_arena_set_allocated_transaction_options(
    ::ml_metadata::TransactionOptions* transaction_options) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  _impl_.transaction_options_ = transaction_options;
  if (transaction_options) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageSubgraphRequest.transaction_options)
}
inline ::ml_metadata::TransactionOptions* GetLineageSubgraphRequest::release_transaction_options() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetLineageSubgraphRequest::unsafe_arena_release_transaction_options() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageSubgraphRequest.transaction_options)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ml_metadata::TransactionOptions* temp = _impl_.transaction_options_;
  _impl_.transaction_options_ = nullptr;
  return temp;
}
inline ::ml_metadata::TransactionOptions* GetLineageSubgraphRequest::_internal_mutable_transaction_options() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.transaction_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::TransactionOptions>(GetArenaForAllocation());
    _impl_.transaction_options_ = p;
  }
  return _impl_.transaction_options_;
}
inline ::ml_metadata::TransactionOptions* GetLineageSubgraphRequest::mutable_transaction_options() {
  ::ml_metadata::TransactionOptions* _msg = _internal_mutable_transaction_options();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageSubgraphRequest.transaction_options)
  return _msg;
}
inline void GetLineageSubgraphRequest::set_allocated_transaction_options(::ml_metadata::TransactionOptions* transaction_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.transaction_options_);
  }
  if (transaction_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(transaction_options));
    if (message_arena != submessage_arena) {
      transaction_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transaction_options, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.transaction_options_ = transaction_options;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageSubgraphRequest.transaction_options)
}

// -------------------------------------------------------------------

// GetLineageSubgraphResponse

// optional .ml_metadata.LineageGraph lineage_subgraph = 1;
inline bool GetLineageSubgraphResponse::_internal_has_lineage_subgraph() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lineage_subgraph_ != nullptr);
  return value;
}
inline bool GetLineageSubgraphResponse::has_lineage_subgraph() const {
  return _internal_has_lineage_subgraph();
}
inline const ::ml_metadata::LineageGraph& GetLineageSubgraphResponse::_internal_lineage_subgraph() const {
  const ::ml_metadata::LineageGraph* p = _impl_.lineage_subgraph_;
  return p != nullptr ? *p : reinterpret_cast<const ::ml_metadata::LineageGraph&>(
      ::ml_metadata::_LineageGraph_default_instance_);
}
inline const ::ml_metadata::LineageGraph& GetLineageSubgraphResponse::lineage_subgraph() const {
  // @@protoc_insertion_point(field_get:ml_metadata.GetLineageSubgraphResponse.lineage_subgraph)
  return _internal_lineage_subgraph();
}
inline void GetLineageSubgraphResponse::unsafe_arena_set_allocated_lineage_subgraph(
    ::ml_metadata::LineageGraph* lineage_subgraph) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lineage_subgraph_);
  }
  _impl_.lineage_subgraph_ = lineage_subgraph;
  if (lineage_subgraph) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ml_metadata.GetLineageSubgraphResponse.lineage_subgraph)
}
inline ::ml_metadata::LineageGraph* GetLineageSubgraphResponse::release_lineage_subgraph() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraph* temp = _impl_.lineage_subgraph_;
  _impl_.lineage_subgraph_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::ml_metadata::LineageGraph* GetLineageSubgraphResponse::unsafe_arena_release_lineage_subgraph() {
  // @@protoc_insertion_point(field_release:ml_metadata.GetLineageSubgraphResponse.lineage_subgraph)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ml_metadata::LineageGraph* temp = _impl_.lineage_subgraph_;
  _impl_.lineage_subgraph_ = nullptr;
  return temp;
}
inline ::ml_metadata::LineageGraph* GetLineageSubgraphResponse::_internal_mutable_lineage_subgraph() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.lineage_subgraph_ == nullptr) {
    auto* p = CreateMaybeMessage<::ml_metadata::LineageGraph>(GetArenaForAllocation());
    _impl_.lineage_subgraph_ = p;
  }
  return _impl_.lineage_subgraph_;
}
inline ::ml_metadata::LineageGraph* GetLineageSubgraphResponse::mutable_lineage_subgraph() {
  ::ml_metadata::LineageGraph* _msg = _internal_mutable_lineage_subgraph();
  // @@protoc_insertion_point(field_mutable:ml_metadata.GetLineageSubgraphResponse.lineage_subgraph)
  return _msg;
}
inline void GetLineageSubgraphResponse::set_allocated_lineage_subgraph(::ml_metadata::LineageGraph* lineage_subgraph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.lineage_subgraph_);
  }
  if (lineage_subgraph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lineage_subgraph));
    if (message_arena != submessage_arena) {
      lineage_subgraph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lineage_subgraph, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.lineage_subgraph_ = lineage_subgraph;
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.GetLineageSubgraphResponse.lineage_subgraph)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ml_metadata

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto
