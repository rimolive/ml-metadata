// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ml_metadata/proto/metadata_store_service.proto

#include "ml_metadata/proto/metadata_store_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ml_metadata {
PROTOBUF_CONSTEXPR ArtifactAndType::ArtifactAndType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_)*/nullptr
  , /*decltype(_impl_.type_)*/nullptr} {}
struct ArtifactAndTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArtifactAndTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArtifactAndTypeDefaultTypeInternal() {}
  union {
    ArtifactAndType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArtifactAndTypeDefaultTypeInternal _ArtifactAndType_default_instance_;
PROTOBUF_CONSTEXPR ArtifactStructMap_PropertiesEntry_DoNotUse::ArtifactStructMap_PropertiesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ArtifactStructMap_PropertiesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArtifactStructMap_PropertiesEntry_DoNotUseDefaultTypeInternal _ArtifactStructMap_PropertiesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR ArtifactStructMap::ArtifactStructMap(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.properties_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArtifactStructMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArtifactStructMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArtifactStructMapDefaultTypeInternal() {}
  union {
    ArtifactStructMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArtifactStructMapDefaultTypeInternal _ArtifactStructMap_default_instance_;
PROTOBUF_CONSTEXPR ArtifactStructList::ArtifactStructList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.elements_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ArtifactStructListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArtifactStructListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArtifactStructListDefaultTypeInternal() {}
  union {
    ArtifactStructList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArtifactStructListDefaultTypeInternal _ArtifactStructList_default_instance_;
PROTOBUF_CONSTEXPR ArtifactStruct::ArtifactStruct(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ArtifactStructDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArtifactStructDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArtifactStructDefaultTypeInternal() {}
  union {
    ArtifactStruct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArtifactStructDefaultTypeInternal _ArtifactStruct_default_instance_;
PROTOBUF_CONSTEXPR PutArtifactsRequest_Options::PutArtifactsRequest_Options(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.abort_if_latest_updated_time_changed_)*/false} {}
struct PutArtifactsRequest_OptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutArtifactsRequest_OptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutArtifactsRequest_OptionsDefaultTypeInternal() {}
  union {
    PutArtifactsRequest_Options _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutArtifactsRequest_OptionsDefaultTypeInternal _PutArtifactsRequest_Options_default_instance_;
PROTOBUF_CONSTEXPR PutArtifactsRequest::PutArtifactsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr} {}
struct PutArtifactsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutArtifactsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutArtifactsRequestDefaultTypeInternal() {}
  union {
    PutArtifactsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutArtifactsRequestDefaultTypeInternal _PutArtifactsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutArtifactsResponse::PutArtifactsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutArtifactsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutArtifactsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutArtifactsResponseDefaultTypeInternal() {}
  union {
    PutArtifactsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutArtifactsResponseDefaultTypeInternal _PutArtifactsResponse_default_instance_;
PROTOBUF_CONSTEXPR PutArtifactTypeRequest::PutArtifactTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_type_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.can_add_fields_)*/false
  , /*decltype(_impl_.can_omit_fields_)*/false
  , /*decltype(_impl_.can_delete_fields_)*/false
  , /*decltype(_impl_.all_fields_match_)*/true} {}
struct PutArtifactTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutArtifactTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutArtifactTypeRequestDefaultTypeInternal() {}
  union {
    PutArtifactTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutArtifactTypeRequestDefaultTypeInternal _PutArtifactTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR PutArtifactTypeResponse::PutArtifactTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_id_)*/int64_t{0}} {}
struct PutArtifactTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutArtifactTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutArtifactTypeResponseDefaultTypeInternal() {}
  union {
    PutArtifactTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutArtifactTypeResponseDefaultTypeInternal _PutArtifactTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionsRequest::PutExecutionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr} {}
struct PutExecutionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionsRequestDefaultTypeInternal() {}
  union {
    PutExecutionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionsRequestDefaultTypeInternal _PutExecutionsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionsResponse::PutExecutionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execution_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutExecutionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionsResponseDefaultTypeInternal() {}
  union {
    PutExecutionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionsResponseDefaultTypeInternal _PutExecutionsResponse_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionTypeRequest::PutExecutionTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.execution_type_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.can_add_fields_)*/false
  , /*decltype(_impl_.can_omit_fields_)*/false
  , /*decltype(_impl_.can_delete_fields_)*/false
  , /*decltype(_impl_.all_fields_match_)*/true} {}
struct PutExecutionTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionTypeRequestDefaultTypeInternal() {}
  union {
    PutExecutionTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionTypeRequestDefaultTypeInternal _PutExecutionTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionTypeResponse::PutExecutionTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_id_)*/int64_t{0}} {}
struct PutExecutionTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionTypeResponseDefaultTypeInternal() {}
  union {
    PutExecutionTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionTypeResponseDefaultTypeInternal _PutExecutionTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR PutEventsRequest::PutEventsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct PutEventsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutEventsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutEventsRequestDefaultTypeInternal() {}
  union {
    PutEventsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutEventsRequestDefaultTypeInternal _PutEventsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutEventsResponse::PutEventsResponse(
    ::_pbi::ConstantInitialized) {}
struct PutEventsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutEventsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutEventsResponseDefaultTypeInternal() {}
  union {
    PutEventsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutEventsResponseDefaultTypeInternal _PutEventsResponse_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionRequest_ArtifactAndEvent::PutExecutionRequest_ArtifactAndEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_)*/nullptr
  , /*decltype(_impl_.event_)*/nullptr} {}
struct PutExecutionRequest_ArtifactAndEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionRequest_ArtifactAndEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionRequest_ArtifactAndEventDefaultTypeInternal() {}
  union {
    PutExecutionRequest_ArtifactAndEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionRequest_ArtifactAndEventDefaultTypeInternal _PutExecutionRequest_ArtifactAndEvent_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionRequest_Options::PutExecutionRequest_Options(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reuse_context_if_already_exist_)*/false
  , /*decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_)*/false
  , /*decltype(_impl_.force_update_time_)*/false
  , /*decltype(_impl_.force_reuse_context_)*/false} {}
struct PutExecutionRequest_OptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionRequest_OptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionRequest_OptionsDefaultTypeInternal() {}
  union {
    PutExecutionRequest_Options _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionRequest_OptionsDefaultTypeInternal _PutExecutionRequest_Options_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionRequest::PutExecutionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_event_pairs_)*/{}
  , /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_.execution_)*/nullptr
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct PutExecutionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionRequestDefaultTypeInternal() {}
  union {
    PutExecutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionRequestDefaultTypeInternal _PutExecutionRequest_default_instance_;
PROTOBUF_CONSTEXPR PutExecutionResponse::PutExecutionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_ids_)*/{}
  , /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_.execution_id_)*/int64_t{0}} {}
struct PutExecutionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutExecutionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutExecutionResponseDefaultTypeInternal() {}
  union {
    PutExecutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutExecutionResponseDefaultTypeInternal _PutExecutionResponse_default_instance_;
PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_EventEdge::PutLineageSubgraphRequest_EventEdge(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.event_)*/nullptr
  , /*decltype(_impl_.execution_index_)*/0
  , /*decltype(_impl_.artifact_index_)*/0} {}
struct PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal() {}
  union {
    PutLineageSubgraphRequest_EventEdge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutLineageSubgraphRequest_EventEdgeDefaultTypeInternal _PutLineageSubgraphRequest_EventEdge_default_instance_;
PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_Options::PutLineageSubgraphRequest_Options(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.reuse_context_if_already_exist_)*/false
  , /*decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_)*/false} {}
struct PutLineageSubgraphRequest_OptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutLineageSubgraphRequest_OptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutLineageSubgraphRequest_OptionsDefaultTypeInternal() {}
  union {
    PutLineageSubgraphRequest_Options _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutLineageSubgraphRequest_OptionsDefaultTypeInternal _PutLineageSubgraphRequest_Options_default_instance_;
PROTOBUF_CONSTEXPR PutLineageSubgraphRequest::PutLineageSubgraphRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_.event_edges_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct PutLineageSubgraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutLineageSubgraphRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutLineageSubgraphRequestDefaultTypeInternal() {}
  union {
    PutLineageSubgraphRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutLineageSubgraphRequestDefaultTypeInternal _PutLineageSubgraphRequest_default_instance_;
PROTOBUF_CONSTEXPR PutLineageSubgraphResponse::PutLineageSubgraphResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execution_ids_)*/{}
  , /*decltype(_impl_._execution_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.artifact_ids_)*/{}
  , /*decltype(_impl_._artifact_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutLineageSubgraphResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutLineageSubgraphResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutLineageSubgraphResponseDefaultTypeInternal() {}
  union {
    PutLineageSubgraphResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutLineageSubgraphResponseDefaultTypeInternal _PutLineageSubgraphResponse_default_instance_;
PROTOBUF_CONSTEXPR PutTypesRequest::PutTypesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_.execution_types_)*/{}
  , /*decltype(_impl_.context_types_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.can_add_fields_)*/false
  , /*decltype(_impl_.can_omit_fields_)*/false
  , /*decltype(_impl_.can_delete_fields_)*/false
  , /*decltype(_impl_.all_fields_match_)*/true} {}
struct PutTypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutTypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutTypesRequestDefaultTypeInternal() {}
  union {
    PutTypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutTypesRequestDefaultTypeInternal _PutTypesRequest_default_instance_;
PROTOBUF_CONSTEXPR PutTypesResponse::PutTypesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_type_ids_)*/{}
  , /*decltype(_impl_.execution_type_ids_)*/{}
  , /*decltype(_impl_.context_type_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutTypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutTypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutTypesResponseDefaultTypeInternal() {}
  union {
    PutTypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutTypesResponseDefaultTypeInternal _PutTypesResponse_default_instance_;
PROTOBUF_CONSTEXPR PutContextTypeRequest::PutContextTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_type_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.can_add_fields_)*/false
  , /*decltype(_impl_.can_omit_fields_)*/false
  , /*decltype(_impl_.can_delete_fields_)*/false
  , /*decltype(_impl_.all_fields_match_)*/true} {}
struct PutContextTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutContextTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutContextTypeRequestDefaultTypeInternal() {}
  union {
    PutContextTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutContextTypeRequestDefaultTypeInternal _PutContextTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR PutContextTypeResponse::PutContextTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_id_)*/int64_t{0}} {}
struct PutContextTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutContextTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutContextTypeResponseDefaultTypeInternal() {}
  union {
    PutContextTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutContextTypeResponseDefaultTypeInternal _PutContextTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR PutContextsRequest::PutContextsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr} {}
struct PutContextsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutContextsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutContextsRequestDefaultTypeInternal() {}
  union {
    PutContextsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutContextsRequestDefaultTypeInternal _PutContextsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutContextsResponse::PutContextsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PutContextsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutContextsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutContextsResponseDefaultTypeInternal() {}
  union {
    PutContextsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutContextsResponseDefaultTypeInternal _PutContextsResponse_default_instance_;
PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsRequest::PutAttributionsAndAssociationsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.attributions_)*/{}
  , /*decltype(_impl_.associations_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct PutAttributionsAndAssociationsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutAttributionsAndAssociationsRequestDefaultTypeInternal() {}
  union {
    PutAttributionsAndAssociationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutAttributionsAndAssociationsRequestDefaultTypeInternal _PutAttributionsAndAssociationsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsResponse::PutAttributionsAndAssociationsResponse(
    ::_pbi::ConstantInitialized) {}
struct PutAttributionsAndAssociationsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutAttributionsAndAssociationsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutAttributionsAndAssociationsResponseDefaultTypeInternal() {}
  union {
    PutAttributionsAndAssociationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutAttributionsAndAssociationsResponseDefaultTypeInternal _PutAttributionsAndAssociationsResponse_default_instance_;
PROTOBUF_CONSTEXPR PutParentContextsRequest::PutParentContextsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.parent_contexts_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct PutParentContextsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutParentContextsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutParentContextsRequestDefaultTypeInternal() {}
  union {
    PutParentContextsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutParentContextsRequestDefaultTypeInternal _PutParentContextsRequest_default_instance_;
PROTOBUF_CONSTEXPR PutParentContextsResponse::PutParentContextsResponse(
    ::_pbi::ConstantInitialized) {}
struct PutParentContextsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PutParentContextsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PutParentContextsResponseDefaultTypeInternal() {}
  union {
    PutParentContextsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PutParentContextsResponseDefaultTypeInternal _PutParentContextsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByTypeRequest::GetArtifactsByTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactsByTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByTypeRequestDefaultTypeInternal() {}
  union {
    GetArtifactsByTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByTypeRequestDefaultTypeInternal _GetArtifactsByTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByTypeResponse::GetArtifactsByTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetArtifactsByTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByTypeResponseDefaultTypeInternal() {}
  union {
    GetArtifactsByTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByTypeResponseDefaultTypeInternal _GetArtifactsByTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameRequest::GetArtifactByTypeAndNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.artifact_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactByTypeAndNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactByTypeAndNameRequestDefaultTypeInternal() {}
  union {
    GetArtifactByTypeAndNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactByTypeAndNameRequestDefaultTypeInternal _GetArtifactByTypeAndNameRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameResponse::GetArtifactByTypeAndNameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_)*/nullptr} {}
struct GetArtifactByTypeAndNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactByTypeAndNameResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactByTypeAndNameResponseDefaultTypeInternal() {}
  union {
    GetArtifactByTypeAndNameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactByTypeAndNameResponseDefaultTypeInternal _GetArtifactByTypeAndNameResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByIDRequest::GetArtifactsByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.populate_artifact_types_)*/false} {}
struct GetArtifactsByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByIDRequestDefaultTypeInternal() {}
  union {
    GetArtifactsByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByIDRequestDefaultTypeInternal _GetArtifactsByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByIDResponse::GetArtifactsByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactsByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByIDResponseDefaultTypeInternal() {}
  union {
    GetArtifactsByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByIDResponseDefaultTypeInternal _GetArtifactsByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsRequest::GetArtifactsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsRequestDefaultTypeInternal() {}
  union {
    GetArtifactsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsRequestDefaultTypeInternal _GetArtifactsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsResponse::GetArtifactsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetArtifactsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsResponseDefaultTypeInternal() {}
  union {
    GetArtifactsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsResponseDefaultTypeInternal _GetArtifactsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByURIRequest::GetArtifactsByURIRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.uris_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactsByURIRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByURIRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByURIRequestDefaultTypeInternal() {}
  union {
    GetArtifactsByURIRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByURIRequestDefaultTypeInternal _GetArtifactsByURIRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByURIResponse::GetArtifactsByURIResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactsByURIResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByURIResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByURIResponseDefaultTypeInternal() {}
  union {
    GetArtifactsByURIResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByURIResponseDefaultTypeInternal _GetArtifactsByURIResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsRequest::GetExecutionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsRequestDefaultTypeInternal() {}
  union {
    GetExecutionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsRequestDefaultTypeInternal _GetExecutionsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsResponse::GetExecutionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetExecutionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsResponseDefaultTypeInternal() {}
  union {
    GetExecutionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsResponseDefaultTypeInternal _GetExecutionsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypeRequest::GetArtifactTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypeRequestDefaultTypeInternal() {}
  union {
    GetArtifactTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypeRequestDefaultTypeInternal _GetArtifactTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypeResponse::GetArtifactTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_type_)*/nullptr} {}
struct GetArtifactTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypeResponseDefaultTypeInternal() {}
  union {
    GetArtifactTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypeResponseDefaultTypeInternal _GetArtifactTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesRequest::GetArtifactTypesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactTypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesRequestDefaultTypeInternal() {}
  union {
    GetArtifactTypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesRequestDefaultTypeInternal _GetArtifactTypesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesResponse::GetArtifactTypesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactTypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesResponseDefaultTypeInternal() {}
  union {
    GetArtifactTypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesResponseDefaultTypeInternal _GetArtifactTypesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesRequest::GetExecutionTypesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionTypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesRequestDefaultTypeInternal() {}
  union {
    GetExecutionTypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesRequestDefaultTypeInternal _GetExecutionTypesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesResponse::GetExecutionTypesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execution_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetExecutionTypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesResponseDefaultTypeInternal() {}
  union {
    GetExecutionTypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesResponseDefaultTypeInternal _GetExecutionTypesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesRequest::GetContextTypesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextTypesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesRequestDefaultTypeInternal() {}
  union {
    GetContextTypesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesRequestDefaultTypeInternal _GetContextTypesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesResponse::GetContextTypesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextTypesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesResponseDefaultTypeInternal() {}
  union {
    GetContextTypesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesResponseDefaultTypeInternal _GetContextTypesResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsRequest::GetArtifactsByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactsByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetArtifactsByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByExternalIdsRequestDefaultTypeInternal _GetArtifactsByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsResponse::GetArtifactsByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactsByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetArtifactsByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByExternalIdsResponseDefaultTypeInternal _GetArtifactsByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsRequest::GetExecutionsByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionsByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetExecutionsByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByExternalIdsRequestDefaultTypeInternal _GetExecutionsByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsResponse::GetExecutionsByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetExecutionsByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetExecutionsByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByExternalIdsResponseDefaultTypeInternal _GetExecutionsByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByExternalIdsRequest::GetContextsByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextsByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetContextsByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByExternalIdsRequestDefaultTypeInternal _GetContextsByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByExternalIdsResponse::GetContextsByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextsByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetContextsByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByExternalIdsResponseDefaultTypeInternal _GetContextsByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsRequest::GetArtifactTypesByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactTypesByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetArtifactTypesByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesByExternalIdsRequestDefaultTypeInternal _GetArtifactTypesByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsResponse::GetArtifactTypesByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactTypesByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetArtifactTypesByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesByExternalIdsResponseDefaultTypeInternal _GetArtifactTypesByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsRequest::GetExecutionTypesByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionTypesByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetExecutionTypesByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesByExternalIdsRequestDefaultTypeInternal _GetExecutionTypesByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsResponse::GetExecutionTypesByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execution_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetExecutionTypesByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetExecutionTypesByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesByExternalIdsResponseDefaultTypeInternal _GetExecutionTypesByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsRequest::GetContextTypesByExternalIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextTypesByExternalIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesByExternalIdsRequestDefaultTypeInternal() {}
  union {
    GetContextTypesByExternalIdsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesByExternalIdsRequestDefaultTypeInternal _GetContextTypesByExternalIdsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsResponse::GetContextTypesByExternalIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextTypesByExternalIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesByExternalIdsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesByExternalIdsResponseDefaultTypeInternal() {}
  union {
    GetContextTypesByExternalIdsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesByExternalIdsResponseDefaultTypeInternal _GetContextTypesByExternalIdsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByTypeRequest::GetExecutionsByTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionsByTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByTypeRequestDefaultTypeInternal() {}
  union {
    GetExecutionsByTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByTypeRequestDefaultTypeInternal _GetExecutionsByTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByTypeResponse::GetExecutionsByTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetExecutionsByTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByTypeResponseDefaultTypeInternal() {}
  union {
    GetExecutionsByTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByTypeResponseDefaultTypeInternal _GetExecutionsByTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameRequest::GetExecutionByTypeAndNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.execution_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionByTypeAndNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionByTypeAndNameRequestDefaultTypeInternal() {}
  union {
    GetExecutionByTypeAndNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionByTypeAndNameRequestDefaultTypeInternal _GetExecutionByTypeAndNameRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameResponse::GetExecutionByTypeAndNameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.execution_)*/nullptr} {}
struct GetExecutionByTypeAndNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionByTypeAndNameResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionByTypeAndNameResponseDefaultTypeInternal() {}
  union {
    GetExecutionByTypeAndNameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionByTypeAndNameResponseDefaultTypeInternal _GetExecutionByTypeAndNameResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByIDRequest::GetExecutionsByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.execution_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionsByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByIDRequestDefaultTypeInternal() {}
  union {
    GetExecutionsByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByIDRequestDefaultTypeInternal _GetExecutionsByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByIDResponse::GetExecutionsByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetExecutionsByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByIDResponseDefaultTypeInternal() {}
  union {
    GetExecutionsByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByIDResponseDefaultTypeInternal _GetExecutionsByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypeRequest::GetExecutionTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypeRequestDefaultTypeInternal() {}
  union {
    GetExecutionTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypeRequestDefaultTypeInternal _GetExecutionTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypeResponse::GetExecutionTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.execution_type_)*/nullptr} {}
struct GetExecutionTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypeResponseDefaultTypeInternal() {}
  union {
    GetExecutionTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypeResponseDefaultTypeInternal _GetExecutionTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetEventsByExecutionIDsRequest::GetEventsByExecutionIDsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.execution_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetEventsByExecutionIDsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEventsByExecutionIDsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEventsByExecutionIDsRequestDefaultTypeInternal() {}
  union {
    GetEventsByExecutionIDsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEventsByExecutionIDsRequestDefaultTypeInternal _GetEventsByExecutionIDsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetEventsByExecutionIDsResponse::GetEventsByExecutionIDsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEventsByExecutionIDsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEventsByExecutionIDsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEventsByExecutionIDsResponseDefaultTypeInternal() {}
  union {
    GetEventsByExecutionIDsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEventsByExecutionIDsResponseDefaultTypeInternal _GetEventsByExecutionIDsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetEventsByArtifactIDsRequest::GetEventsByArtifactIDsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifact_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetEventsByArtifactIDsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEventsByArtifactIDsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEventsByArtifactIDsRequestDefaultTypeInternal() {}
  union {
    GetEventsByArtifactIDsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEventsByArtifactIDsRequestDefaultTypeInternal _GetEventsByArtifactIDsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetEventsByArtifactIDsResponse::GetEventsByArtifactIDsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.events_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEventsByArtifactIDsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEventsByArtifactIDsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEventsByArtifactIDsResponseDefaultTypeInternal() {}
  union {
    GetEventsByArtifactIDsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEventsByArtifactIDsResponseDefaultTypeInternal _GetEventsByArtifactIDsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesByIDRequest::GetArtifactTypesByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetArtifactTypesByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesByIDRequestDefaultTypeInternal() {}
  union {
    GetArtifactTypesByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesByIDRequestDefaultTypeInternal _GetArtifactTypesByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactTypesByIDResponse::GetArtifactTypesByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetArtifactTypesByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactTypesByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactTypesByIDResponseDefaultTypeInternal() {}
  union {
    GetArtifactTypesByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactTypesByIDResponseDefaultTypeInternal _GetArtifactTypesByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesByIDRequest::GetExecutionTypesByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionTypesByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesByIDRequestDefaultTypeInternal() {}
  union {
    GetExecutionTypesByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesByIDRequestDefaultTypeInternal _GetExecutionTypesByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionTypesByIDResponse::GetExecutionTypesByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execution_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetExecutionTypesByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionTypesByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionTypesByIDResponseDefaultTypeInternal() {}
  union {
    GetExecutionTypesByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionTypesByIDResponseDefaultTypeInternal _GetExecutionTypesByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypeRequest::GetContextTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypeRequestDefaultTypeInternal() {}
  union {
    GetContextTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypeRequestDefaultTypeInternal _GetContextTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypeResponse::GetContextTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_type_)*/nullptr} {}
struct GetContextTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypeResponseDefaultTypeInternal() {}
  union {
    GetContextTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypeResponseDefaultTypeInternal _GetContextTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesByIDRequest::GetContextTypesByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextTypesByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesByIDRequestDefaultTypeInternal() {}
  union {
    GetContextTypesByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesByIDRequestDefaultTypeInternal _GetContextTypesByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextTypesByIDResponse::GetContextTypesByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.context_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextTypesByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextTypesByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextTypesByIDResponseDefaultTypeInternal() {}
  union {
    GetContextTypesByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextTypesByIDResponseDefaultTypeInternal _GetContextTypesByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsRequest::GetContextsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsRequestDefaultTypeInternal() {}
  union {
    GetContextsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsRequestDefaultTypeInternal _GetContextsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsResponse::GetContextsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetContextsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsResponseDefaultTypeInternal() {}
  union {
    GetContextsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsResponseDefaultTypeInternal _GetContextsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByTypeRequest::GetContextsByTypeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextsByTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByTypeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByTypeRequestDefaultTypeInternal() {}
  union {
    GetContextsByTypeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByTypeRequestDefaultTypeInternal _GetContextsByTypeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByTypeResponse::GetContextsByTypeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetContextsByTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByTypeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByTypeResponseDefaultTypeInternal() {}
  union {
    GetContextsByTypeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByTypeResponseDefaultTypeInternal _GetContextsByTypeResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextByTypeAndNameRequest::GetContextByTypeAndNameRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.type_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.context_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextByTypeAndNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextByTypeAndNameRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextByTypeAndNameRequestDefaultTypeInternal() {}
  union {
    GetContextByTypeAndNameRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextByTypeAndNameRequestDefaultTypeInternal _GetContextByTypeAndNameRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextByTypeAndNameResponse::GetContextByTypeAndNameResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_)*/nullptr} {}
struct GetContextByTypeAndNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextByTypeAndNameResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextByTypeAndNameResponseDefaultTypeInternal() {}
  union {
    GetContextByTypeAndNameResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextByTypeAndNameResponseDefaultTypeInternal _GetContextByTypeAndNameResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByIDRequest::GetContextsByIDRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetContextsByIDRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByIDRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByIDRequestDefaultTypeInternal() {}
  union {
    GetContextsByIDRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByIDRequestDefaultTypeInternal _GetContextsByIDRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByIDResponse::GetContextsByIDResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextsByIDResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByIDResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByIDResponseDefaultTypeInternal() {}
  union {
    GetContextsByIDResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByIDResponseDefaultTypeInternal _GetContextsByIDResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByArtifactRequest::GetContextsByArtifactRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.artifact_id_)*/int64_t{0}} {}
struct GetContextsByArtifactRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByArtifactRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByArtifactRequestDefaultTypeInternal() {}
  union {
    GetContextsByArtifactRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByArtifactRequestDefaultTypeInternal _GetContextsByArtifactRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByArtifactResponse::GetContextsByArtifactResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextsByArtifactResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByArtifactResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByArtifactResponseDefaultTypeInternal() {}
  union {
    GetContextsByArtifactResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByArtifactResponseDefaultTypeInternal _GetContextsByArtifactResponse_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByExecutionRequest::GetContextsByExecutionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.execution_id_)*/int64_t{0}} {}
struct GetContextsByExecutionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByExecutionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByExecutionRequestDefaultTypeInternal() {}
  union {
    GetContextsByExecutionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByExecutionRequestDefaultTypeInternal _GetContextsByExecutionRequest_default_instance_;
PROTOBUF_CONSTEXPR GetContextsByExecutionResponse::GetContextsByExecutionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetContextsByExecutionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetContextsByExecutionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetContextsByExecutionResponseDefaultTypeInternal() {}
  union {
    GetContextsByExecutionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetContextsByExecutionResponseDefaultTypeInternal _GetContextsByExecutionResponse_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextRequest::GetParentContextsByContextRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.context_id_)*/int64_t{0}} {}
struct GetParentContextsByContextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextRequestDefaultTypeInternal() {}
  union {
    GetParentContextsByContextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextRequestDefaultTypeInternal _GetParentContextsByContextRequest_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextResponse::GetParentContextsByContextResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetParentContextsByContextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextResponseDefaultTypeInternal() {}
  union {
    GetParentContextsByContextResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextResponseDefaultTypeInternal _GetParentContextsByContextResponse_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextRequest::GetChildrenContextsByContextRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.context_id_)*/int64_t{0}} {}
struct GetChildrenContextsByContextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextRequestDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextRequestDefaultTypeInternal _GetChildrenContextsByContextRequest_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextResponse::GetChildrenContextsByContextResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetChildrenContextsByContextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextResponseDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextResponseDefaultTypeInternal _GetChildrenContextsByContextResponse_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextsRequest::GetParentContextsByContextsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetParentContextsByContextsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextsRequestDefaultTypeInternal() {}
  union {
    GetParentContextsByContextsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextsRequestDefaultTypeInternal _GetParentContextsByContextsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ParentContextsPerChild::GetParentContextsByContextsResponse_ParentContextsPerChild(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal() {}
  union {
    GetParentContextsByContextsResponse_ParentContextsPerChild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextsResponse_ParentContextsPerChildDefaultTypeInternal _GetParentContextsByContextsResponse_ParentContextsPerChild_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetParentContextsByContextsResponse_ContextsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal _GetParentContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetParentContextsByContextsResponse::GetParentContextsByContextsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetParentContextsByContextsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetParentContextsByContextsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetParentContextsByContextsResponseDefaultTypeInternal() {}
  union {
    GetParentContextsByContextsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetParentContextsByContextsResponseDefaultTypeInternal _GetParentContextsByContextsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextsRequest::GetChildrenContextsByContextsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.context_ids_)*/{}
  , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetChildrenContextsByContextsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextsRequestDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextsRequestDefaultTypeInternal _GetChildrenContextsByContextsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.children_contexts_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextsResponse_ChildrenContextsPerParent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextsResponse_ChildrenContextsPerParentDefaultTypeInternal _GetChildrenContextsByContextsResponse_ChildrenContextsPerParent_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUseDefaultTypeInternal _GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponse::GetChildrenContextsByContextsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.contexts_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetChildrenContextsByContextsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChildrenContextsByContextsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChildrenContextsByContextsResponseDefaultTypeInternal() {}
  union {
    GetChildrenContextsByContextsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChildrenContextsByContextsResponseDefaultTypeInternal _GetChildrenContextsByContextsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByContextRequest::GetArtifactsByContextRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.context_id_)*/int64_t{0}} {}
struct GetArtifactsByContextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByContextRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByContextRequestDefaultTypeInternal() {}
  union {
    GetArtifactsByContextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByContextRequestDefaultTypeInternal _GetArtifactsByContextRequest_default_instance_;
PROTOBUF_CONSTEXPR GetArtifactsByContextResponse::GetArtifactsByContextResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.artifacts_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct GetArtifactsByContextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetArtifactsByContextResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetArtifactsByContextResponseDefaultTypeInternal() {}
  union {
    GetArtifactsByContextResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetArtifactsByContextResponseDefaultTypeInternal _GetArtifactsByContextResponse_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByContextRequest::GetExecutionsByContextRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.context_id_)*/int64_t{0}} {}
struct GetExecutionsByContextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByContextRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByContextRequestDefaultTypeInternal() {}
  union {
    GetExecutionsByContextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByContextRequestDefaultTypeInternal _GetExecutionsByContextRequest_default_instance_;
PROTOBUF_CONSTEXPR GetExecutionsByContextResponse::GetExecutionsByContextResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.executions_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetExecutionsByContextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetExecutionsByContextResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetExecutionsByContextResponseDefaultTypeInternal() {}
  union {
    GetExecutionsByContextResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetExecutionsByContextResponseDefaultTypeInternal _GetExecutionsByContextResponse_default_instance_;
PROTOBUF_CONSTEXPR GetLineageGraphRequest::GetLineageGraphRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr} {}
struct GetLineageGraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLineageGraphRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLineageGraphRequestDefaultTypeInternal() {}
  union {
    GetLineageGraphRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLineageGraphRequestDefaultTypeInternal _GetLineageGraphRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLineageGraphResponse::GetLineageGraphResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subgraph_)*/nullptr} {}
struct GetLineageGraphResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLineageGraphResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLineageGraphResponseDefaultTypeInternal() {}
  union {
    GetLineageGraphResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLineageGraphResponseDefaultTypeInternal _GetLineageGraphResponse_default_instance_;
PROTOBUF_CONSTEXPR GetLineageSubgraphRequest::GetLineageSubgraphRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.lineage_subgraph_query_options_)*/nullptr
  , /*decltype(_impl_.transaction_options_)*/nullptr
  , /*decltype(_impl_.read_mask_)*/nullptr} {}
struct GetLineageSubgraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLineageSubgraphRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLineageSubgraphRequestDefaultTypeInternal() {}
  union {
    GetLineageSubgraphRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLineageSubgraphRequestDefaultTypeInternal _GetLineageSubgraphRequest_default_instance_;
PROTOBUF_CONSTEXPR GetLineageSubgraphResponse::GetLineageSubgraphResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.lineage_subgraph_)*/nullptr} {}
struct GetLineageSubgraphResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetLineageSubgraphResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetLineageSubgraphResponseDefaultTypeInternal() {}
  union {
    GetLineageSubgraphResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetLineageSubgraphResponseDefaultTypeInternal _GetLineageSubgraphResponse_default_instance_;
}  // namespace ml_metadata
static ::_pb::Metadata file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[118];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto = nullptr;

const uint32_t TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactAndType, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactAndType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactAndType, _impl_.artifact_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactAndType, _impl_.type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructMap, _impl_.properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStructList, _impl_.elements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStruct, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::ArtifactStruct, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest_Options, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest_Options, _impl_.abort_if_latest_updated_time_changed_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _impl_.transaction_options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsRequest, _impl_.update_mask_),
  ~0u,
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactsResponse, _impl_.artifact_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.artifact_type_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.can_add_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.can_omit_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.can_delete_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.all_fields_match_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeRequest, _impl_.transaction_options_),
  0,
  2,
  3,
  4,
  5,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutArtifactTypeResponse, _impl_.type_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsRequest, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsRequest, _impl_.transaction_options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsRequest, _impl_.update_mask_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionsResponse, _impl_.execution_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.execution_type_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.can_add_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.can_omit_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.can_delete_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.all_fields_match_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeRequest, _impl_.transaction_options_),
  0,
  2,
  3,
  4,
  5,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionTypeResponse, _impl_.type_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutEventsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutEventsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutEventsRequest, _impl_.events_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutEventsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutEventsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_ArtifactAndEvent, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_ArtifactAndEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_ArtifactAndEvent, _impl_.artifact_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_ArtifactAndEvent, _impl_.event_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _impl_.reuse_context_if_already_exist_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _impl_.reuse_artifact_if_already_exist_by_external_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _impl_.force_update_time_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest_Options, _impl_.force_reuse_context_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_.execution_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_.artifact_event_pairs_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionRequest, _impl_.transaction_options_),
  0,
  ~0u,
  ~0u,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionResponse, _impl_.execution_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionResponse, _impl_.artifact_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutExecutionResponse, _impl_.context_ids_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_EventEdge, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_EventEdge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_EventEdge, _impl_.execution_index_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_EventEdge, _impl_.artifact_index_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_EventEdge, _impl_.event_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_Options, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_Options, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_Options, _impl_.reuse_context_if_already_exist_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest_Options, _impl_.reuse_artifact_if_already_exist_by_external_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.event_edges_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphRequest, _impl_.transaction_options_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphResponse, _impl_.execution_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphResponse, _impl_.artifact_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutLineageSubgraphResponse, _impl_.context_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.execution_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.context_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.can_add_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.can_omit_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.can_delete_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.all_fields_match_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesRequest, _impl_.transaction_options_),
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  3,
  4,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesResponse, _impl_.artifact_type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesResponse, _impl_.execution_type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutTypesResponse, _impl_.context_type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.context_type_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.can_add_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.can_omit_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.can_delete_fields_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.all_fields_match_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeRequest, _impl_.transaction_options_),
  0,
  2,
  3,
  4,
  5,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextTypeResponse, _impl_.type_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsRequest, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsRequest, _impl_.transaction_options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsRequest, _impl_.update_mask_),
  ~0u,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutContextsResponse, _impl_.context_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsRequest, _impl_.attributions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsRequest, _impl_.associations_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsRequest, _impl_.transaction_options_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutAttributionsAndAssociationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutParentContextsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutParentContextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutParentContextsRequest, _impl_.parent_contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutParentContextsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::PutParentContextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeRequest, _impl_.transaction_options_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByTypeResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _impl_.artifact_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameRequest, _impl_.transaction_options_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactByTypeAndNameResponse, _impl_.artifact_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDRequest, _impl_.artifact_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDRequest, _impl_.populate_artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDRequest, _impl_.transaction_options_),
  ~0u,
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByIDResponse, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsRequest, _impl_.transaction_options_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIRequest, _impl_.uris_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByURIResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsRequest, _impl_.transaction_options_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsResponse, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeRequest, _impl_.transaction_options_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypeResponse, _impl_.artifact_type_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesRequest, _impl_.transaction_options_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesResponse, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesRequest, _impl_.transaction_options_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesResponse, _impl_.execution_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesRequest, _impl_.transaction_options_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesResponse, _impl_.context_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByExternalIdsResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByExternalIdsResponse, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExternalIdsResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByExternalIdsResponse, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByExternalIdsResponse, _impl_.execution_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsRequest, _impl_.external_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByExternalIdsResponse, _impl_.context_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeRequest, _impl_.transaction_options_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeResponse, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByTypeResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _impl_.execution_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameRequest, _impl_.transaction_options_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionByTypeAndNameResponse, _impl_.execution_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDRequest, _impl_.execution_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByIDResponse, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeRequest, _impl_.transaction_options_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypeResponse, _impl_.execution_type_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsRequest, _impl_.execution_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByExecutionIDsResponse, _impl_.events_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsRequest, _impl_.artifact_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetEventsByArtifactIDsResponse, _impl_.events_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDRequest, _impl_.type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactTypesByIDResponse, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDRequest, _impl_.type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionTypesByIDResponse, _impl_.execution_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeRequest, _impl_.transaction_options_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypeResponse, _impl_.context_type_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDRequest, _impl_.type_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextTypesByIDResponse, _impl_.context_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsRequest, _impl_.transaction_options_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeRequest, _impl_.transaction_options_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByTypeResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _impl_.type_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _impl_.type_version_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _impl_.context_name_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameRequest, _impl_.transaction_options_),
  0,
  2,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextByTypeAndNameResponse, _impl_.context_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDRequest, _impl_.context_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByIDResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactRequest, _impl_.artifact_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactRequest, _impl_.transaction_options_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByArtifactResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionRequest, _impl_.execution_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionRequest, _impl_.transaction_options_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetContextsByExecutionResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextRequest, _impl_.context_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextRequest, _impl_.transaction_options_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextRequest, _impl_.context_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextRequest, _impl_.transaction_options_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsRequest, _impl_.context_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild, _impl_.parent_contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetParentContextsByContextsResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsRequest, _impl_.context_ids_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsRequest, _impl_.transaction_options_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent, _impl_.children_contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetChildrenContextsByContextsResponse, _impl_.contexts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextRequest, _impl_.context_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextRequest, _impl_.transaction_options_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextResponse, _impl_.artifacts_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetArtifactsByContextResponse, _impl_.next_page_token_),
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextRequest, _impl_.context_id_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextRequest, _impl_.transaction_options_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextResponse, _impl_.executions_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextResponse, _impl_.next_page_token_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetExecutionsByContextResponse, _impl_.transaction_options_),
  ~0u,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphRequest, _impl_.options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphRequest, _impl_.transaction_options_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageGraphResponse, _impl_.subgraph_),
  0,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphRequest, _impl_.lineage_subgraph_query_options_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphRequest, _impl_.read_mask_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphRequest, _impl_.transaction_options_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::GetLineageSubgraphResponse, _impl_.lineage_subgraph_),
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::ml_metadata::ArtifactAndType)},
  { 10, 18, -1, sizeof(::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse)},
  { 20, -1, -1, sizeof(::ml_metadata::ArtifactStructMap)},
  { 27, -1, -1, sizeof(::ml_metadata::ArtifactStructList)},
  { 34, -1, -1, sizeof(::ml_metadata::ArtifactStruct)},
  { 44, 51, -1, sizeof(::ml_metadata::PutArtifactsRequest_Options)},
  { 52, 62, -1, sizeof(::ml_metadata::PutArtifactsRequest)},
  { 66, -1, -1, sizeof(::ml_metadata::PutArtifactsResponse)},
  { 73, 85, -1, sizeof(::ml_metadata::PutArtifactTypeRequest)},
  { 91, 98, -1, sizeof(::ml_metadata::PutArtifactTypeResponse)},
  { 99, 108, -1, sizeof(::ml_metadata::PutExecutionsRequest)},
  { 111, -1, -1, sizeof(::ml_metadata::PutExecutionsResponse)},
  { 118, 130, -1, sizeof(::ml_metadata::PutExecutionTypeRequest)},
  { 136, 143, -1, sizeof(::ml_metadata::PutExecutionTypeResponse)},
  { 144, 152, -1, sizeof(::ml_metadata::PutEventsRequest)},
  { 154, -1, -1, sizeof(::ml_metadata::PutEventsResponse)},
  { 160, 168, -1, sizeof(::ml_metadata::PutExecutionRequest_ArtifactAndEvent)},
  { 170, 180, -1, sizeof(::ml_metadata::PutExecutionRequest_Options)},
  { 184, 195, -1, sizeof(::ml_metadata::PutExecutionRequest)},
  { 200, 209, -1, sizeof(::ml_metadata::PutExecutionResponse)},
  { 212, 221, -1, sizeof(::ml_metadata::PutLineageSubgraphRequest_EventEdge)},
  { 224, 232, -1, sizeof(::ml_metadata::PutLineageSubgraphRequest_Options)},
  { 234, 246, -1, sizeof(::ml_metadata::PutLineageSubgraphRequest)},
  { 252, -1, -1, sizeof(::ml_metadata::PutLineageSubgraphResponse)},
  { 261, 275, -1, sizeof(::ml_metadata::PutTypesRequest)},
  { 283, -1, -1, sizeof(::ml_metadata::PutTypesResponse)},
  { 292, 304, -1, sizeof(::ml_metadata::PutContextTypeRequest)},
  { 310, 317, -1, sizeof(::ml_metadata::PutContextTypeResponse)},
  { 318, 327, -1, sizeof(::ml_metadata::PutContextsRequest)},
  { 330, -1, -1, sizeof(::ml_metadata::PutContextsResponse)},
  { 337, 346, -1, sizeof(::ml_metadata::PutAttributionsAndAssociationsRequest)},
  { 349, -1, -1, sizeof(::ml_metadata::PutAttributionsAndAssociationsResponse)},
  { 355, 363, -1, sizeof(::ml_metadata::PutParentContextsRequest)},
  { 365, -1, -1, sizeof(::ml_metadata::PutParentContextsResponse)},
  { 371, 381, -1, sizeof(::ml_metadata::GetArtifactsByTypeRequest)},
  { 385, 393, -1, sizeof(::ml_metadata::GetArtifactsByTypeResponse)},
  { 395, 405, -1, sizeof(::ml_metadata::GetArtifactByTypeAndNameRequest)},
  { 409, 416, -1, sizeof(::ml_metadata::GetArtifactByTypeAndNameResponse)},
  { 417, 426, -1, sizeof(::ml_metadata::GetArtifactsByIDRequest)},
  { 429, -1, -1, sizeof(::ml_metadata::GetArtifactsByIDResponse)},
  { 437, 445, -1, sizeof(::ml_metadata::GetArtifactsRequest)},
  { 447, 455, -1, sizeof(::ml_metadata::GetArtifactsResponse)},
  { 457, 465, -1, sizeof(::ml_metadata::GetArtifactsByURIRequest)},
  { 467, -1, -1, sizeof(::ml_metadata::GetArtifactsByURIResponse)},
  { 474, 482, -1, sizeof(::ml_metadata::GetExecutionsRequest)},
  { 484, 492, -1, sizeof(::ml_metadata::GetExecutionsResponse)},
  { 494, 503, -1, sizeof(::ml_metadata::GetArtifactTypeRequest)},
  { 506, 513, -1, sizeof(::ml_metadata::GetArtifactTypeResponse)},
  { 514, 521, -1, sizeof(::ml_metadata::GetArtifactTypesRequest)},
  { 522, -1, -1, sizeof(::ml_metadata::GetArtifactTypesResponse)},
  { 529, 536, -1, sizeof(::ml_metadata::GetExecutionTypesRequest)},
  { 537, -1, -1, sizeof(::ml_metadata::GetExecutionTypesResponse)},
  { 544, 551, -1, sizeof(::ml_metadata::GetContextTypesRequest)},
  { 552, -1, -1, sizeof(::ml_metadata::GetContextTypesResponse)},
  { 559, 567, -1, sizeof(::ml_metadata::GetArtifactsByExternalIdsRequest)},
  { 569, -1, -1, sizeof(::ml_metadata::GetArtifactsByExternalIdsResponse)},
  { 576, 584, -1, sizeof(::ml_metadata::GetExecutionsByExternalIdsRequest)},
  { 586, -1, -1, sizeof(::ml_metadata::GetExecutionsByExternalIdsResponse)},
  { 593, 601, -1, sizeof(::ml_metadata::GetContextsByExternalIdsRequest)},
  { 603, -1, -1, sizeof(::ml_metadata::GetContextsByExternalIdsResponse)},
  { 610, 618, -1, sizeof(::ml_metadata::GetArtifactTypesByExternalIdsRequest)},
  { 620, -1, -1, sizeof(::ml_metadata::GetArtifactTypesByExternalIdsResponse)},
  { 627, 635, -1, sizeof(::ml_metadata::GetExecutionTypesByExternalIdsRequest)},
  { 637, -1, -1, sizeof(::ml_metadata::GetExecutionTypesByExternalIdsResponse)},
  { 644, 652, -1, sizeof(::ml_metadata::GetContextTypesByExternalIdsRequest)},
  { 654, -1, -1, sizeof(::ml_metadata::GetContextTypesByExternalIdsResponse)},
  { 661, 671, -1, sizeof(::ml_metadata::GetExecutionsByTypeRequest)},
  { 675, 683, -1, sizeof(::ml_metadata::GetExecutionsByTypeResponse)},
  { 685, 695, -1, sizeof(::ml_metadata::GetExecutionByTypeAndNameRequest)},
  { 699, 706, -1, sizeof(::ml_metadata::GetExecutionByTypeAndNameResponse)},
  { 707, 715, -1, sizeof(::ml_metadata::GetExecutionsByIDRequest)},
  { 717, -1, -1, sizeof(::ml_metadata::GetExecutionsByIDResponse)},
  { 724, 733, -1, sizeof(::ml_metadata::GetExecutionTypeRequest)},
  { 736, 743, -1, sizeof(::ml_metadata::GetExecutionTypeResponse)},
  { 744, 752, -1, sizeof(::ml_metadata::GetEventsByExecutionIDsRequest)},
  { 754, -1, -1, sizeof(::ml_metadata::GetEventsByExecutionIDsResponse)},
  { 761, 769, -1, sizeof(::ml_metadata::GetEventsByArtifactIDsRequest)},
  { 771, -1, -1, sizeof(::ml_metadata::GetEventsByArtifactIDsResponse)},
  { 778, 786, -1, sizeof(::ml_metadata::GetArtifactTypesByIDRequest)},
  { 788, -1, -1, sizeof(::ml_metadata::GetArtifactTypesByIDResponse)},
  { 795, 803, -1, sizeof(::ml_metadata::GetExecutionTypesByIDRequest)},
  { 805, -1, -1, sizeof(::ml_metadata::GetExecutionTypesByIDResponse)},
  { 812, 821, -1, sizeof(::ml_metadata::GetContextTypeRequest)},
  { 824, 831, -1, sizeof(::ml_metadata::GetContextTypeResponse)},
  { 832, 840, -1, sizeof(::ml_metadata::GetContextTypesByIDRequest)},
  { 842, -1, -1, sizeof(::ml_metadata::GetContextTypesByIDResponse)},
  { 849, 857, -1, sizeof(::ml_metadata::GetContextsRequest)},
  { 859, 867, -1, sizeof(::ml_metadata::GetContextsResponse)},
  { 869, 879, -1, sizeof(::ml_metadata::GetContextsByTypeRequest)},
  { 883, 891, -1, sizeof(::ml_metadata::GetContextsByTypeResponse)},
  { 893, 903, -1, sizeof(::ml_metadata::GetContextByTypeAndNameRequest)},
  { 907, 914, -1, sizeof(::ml_metadata::GetContextByTypeAndNameResponse)},
  { 915, 923, -1, sizeof(::ml_metadata::GetContextsByIDRequest)},
  { 925, -1, -1, sizeof(::ml_metadata::GetContextsByIDResponse)},
  { 932, 940, -1, sizeof(::ml_metadata::GetContextsByArtifactRequest)},
  { 942, -1, -1, sizeof(::ml_metadata::GetContextsByArtifactResponse)},
  { 949, 957, -1, sizeof(::ml_metadata::GetContextsByExecutionRequest)},
  { 959, -1, -1, sizeof(::ml_metadata::GetContextsByExecutionResponse)},
  { 966, 974, -1, sizeof(::ml_metadata::GetParentContextsByContextRequest)},
  { 976, -1, -1, sizeof(::ml_metadata::GetParentContextsByContextResponse)},
  { 983, 991, -1, sizeof(::ml_metadata::GetChildrenContextsByContextRequest)},
  { 993, -1, -1, sizeof(::ml_metadata::GetChildrenContextsByContextResponse)},
  { 1000, 1008, -1, sizeof(::ml_metadata::GetParentContextsByContextsRequest)},
  { 1010, -1, -1, sizeof(::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild)},
  { 1017, 1025, -1, sizeof(::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse)},
  { 1027, -1, -1, sizeof(::ml_metadata::GetParentContextsByContextsResponse)},
  { 1034, 1042, -1, sizeof(::ml_metadata::GetChildrenContextsByContextsRequest)},
  { 1044, -1, -1, sizeof(::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent)},
  { 1051, 1059, -1, sizeof(::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse)},
  { 1061, -1, -1, sizeof(::ml_metadata::GetChildrenContextsByContextsResponse)},
  { 1068, 1077, -1, sizeof(::ml_metadata::GetArtifactsByContextRequest)},
  { 1080, 1088, -1, sizeof(::ml_metadata::GetArtifactsByContextResponse)},
  { 1090, 1099, -1, sizeof(::ml_metadata::GetExecutionsByContextRequest)},
  { 1102, 1111, -1, sizeof(::ml_metadata::GetExecutionsByContextResponse)},
  { 1114, 1122, -1, sizeof(::ml_metadata::GetLineageGraphRequest)},
  { 1124, 1131, -1, sizeof(::ml_metadata::GetLineageGraphResponse)},
  { 1132, 1141, -1, sizeof(::ml_metadata::GetLineageSubgraphRequest)},
  { 1144, 1151, -1, sizeof(::ml_metadata::GetLineageSubgraphResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ml_metadata::_ArtifactAndType_default_instance_._instance,
  &::ml_metadata::_ArtifactStructMap_PropertiesEntry_DoNotUse_default_instance_._instance,
  &::ml_metadata::_ArtifactStructMap_default_instance_._instance,
  &::ml_metadata::_ArtifactStructList_default_instance_._instance,
  &::ml_metadata::_ArtifactStruct_default_instance_._instance,
  &::ml_metadata::_PutArtifactsRequest_Options_default_instance_._instance,
  &::ml_metadata::_PutArtifactsRequest_default_instance_._instance,
  &::ml_metadata::_PutArtifactsResponse_default_instance_._instance,
  &::ml_metadata::_PutArtifactTypeRequest_default_instance_._instance,
  &::ml_metadata::_PutArtifactTypeResponse_default_instance_._instance,
  &::ml_metadata::_PutExecutionsRequest_default_instance_._instance,
  &::ml_metadata::_PutExecutionsResponse_default_instance_._instance,
  &::ml_metadata::_PutExecutionTypeRequest_default_instance_._instance,
  &::ml_metadata::_PutExecutionTypeResponse_default_instance_._instance,
  &::ml_metadata::_PutEventsRequest_default_instance_._instance,
  &::ml_metadata::_PutEventsResponse_default_instance_._instance,
  &::ml_metadata::_PutExecutionRequest_ArtifactAndEvent_default_instance_._instance,
  &::ml_metadata::_PutExecutionRequest_Options_default_instance_._instance,
  &::ml_metadata::_PutExecutionRequest_default_instance_._instance,
  &::ml_metadata::_PutExecutionResponse_default_instance_._instance,
  &::ml_metadata::_PutLineageSubgraphRequest_EventEdge_default_instance_._instance,
  &::ml_metadata::_PutLineageSubgraphRequest_Options_default_instance_._instance,
  &::ml_metadata::_PutLineageSubgraphRequest_default_instance_._instance,
  &::ml_metadata::_PutLineageSubgraphResponse_default_instance_._instance,
  &::ml_metadata::_PutTypesRequest_default_instance_._instance,
  &::ml_metadata::_PutTypesResponse_default_instance_._instance,
  &::ml_metadata::_PutContextTypeRequest_default_instance_._instance,
  &::ml_metadata::_PutContextTypeResponse_default_instance_._instance,
  &::ml_metadata::_PutContextsRequest_default_instance_._instance,
  &::ml_metadata::_PutContextsResponse_default_instance_._instance,
  &::ml_metadata::_PutAttributionsAndAssociationsRequest_default_instance_._instance,
  &::ml_metadata::_PutAttributionsAndAssociationsResponse_default_instance_._instance,
  &::ml_metadata::_PutParentContextsRequest_default_instance_._instance,
  &::ml_metadata::_PutParentContextsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactByTypeAndNameRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactByTypeAndNameResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByURIRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByURIResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionsRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesResponse_default_instance_._instance,
  &::ml_metadata::_GetContextTypesRequest_default_instance_._instance,
  &::ml_metadata::_GetContextTypesResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetContextTypesByExternalIdsRequest_default_instance_._instance,
  &::ml_metadata::_GetContextTypesByExternalIdsResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionByTypeAndNameRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionByTypeAndNameResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetEventsByExecutionIDsRequest_default_instance_._instance,
  &::ml_metadata::_GetEventsByExecutionIDsResponse_default_instance_._instance,
  &::ml_metadata::_GetEventsByArtifactIDsRequest_default_instance_._instance,
  &::ml_metadata::_GetEventsByArtifactIDsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactTypesByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionTypesByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetContextTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetContextTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetContextTypesByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetContextTypesByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsByTypeRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsByTypeResponse_default_instance_._instance,
  &::ml_metadata::_GetContextByTypeAndNameRequest_default_instance_._instance,
  &::ml_metadata::_GetContextByTypeAndNameResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsByIDRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsByIDResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsByArtifactRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsByArtifactResponse_default_instance_._instance,
  &::ml_metadata::_GetContextsByExecutionRequest_default_instance_._instance,
  &::ml_metadata::_GetContextsByExecutionResponse_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextRequest_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextResponse_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextRequest_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextResponse_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextsRequest_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextsResponse_ParentContextsPerChild_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_._instance,
  &::ml_metadata::_GetParentContextsByContextsResponse_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextsRequest_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextsResponse_ChildrenContextsPerParent_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse_default_instance_._instance,
  &::ml_metadata::_GetChildrenContextsByContextsResponse_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByContextRequest_default_instance_._instance,
  &::ml_metadata::_GetArtifactsByContextResponse_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByContextRequest_default_instance_._instance,
  &::ml_metadata::_GetExecutionsByContextResponse_default_instance_._instance,
  &::ml_metadata::_GetLineageGraphRequest_default_instance_._instance,
  &::ml_metadata::_GetLineageGraphResponse_default_instance_._instance,
  &::ml_metadata::_GetLineageSubgraphRequest_default_instance_._instance,
  &::ml_metadata::_GetLineageSubgraphResponse_default_instance_._instance,
};

const char descriptor_table_protodef_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n.ml_metadata/proto/metadata_store_servi"
  "ce.proto\022\013ml_metadata\032 google/protobuf/f"
  "ield_mask.proto\032&ml_metadata/proto/metad"
  "ata_store.proto\"c\n\017ArtifactAndType\022\'\n\010ar"
  "tifact\030\001 \001(\0132\025.ml_metadata.Artifact\022\'\n\004t"
  "ype\030\002 \001(\0132\031.ml_metadata.ArtifactType\"\247\001\n"
  "\021ArtifactStructMap\022B\n\nproperties\030\001 \003(\0132."
  ".ml_metadata.ArtifactStructMap.Propertie"
  "sEntry\032N\n\017PropertiesEntry\022\013\n\003key\030\001 \001(\t\022*"
  "\n\005value\030\002 \001(\0132\033.ml_metadata.ArtifactStru"
  "ct:\0028\001\"C\n\022ArtifactStructList\022-\n\010elements"
  "\030\001 \003(\0132\033.ml_metadata.ArtifactStruct\"\253\001\n\016"
  "ArtifactStruct\0220\n\010artifact\030\001 \001(\0132\034.ml_me"
  "tadata.ArtifactAndTypeH\000\022-\n\003map\030\002 \001(\0132\036."
  "ml_metadata.ArtifactStructMapH\000\022/\n\004list\030"
  "\003 \001(\0132\037.ml_metadata.ArtifactStructListH\000"
  "B\007\n\005value\"\242\002\n\023PutArtifactsRequest\022(\n\tart"
  "ifacts\030\001 \003(\0132\025.ml_metadata.Artifact\0229\n\007o"
  "ptions\030\002 \001(\0132(.ml_metadata.PutArtifactsR"
  "equest.Options\022<\n\023transaction_options\030\003 "
  "\001(\0132\037.ml_metadata.TransactionOptions\022/\n\013"
  "update_mask\030\004 \001(\0132\032.google.protobuf.Fiel"
  "dMask\0327\n\007Options\022,\n$abort_if_latest_upda"
  "ted_time_changed\030\001 \001(\010\",\n\024PutArtifactsRe"
  "sponse\022\024\n\014artifact_ids\030\001 \003(\003\"\374\001\n\026PutArti"
  "factTypeRequest\0220\n\rartifact_type\030\001 \001(\0132\031"
  ".ml_metadata.ArtifactType\022\026\n\016can_add_fie"
  "lds\030\002 \001(\010\022\027\n\017can_omit_fields\030\005 \001(\010\022\035\n\021ca"
  "n_delete_fields\030\003 \001(\010B\002\030\001\022\"\n\020all_fields_"
  "match\030\004 \001(\010:\004trueB\002\030\001\022<\n\023transaction_opt"
  "ions\030\006 \001(\0132\037.ml_metadata.TransactionOpti"
  "ons\"*\n\027PutArtifactTypeResponse\022\017\n\007type_i"
  "d\030\001 \001(\003\"\261\001\n\024PutExecutionsRequest\022*\n\nexec"
  "utions\030\001 \003(\0132\026.ml_metadata.Execution\022<\n\023"
  "transaction_options\030\002 \001(\0132\037.ml_metadata."
  "TransactionOptions\022/\n\013update_mask\030\003 \001(\0132"
  "\032.google.protobuf.FieldMask\".\n\025PutExecut"
  "ionsResponse\022\025\n\rexecution_ids\030\001 \003(\003\"\377\001\n\027"
  "PutExecutionTypeRequest\0222\n\016execution_typ"
  "e\030\001 \001(\0132\032.ml_metadata.ExecutionType\022\026\n\016c"
  "an_add_fields\030\002 \001(\010\022\027\n\017can_omit_fields\030\005"
  " \001(\010\022\035\n\021can_delete_fields\030\003 \001(\010B\002\030\001\022\"\n\020a"
  "ll_fields_match\030\004 \001(\010:\004trueB\002\030\001\022<\n\023trans"
  "action_options\030\006 \001(\0132\037.ml_metadata.Trans"
  "actionOptions\"+\n\030PutExecutionTypeRespons"
  "e\022\017\n\007type_id\030\001 \001(\003\"t\n\020PutEventsRequest\022\""
  "\n\006events\030\001 \003(\0132\022.ml_metadata.Event\022<\n\023tr"
  "ansaction_options\030\002 \001(\0132\037.ml_metadata.Tr"
  "ansactionOptions\"\023\n\021PutEventsResponse\"\266\004"
  "\n\023PutExecutionRequest\022)\n\texecution\030\001 \001(\013"
  "2\026.ml_metadata.Execution\022O\n\024artifact_eve"
  "nt_pairs\030\002 \003(\01321.ml_metadata.PutExecutio"
  "nRequest.ArtifactAndEvent\022&\n\010contexts\030\003 "
  "\003(\0132\024.ml_metadata.Context\0229\n\007options\030\004 \001"
  "(\0132(.ml_metadata.PutExecutionRequest.Opt"
  "ions\022<\n\023transaction_options\030\005 \001(\0132\037.ml_m"
  "etadata.TransactionOptions\032^\n\020ArtifactAn"
  "dEvent\022\'\n\010artifact\030\001 \001(\0132\025.ml_metadata.A"
  "rtifact\022!\n\005event\030\002 \001(\0132\022.ml_metadata.Eve"
  "nt\032\241\001\n\007Options\022&\n\036reuse_context_if_alrea"
  "dy_exist\030\001 \001(\010\0226\n.reuse_artifact_if_alre"
  "ady_exist_by_external_id\030\002 \001(\010\022\031\n\021force_"
  "update_time\030\003 \001(\010\022\033\n\023force_reuse_context"
  "\030\004 \001(\010\"W\n\024PutExecutionResponse\022\024\n\014execut"
  "ion_id\030\001 \001(\003\022\024\n\014artifact_ids\030\002 \003(\003\022\023\n\013co"
  "ntext_ids\030\003 \003(\003\"\253\004\n\031PutLineageSubgraphRe"
  "quest\022*\n\nexecutions\030\001 \003(\0132\026.ml_metadata."
  "Execution\022(\n\tartifacts\030\002 \003(\0132\025.ml_metada"
  "ta.Artifact\022&\n\010contexts\030\003 \003(\0132\024.ml_metad"
  "ata.Context\022E\n\013event_edges\030\004 \003(\01320.ml_me"
  "tadata.PutLineageSubgraphRequest.EventEd"
  "ge\022\?\n\007options\030\005 \001(\0132..ml_metadata.PutLin"
  "eageSubgraphRequest.Options\022<\n\023transacti"
  "on_options\030\006 \001(\0132\037.ml_metadata.Transacti"
  "onOptions\032_\n\tEventEdge\022\027\n\017execution_inde"
  "x\030\001 \001(\005\022\026\n\016artifact_index\030\002 \001(\005\022!\n\005event"
  "\030\003 \001(\0132\022.ml_metadata.Event\032i\n\007Options\022&\n"
  "\036reuse_context_if_already_exist\030\001 \001(\010\0226\n"
  ".reuse_artifact_if_already_exist_by_exte"
  "rnal_id\030\002 \001(\010\"j\n\032PutLineageSubgraphRespo"
  "nse\022\031\n\rexecution_ids\030\001 \003(\003B\002\020\001\022\030\n\014artifa"
  "ct_ids\030\002 \003(\003B\002\020\001\022\027\n\013context_ids\030\003 \003(\003B\002\020"
  "\001\"\334\002\n\017PutTypesRequest\0221\n\016artifact_types\030"
  "\001 \003(\0132\031.ml_metadata.ArtifactType\0223\n\017exec"
  "ution_types\030\002 \003(\0132\032.ml_metadata.Executio"
  "nType\022/\n\rcontext_types\030\003 \003(\0132\030.ml_metada"
  "ta.ContextType\022\026\n\016can_add_fields\030\004 \001(\010\022\027"
  "\n\017can_omit_fields\030\007 \001(\010\022\035\n\021can_delete_fi"
  "elds\030\005 \001(\010B\002\030\001\022\"\n\020all_fields_match\030\006 \001(\010"
  ":\004trueB\002\030\001\022<\n\023transaction_options\030\010 \001(\0132"
  "\037.ml_metadata.TransactionOptions\"c\n\020PutT"
  "ypesResponse\022\031\n\021artifact_type_ids\030\001 \003(\003\022"
  "\032\n\022execution_type_ids\030\002 \003(\003\022\030\n\020context_t"
  "ype_ids\030\003 \003(\003\"\371\001\n\025PutContextTypeRequest\022"
  ".\n\014context_type\030\001 \001(\0132\030.ml_metadata.Cont"
  "extType\022\026\n\016can_add_fields\030\002 \001(\010\022\027\n\017can_o"
  "mit_fields\030\005 \001(\010\022\035\n\021can_delete_fields\030\003 "
  "\001(\010B\002\030\001\022\"\n\020all_fields_match\030\004 \001(\010:\004trueB"
  "\002\030\001\022<\n\023transaction_options\030\006 \001(\0132\037.ml_me"
  "tadata.TransactionOptions\")\n\026PutContextT"
  "ypeResponse\022\017\n\007type_id\030\001 \001(\003\"\253\001\n\022PutCont"
  "extsRequest\022&\n\010contexts\030\001 \003(\0132\024.ml_metad"
  "ata.Context\022<\n\023transaction_options\030\002 \001(\013"
  "2\037.ml_metadata.TransactionOptions\022/\n\013upd"
  "ate_mask\030\003 \001(\0132\032.google.protobuf.FieldMa"
  "sk\"*\n\023PutContextsResponse\022\023\n\013context_ids"
  "\030\001 \003(\003\"\305\001\n%PutAttributionsAndAssociation"
  "sRequest\022.\n\014attributions\030\001 \003(\0132\030.ml_meta"
  "data.Attribution\022.\n\014associations\030\002 \003(\0132\030"
  ".ml_metadata.Association\022<\n\023transaction_"
  "options\030\003 \001(\0132\037.ml_metadata.TransactionO"
  "ptions\"(\n&PutAttributionsAndAssociations"
  "Response\"\215\001\n\030PutParentContextsRequest\0223\n"
  "\017parent_contexts\030\001 \003(\0132\032.ml_metadata.Par"
  "entContext\022<\n\023transaction_options\030\002 \001(\0132"
  "\037.ml_metadata.TransactionOptions\"\033\n\031PutP"
  "arentContextsResponse\"\266\001\n\031GetArtifactsBy"
  "TypeRequest\022\021\n\ttype_name\030\001 \001(\t\022\024\n\014type_v"
  "ersion\030\002 \001(\t\0222\n\007options\030\003 \001(\0132!.ml_metad"
  "ata.ListOperationOptions\022<\n\023transaction_"
  "options\030\004 \001(\0132\037.ml_metadata.TransactionO"
  "ptions\"_\n\032GetArtifactsByTypeResponse\022(\n\t"
  "artifacts\030\001 \003(\0132\025.ml_metadata.Artifact\022\027"
  "\n\017next_page_token\030\002 \001(\t\"\237\001\n\037GetArtifactB"
  "yTypeAndNameRequest\022\021\n\ttype_name\030\001 \001(\t\022\024"
  "\n\014type_version\030\003 \001(\t\022\025\n\rartifact_name\030\002 "
  "\001(\t\022<\n\023transaction_options\030\004 \001(\0132\037.ml_me"
  "tadata.TransactionOptions\"K\n GetArtifact"
  "ByTypeAndNameResponse\022\'\n\010artifact\030\001 \001(\0132"
  "\025.ml_metadata.Artifact\"\225\001\n\027GetArtifactsB"
  "yIDRequest\022\024\n\014artifact_ids\030\001 \003(\003\022&\n\027popu"
  "late_artifact_types\030\003 \001(\010:\005false\022<\n\023tran"
  "saction_options\030\002 \001(\0132\037.ml_metadata.Tran"
  "sactionOptions\"w\n\030GetArtifactsByIDRespon"
  "se\022(\n\tartifacts\030\001 \003(\0132\025.ml_metadata.Arti"
  "fact\0221\n\016artifact_types\030\002 \003(\0132\031.ml_metada"
  "ta.ArtifactType\"\207\001\n\023GetArtifactsRequest\022"
  "2\n\007options\030\001 \001(\0132!.ml_metadata.ListOpera"
  "tionOptions\022<\n\023transaction_options\030\002 \001(\013"
  "2\037.ml_metadata.TransactionOptions\"Y\n\024Get"
  "ArtifactsResponse\022(\n\tartifacts\030\001 \003(\0132\025.m"
  "l_metadata.Artifact\022\027\n\017next_page_token\030\002"
  " \001(\t\"l\n\030GetArtifactsByURIRequest\022\014\n\004uris"
  "\030\002 \003(\t\022<\n\023transaction_options\030\003 \001(\0132\037.ml"
  "_metadata.TransactionOptionsJ\004\010\001\020\002\"E\n\031Ge"
  "tArtifactsByURIResponse\022(\n\tartifacts\030\001 \003"
  "(\0132\025.ml_metadata.Artifact\"\210\001\n\024GetExecuti"
  "onsRequest\0222\n\007options\030\001 \001(\0132!.ml_metadat"
  "a.ListOperationOptions\022<\n\023transaction_op"
  "tions\030\002 \001(\0132\037.ml_metadata.TransactionOpt"
  "ions\"\\\n\025GetExecutionsResponse\022*\n\nexecuti"
  "ons\030\001 \003(\0132\026.ml_metadata.Execution\022\027\n\017nex"
  "t_page_token\030\002 \001(\t\"\177\n\026GetArtifactTypeReq"
  "uest\022\021\n\ttype_name\030\001 \001(\t\022\024\n\014type_version\030"
  "\002 \001(\t\022<\n\023transaction_options\030\003 \001(\0132\037.ml_"
  "metadata.TransactionOptions\"K\n\027GetArtifa"
  "ctTypeResponse\0220\n\rartifact_type\030\001 \001(\0132\031."
  "ml_metadata.ArtifactType\"W\n\027GetArtifactT"
  "ypesRequest\022<\n\023transaction_options\030\001 \001(\013"
  "2\037.ml_metadata.TransactionOptions\"M\n\030Get"
  "ArtifactTypesResponse\0221\n\016artifact_types\030"
  "\001 \003(\0132\031.ml_metadata.ArtifactType\"X\n\030GetE"
  "xecutionTypesRequest\022<\n\023transaction_opti"
  "ons\030\001 \001(\0132\037.ml_metadata.TransactionOptio"
  "ns\"P\n\031GetExecutionTypesResponse\0223\n\017execu"
  "tion_types\030\001 \003(\0132\032.ml_metadata.Execution"
  "Type\"V\n\026GetContextTypesRequest\022<\n\023transa"
  "ction_options\030\001 \001(\0132\037.ml_metadata.Transa"
  "ctionOptions\"J\n\027GetContextTypesResponse\022"
  "/\n\rcontext_types\030\001 \003(\0132\030.ml_metadata.Con"
  "textType\"v\n GetArtifactsByExternalIdsReq"
  "uest\022\024\n\014external_ids\030\001 \003(\t\022<\n\023transactio"
  "n_options\030\002 \001(\0132\037.ml_metadata.Transactio"
  "nOptions\"M\n!GetArtifactsByExternalIdsRes"
  "ponse\022(\n\tartifacts\030\001 \003(\0132\025.ml_metadata.A"
  "rtifact\"w\n!GetExecutionsByExternalIdsReq"
  "uest\022\024\n\014external_ids\030\001 \003(\t\022<\n\023transactio"
  "n_options\030\002 \001(\0132\037.ml_metadata.Transactio"
  "nOptions\"P\n\"GetExecutionsByExternalIdsRe"
  "sponse\022*\n\nexecutions\030\001 \003(\0132\026.ml_metadata"
  ".Execution\"u\n\037GetContextsByExternalIdsRe"
  "quest\022\024\n\014external_ids\030\001 \003(\t\022<\n\023transacti"
  "on_options\030\002 \001(\0132\037.ml_metadata.Transacti"
  "onOptions\"J\n GetContextsByExternalIdsRes"
  "ponse\022&\n\010contexts\030\001 \003(\0132\024.ml_metadata.Co"
  "ntext\"z\n$GetArtifactTypesByExternalIdsRe"
  "quest\022\024\n\014external_ids\030\001 \003(\t\022<\n\023transacti"
  "on_options\030\002 \001(\0132\037.ml_metadata.Transacti"
  "onOptions\"Z\n%GetArtifactTypesByExternalI"
  "dsResponse\0221\n\016artifact_types\030\001 \003(\0132\031.ml_"
  "metadata.ArtifactType\"{\n%GetExecutionTyp"
  "esByExternalIdsRequest\022\024\n\014external_ids\030\001"
  " \003(\t\022<\n\023transaction_options\030\002 \001(\0132\037.ml_m"
  "etadata.TransactionOptions\"]\n&GetExecuti"
  "onTypesByExternalIdsResponse\0223\n\017executio"
  "n_types\030\001 \003(\0132\032.ml_metadata.ExecutionTyp"
  "e\"y\n#GetContextTypesByExternalIdsRequest"
  "\022\024\n\014external_ids\030\001 \003(\t\022<\n\023transaction_op"
  "tions\030\002 \001(\0132\037.ml_metadata.TransactionOpt"
  "ions\"W\n$GetContextTypesByExternalIdsResp"
  "onse\022/\n\rcontext_types\030\001 \003(\0132\030.ml_metadat"
  "a.ContextType\"\267\001\n\032GetExecutionsByTypeReq"
  "uest\022\021\n\ttype_name\030\001 \001(\t\022\024\n\014type_version\030"
  "\002 \001(\t\0222\n\007options\030\003 \001(\0132!.ml_metadata.Lis"
  "tOperationOptions\022<\n\023transaction_options"
  "\030\004 \001(\0132\037.ml_metadata.TransactionOptions\""
  "b\n\033GetExecutionsByTypeResponse\022*\n\nexecut"
  "ions\030\001 \003(\0132\026.ml_metadata.Execution\022\027\n\017ne"
  "xt_page_token\030\002 \001(\t\"\241\001\n GetExecutionByTy"
  "peAndNameRequest\022\021\n\ttype_name\030\001 \001(\t\022\024\n\014t"
  "ype_version\030\003 \001(\t\022\026\n\016execution_name\030\002 \001("
  "\t\022<\n\023transaction_options\030\004 \001(\0132\037.ml_meta"
  "data.TransactionOptions\"N\n!GetExecutionB"
  "yTypeAndNameResponse\022)\n\texecution\030\001 \001(\0132"
  "\026.ml_metadata.Execution\"o\n\030GetExecutions"
  "ByIDRequest\022\025\n\rexecution_ids\030\001 \003(\003\022<\n\023tr"
  "ansaction_options\030\002 \001(\0132\037.ml_metadata.Tr"
  "ansactionOptions\"G\n\031GetExecutionsByIDRes"
  "ponse\022*\n\nexecutions\030\001 \003(\0132\026.ml_metadata."
  "Execution\"\200\001\n\027GetExecutionTypeRequest\022\021\n"
  "\ttype_name\030\001 \001(\t\022\024\n\014type_version\030\002 \001(\t\022<"
  "\n\023transaction_options\030\003 \001(\0132\037.ml_metadat"
  "a.TransactionOptions\"N\n\030GetExecutionType"
  "Response\0222\n\016execution_type\030\001 \001(\0132\032.ml_me"
  "tadata.ExecutionType\"u\n\036GetEventsByExecu"
  "tionIDsRequest\022\025\n\rexecution_ids\030\001 \003(\003\022<\n"
  "\023transaction_options\030\002 \001(\0132\037.ml_metadata"
  ".TransactionOptions\"E\n\037GetEventsByExecut"
  "ionIDsResponse\022\"\n\006events\030\001 \003(\0132\022.ml_meta"
  "data.Event\"s\n\035GetEventsByArtifactIDsRequ"
  "est\022\024\n\014artifact_ids\030\001 \003(\003\022<\n\023transaction"
  "_options\030\002 \001(\0132\037.ml_metadata.Transaction"
  "Options\"D\n\036GetEventsByArtifactIDsRespons"
  "e\022\"\n\006events\030\001 \003(\0132\022.ml_metadata.Event\"m\n"
  "\033GetArtifactTypesByIDRequest\022\020\n\010type_ids"
  "\030\001 \003(\003\022<\n\023transaction_options\030\002 \001(\0132\037.ml"
  "_metadata.TransactionOptions\"Q\n\034GetArtif"
  "actTypesByIDResponse\0221\n\016artifact_types\030\001"
  " \003(\0132\031.ml_metadata.ArtifactType\"n\n\034GetEx"
  "ecutionTypesByIDRequest\022\020\n\010type_ids\030\001 \003("
  "\003\022<\n\023transaction_options\030\002 \001(\0132\037.ml_meta"
  "data.TransactionOptions\"T\n\035GetExecutionT"
  "ypesByIDResponse\0223\n\017execution_types\030\001 \003("
  "\0132\032.ml_metadata.ExecutionType\"~\n\025GetCont"
  "extTypeRequest\022\021\n\ttype_name\030\001 \001(\t\022\024\n\014typ"
  "e_version\030\002 \001(\t\022<\n\023transaction_options\030\003"
  " \001(\0132\037.ml_metadata.TransactionOptions\"H\n"
  "\026GetContextTypeResponse\022.\n\014context_type\030"
  "\001 \001(\0132\030.ml_metadata.ContextType\"l\n\032GetCo"
  "ntextTypesByIDRequest\022\020\n\010type_ids\030\001 \003(\003\022"
  "<\n\023transaction_options\030\002 \001(\0132\037.ml_metada"
  "ta.TransactionOptions\"N\n\033GetContextTypes"
  "ByIDResponse\022/\n\rcontext_types\030\001 \003(\0132\030.ml"
  "_metadata.ContextType\"\206\001\n\022GetContextsReq"
  "uest\0222\n\007options\030\001 \001(\0132!.ml_metadata.List"
  "OperationOptions\022<\n\023transaction_options\030"
  "\002 \001(\0132\037.ml_metadata.TransactionOptions\"V"
  "\n\023GetContextsResponse\022&\n\010contexts\030\001 \003(\0132"
  "\024.ml_metadata.Context\022\027\n\017next_page_token"
  "\030\002 \001(\t\"\265\001\n\030GetContextsByTypeRequest\022\021\n\tt"
  "ype_name\030\001 \001(\t\0222\n\007options\030\002 \001(\0132!.ml_met"
  "adata.ListOperationOptions\022\024\n\014type_versi"
  "on\030\003 \001(\t\022<\n\023transaction_options\030\004 \001(\0132\037."
  "ml_metadata.TransactionOptions\"\\\n\031GetCon"
  "textsByTypeResponse\022&\n\010contexts\030\001 \003(\0132\024."
  "ml_metadata.Context\022\027\n\017next_page_token\030\002"
  " \001(\t\"\235\001\n\036GetContextByTypeAndNameRequest\022"
  "\021\n\ttype_name\030\001 \001(\t\022\024\n\014type_version\030\003 \001(\t"
  "\022\024\n\014context_name\030\002 \001(\t\022<\n\023transaction_op"
  "tions\030\004 \001(\0132\037.ml_metadata.TransactionOpt"
  "ions\"H\n\037GetContextByTypeAndNameResponse\022"
  "%\n\007context\030\001 \001(\0132\024.ml_metadata.Context\"k"
  "\n\026GetContextsByIDRequest\022\023\n\013context_ids\030"
  "\001 \003(\003\022<\n\023transaction_options\030\002 \001(\0132\037.ml_"
  "metadata.TransactionOptions\"A\n\027GetContex"
  "tsByIDResponse\022&\n\010contexts\030\001 \003(\0132\024.ml_me"
  "tadata.Context\"q\n\034GetContextsByArtifactR"
  "equest\022\023\n\013artifact_id\030\001 \001(\003\022<\n\023transacti"
  "on_options\030\002 \001(\0132\037.ml_metadata.Transacti"
  "onOptions\"G\n\035GetContextsByArtifactRespon"
  "se\022&\n\010contexts\030\001 \003(\0132\024.ml_metadata.Conte"
  "xt\"s\n\035GetContextsByExecutionRequest\022\024\n\014e"
  "xecution_id\030\001 \001(\003\022<\n\023transaction_options"
  "\030\002 \001(\0132\037.ml_metadata.TransactionOptions\""
  "H\n\036GetContextsByExecutionResponse\022&\n\010con"
  "texts\030\001 \003(\0132\024.ml_metadata.Context\"u\n!Get"
  "ParentContextsByContextRequest\022\022\n\ncontex"
  "t_id\030\001 \001(\003\022<\n\023transaction_options\030\002 \001(\0132"
  "\037.ml_metadata.TransactionOptions\"L\n\"GetP"
  "arentContextsByContextResponse\022&\n\010contex"
  "ts\030\001 \003(\0132\024.ml_metadata.Context\"w\n#GetChi"
  "ldrenContextsByContextRequest\022\022\n\ncontext"
  "_id\030\001 \001(\003\022<\n\023transaction_options\030\002 \001(\0132\037"
  ".ml_metadata.TransactionOptions\"N\n$GetCh"
  "ildrenContextsByContextResponse\022&\n\010conte"
  "xts\030\001 \003(\0132\024.ml_metadata.Context\"{\n\"GetPa"
  "rentContextsByContextsRequest\022\027\n\013context"
  "_ids\030\001 \003(\003B\002\020\001\022<\n\023transaction_options\030\002 "
  "\001(\0132\037.ml_metadata.TransactionOptions\"\272\002\n"
  "#GetParentContextsByContextsResponse\022P\n\010"
  "contexts\030\002 \003(\0132>.ml_metadata.GetParentCo"
  "ntextsByContextsResponse.ContextsEntry\032G"
  "\n\026ParentContextsPerChild\022-\n\017parent_conte"
  "xts\030\001 \003(\0132\024.ml_metadata.Context\032x\n\rConte"
  "xtsEntry\022\013\n\003key\030\001 \001(\003\022V\n\005value\030\002 \001(\0132G.m"
  "l_metadata.GetParentContextsByContextsRe"
  "sponse.ParentContextsPerChild:\0028\001\"}\n$Get"
  "ChildrenContextsByContextsRequest\022\027\n\013con"
  "text_ids\030\001 \003(\003B\002\020\001\022<\n\023transaction_option"
  "s\030\002 \001(\0132\037.ml_metadata.TransactionOptions"
  "\"\310\002\n%GetChildrenContextsByContextsRespon"
  "se\022R\n\010contexts\030\002 \003(\0132@.ml_metadata.GetCh"
  "ildrenContextsByContextsResponse.Context"
  "sEntry\032L\n\031ChildrenContextsPerParent\022/\n\021c"
  "hildren_contexts\030\001 \003(\0132\024.ml_metadata.Con"
  "text\032}\n\rContextsEntry\022\013\n\003key\030\001 \001(\003\022[\n\005va"
  "lue\030\002 \001(\0132L.ml_metadata.GetChildrenConte"
  "xtsByContextsResponse.ChildrenContextsPe"
  "rParent:\0028\001\"\244\001\n\034GetArtifactsByContextReq"
  "uest\022\022\n\ncontext_id\030\001 \001(\003\0222\n\007options\030\002 \001("
  "\0132!.ml_metadata.ListOperationOptions\022<\n\023"
  "transaction_options\030\003 \001(\0132\037.ml_metadata."
  "TransactionOptions\"b\n\035GetArtifactsByCont"
  "extResponse\022(\n\tartifacts\030\001 \003(\0132\025.ml_meta"
  "data.Artifact\022\027\n\017next_page_token\030\002 \001(\t\"\245"
  "\001\n\035GetExecutionsByContextRequest\022\022\n\ncont"
  "ext_id\030\001 \001(\003\0222\n\007options\030\002 \001(\0132!.ml_metad"
  "ata.ListOperationOptions\022<\n\023transaction_"
  "options\030\003 \001(\0132\037.ml_metadata.TransactionO"
  "ptions\"\243\001\n\036GetExecutionsByContextRespons"
  "e\022*\n\nexecutions\030\001 \003(\0132\026.ml_metadata.Exec"
  "ution\022\027\n\017next_page_token\030\002 \001(\t\022<\n\023transa"
  "ction_options\030\003 \001(\0132\037.ml_metadata.Transa"
  "ctionOptions\"\222\001\n\026GetLineageGraphRequest\022"
  "6\n\007options\030\001 \001(\0132%.ml_metadata.LineageGr"
  "aphQueryOptions\022<\n\023transaction_options\030\002"
  " \001(\0132\037.ml_metadata.TransactionOptions:\002\030"
  "\001\"J\n\027GetLineageGraphResponse\022+\n\010subgraph"
  "\030\001 \001(\0132\031.ml_metadata.LineageGraph:\002\030\001\"\332\001"
  "\n\031GetLineageSubgraphRequest\022P\n\036lineage_s"
  "ubgraph_query_options\030\001 \001(\0132(.ml_metadat"
  "a.LineageSubgraphQueryOptions\022-\n\tread_ma"
  "sk\030\003 \001(\0132\032.google.protobuf.FieldMask\022<\n\023"
  "transaction_options\030\002 \001(\0132\037.ml_metadata."
  "TransactionOptions\"Q\n\032GetLineageSubgraph"
  "Response\0223\n\020lineage_subgraph\030\001 \001(\0132\031.ml_"
  "metadata.LineageGraph2\231,\n\024MetadataStoreS"
  "ervice\022^\n\017PutArtifactType\022#.ml_metadata."
  "PutArtifactTypeRequest\032$.ml_metadata.Put"
  "ArtifactTypeResponse\"\000\022a\n\020PutExecutionTy"
  "pe\022$.ml_metadata.PutExecutionTypeRequest"
  "\032%.ml_metadata.PutExecutionTypeResponse\""
  "\000\022[\n\016PutContextType\022\".ml_metadata.PutCon"
  "textTypeRequest\032#.ml_metadata.PutContext"
  "TypeResponse\"\000\022I\n\010PutTypes\022\034.ml_metadata"
  ".PutTypesRequest\032\035.ml_metadata.PutTypesR"
  "esponse\"\000\022U\n\014PutArtifacts\022 .ml_metadata."
  "PutArtifactsRequest\032!.ml_metadata.PutArt"
  "ifactsResponse\"\000\022X\n\rPutExecutions\022!.ml_m"
  "etadata.PutExecutionsRequest\032\".ml_metada"
  "ta.PutExecutionsResponse\"\000\022L\n\tPutEvents\022"
  "\035.ml_metadata.PutEventsRequest\032\036.ml_meta"
  "data.PutEventsResponse\"\000\022U\n\014PutExecution"
  "\022 .ml_metadata.PutExecutionRequest\032!.ml_"
  "metadata.PutExecutionResponse\"\000\022g\n\022PutLi"
  "neageSubgraph\022&.ml_metadata.PutLineageSu"
  "bgraphRequest\032\'.ml_metadata.PutLineageSu"
  "bgraphResponse\"\000\022R\n\013PutContexts\022\037.ml_met"
  "adata.PutContextsRequest\032 .ml_metadata.P"
  "utContextsResponse\"\000\022\213\001\n\036PutAttributions"
  "AndAssociations\0222.ml_metadata.PutAttribu"
  "tionsAndAssociationsRequest\0323.ml_metadat"
  "a.PutAttributionsAndAssociationsResponse"
  "\"\000\022d\n\021PutParentContexts\022%.ml_metadata.Pu"
  "tParentContextsRequest\032&.ml_metadata.Put"
  "ParentContextsResponse\"\000\022^\n\017GetArtifactT"
  "ype\022#.ml_metadata.GetArtifactTypeRequest"
  "\032$.ml_metadata.GetArtifactTypeResponse\"\000"
  "\022m\n\024GetArtifactTypesByID\022(.ml_metadata.G"
  "etArtifactTypesByIDRequest\032).ml_metadata"
  ".GetArtifactTypesByIDResponse\"\000\022a\n\020GetAr"
  "tifactTypes\022$.ml_metadata.GetArtifactTyp"
  "esRequest\032%.ml_metadata.GetArtifactTypes"
  "Response\"\000\022a\n\020GetExecutionType\022$.ml_meta"
  "data.GetExecutionTypeRequest\032%.ml_metada"
  "ta.GetExecutionTypeResponse\"\000\022p\n\025GetExec"
  "utionTypesByID\022).ml_metadata.GetExecutio"
  "nTypesByIDRequest\032*.ml_metadata.GetExecu"
  "tionTypesByIDResponse\"\000\022d\n\021GetExecutionT"
  "ypes\022%.ml_metadata.GetExecutionTypesRequ"
  "est\032&.ml_metadata.GetExecutionTypesRespo"
  "nse\"\000\022[\n\016GetContextType\022\".ml_metadata.Ge"
  "tContextTypeRequest\032#.ml_metadata.GetCon"
  "textTypeResponse\"\000\022j\n\023GetContextTypesByI"
  "D\022\'.ml_metadata.GetContextTypesByIDReque"
  "st\032(.ml_metadata.GetContextTypesByIDResp"
  "onse\"\000\022^\n\017GetContextTypes\022#.ml_metadata."
  "GetContextTypesRequest\032$.ml_metadata.Get"
  "ContextTypesResponse\"\000\022U\n\014GetArtifacts\022 "
  ".ml_metadata.GetArtifactsRequest\032!.ml_me"
  "tadata.GetArtifactsResponse\"\000\022X\n\rGetExec"
  "utions\022!.ml_metadata.GetExecutionsReques"
  "t\032\".ml_metadata.GetExecutionsResponse\"\000\022"
  "R\n\013GetContexts\022\037.ml_metadata.GetContexts"
  "Request\032 .ml_metadata.GetContextsRespons"
  "e\"\000\022a\n\020GetArtifactsByID\022$.ml_metadata.Ge"
  "tArtifactsByIDRequest\032%.ml_metadata.GetA"
  "rtifactsByIDResponse\"\000\022d\n\021GetExecutionsB"
  "yID\022%.ml_metadata.GetExecutionsByIDReque"
  "st\032&.ml_metadata.GetExecutionsByIDRespon"
  "se\"\000\022^\n\017GetContextsByID\022#.ml_metadata.Ge"
  "tContextsByIDRequest\032$.ml_metadata.GetCo"
  "ntextsByIDResponse\"\000\022g\n\022GetArtifactsByTy"
  "pe\022&.ml_metadata.GetArtifactsByTypeReque"
  "st\032\'.ml_metadata.GetArtifactsByTypeRespo"
  "nse\"\000\022j\n\023GetExecutionsByType\022\'.ml_metada"
  "ta.GetExecutionsByTypeRequest\032(.ml_metad"
  "ata.GetExecutionsByTypeResponse\"\000\022d\n\021Get"
  "ContextsByType\022%.ml_metadata.GetContexts"
  "ByTypeRequest\032&.ml_metadata.GetContextsB"
  "yTypeResponse\"\000\022y\n\030GetArtifactByTypeAndN"
  "ame\022,.ml_metadata.GetArtifactByTypeAndNa"
  "meRequest\032-.ml_metadata.GetArtifactByTyp"
  "eAndNameResponse\"\000\022|\n\031GetExecutionByType"
  "AndName\022-.ml_metadata.GetExecutionByType"
  "AndNameRequest\032..ml_metadata.GetExecutio"
  "nByTypeAndNameResponse\"\000\022v\n\027GetContextBy"
  "TypeAndName\022+.ml_metadata.GetContextByTy"
  "peAndNameRequest\032,.ml_metadata.GetContex"
  "tByTypeAndNameResponse\"\000\022d\n\021GetArtifacts"
  "ByURI\022%.ml_metadata.GetArtifactsByURIReq"
  "uest\032&.ml_metadata.GetArtifactsByURIResp"
  "onse\"\000\022v\n\027GetEventsByExecutionIDs\022+.ml_m"
  "etadata.GetEventsByExecutionIDsRequest\032,"
  ".ml_metadata.GetEventsByExecutionIDsResp"
  "onse\"\000\022s\n\026GetEventsByArtifactIDs\022*.ml_me"
  "tadata.GetEventsByArtifactIDsRequest\032+.m"
  "l_metadata.GetEventsByArtifactIDsRespons"
  "e\"\000\022|\n\031GetArtifactsByExternalIds\022-.ml_me"
  "tadata.GetArtifactsByExternalIdsRequest\032"
  "..ml_metadata.GetArtifactsByExternalIdsR"
  "esponse\"\000\022\177\n\032GetExecutionsByExternalIds\022"
  "..ml_metadata.GetExecutionsByExternalIds"
  "Request\032/.ml_metadata.GetExecutionsByExt"
  "ernalIdsResponse\"\000\022y\n\030GetContextsByExter"
  "nalIds\022,.ml_metadata.GetContextsByExtern"
  "alIdsRequest\032-.ml_metadata.GetContextsBy"
  "ExternalIdsResponse\"\000\022\210\001\n\035GetArtifactTyp"
  "esByExternalIds\0221.ml_metadata.GetArtifac"
  "tTypesByExternalIdsRequest\0322.ml_metadata"
  ".GetArtifactTypesByExternalIdsResponse\"\000"
  "\022\213\001\n\036GetExecutionTypesByExternalIds\0222.ml"
  "_metadata.GetExecutionTypesByExternalIds"
  "Request\0323.ml_metadata.GetExecutionTypesB"
  "yExternalIdsResponse\"\000\022\205\001\n\034GetContextTyp"
  "esByExternalIds\0220.ml_metadata.GetContext"
  "TypesByExternalIdsRequest\0321.ml_metadata."
  "GetContextTypesByExternalIdsResponse\"\000\022p"
  "\n\025GetContextsByArtifact\022).ml_metadata.Ge"
  "tContextsByArtifactRequest\032*.ml_metadata"
  ".GetContextsByArtifactResponse\"\000\022s\n\026GetC"
  "ontextsByExecution\022*.ml_metadata.GetCont"
  "extsByExecutionRequest\032+.ml_metadata.Get"
  "ContextsByExecutionResponse\"\000\022\177\n\032GetPare"
  "ntContextsByContext\022..ml_metadata.GetPar"
  "entContextsByContextRequest\032/.ml_metadat"
  "a.GetParentContextsByContextResponse\"\000\022\205"
  "\001\n\034GetChildrenContextsByContext\0220.ml_met"
  "adata.GetChildrenContextsByContextReques"
  "t\0321.ml_metadata.GetChildrenContextsByCon"
  "textResponse\"\000\022\202\001\n\033GetParentContextsByCo"
  "ntexts\022/.ml_metadata.GetParentContextsBy"
  "ContextsRequest\0320.ml_metadata.GetParentC"
  "ontextsByContextsResponse\"\000\022\210\001\n\035GetChild"
  "renContextsByContexts\0221.ml_metadata.GetC"
  "hildrenContextsByContextsRequest\0322.ml_me"
  "tadata.GetChildrenContextsByContextsResp"
  "onse\"\000\022p\n\025GetArtifactsByContext\022).ml_met"
  "adata.GetArtifactsByContextRequest\032*.ml_"
  "metadata.GetArtifactsByContextResponse\"\000"
  "\022s\n\026GetExecutionsByContext\022*.ml_metadata"
  ".GetExecutionsByContextRequest\032+.ml_meta"
  "data.GetExecutionsByContextResponse\"\000\022a\n"
  "\017GetLineageGraph\022#.ml_metadata.GetLineag"
  "eGraphRequest\032$.ml_metadata.GetLineageGr"
  "aphResponse\"\003\210\002\001\022g\n\022GetLineageSubgraph\022&"
  ".ml_metadata.GetLineageSubgraphRequest\032\'"
  ".ml_metadata.GetLineageSubgraphResponse\""
  "\000"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_2eproto,
};
static ::_pbi::once_flag descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto = {
    false, false, 19521, descriptor_table_protodef_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto,
    "ml_metadata/proto/metadata_store_service.proto",
    &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once, descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_deps, 2, 118,
    schemas, file_default_instances, TableStruct_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto::offsets,
    file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto, file_level_enum_descriptors_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto,
    file_level_service_descriptors_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter() {
  return &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto(&descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto);
namespace ml_metadata {

// ===================================================================

class ArtifactAndType::_Internal {
 public:
  using HasBits = decltype(std::declval<ArtifactAndType>()._impl_._has_bits_);
  static const ::ml_metadata::Artifact& artifact(const ArtifactAndType* msg);
  static void set_has_artifact(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::ArtifactType& type(const ArtifactAndType* msg);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::Artifact&
ArtifactAndType::_Internal::artifact(const ArtifactAndType* msg) {
  return *msg->_impl_.artifact_;
}
const ::ml_metadata::ArtifactType&
ArtifactAndType::_Internal::type(const ArtifactAndType* msg) {
  return *msg->_impl_.type_;
}
void ArtifactAndType::clear_artifact() {
  if (_impl_.artifact_ != nullptr) _impl_.artifact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ArtifactAndType::clear_type() {
  if (_impl_.type_ != nullptr) _impl_.type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ArtifactAndType::ArtifactAndType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.ArtifactAndType)
}
ArtifactAndType::ArtifactAndType(const ArtifactAndType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArtifactAndType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}
    , decltype(_impl_.type_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_artifact()) {
    _this->_impl_.artifact_ = new ::ml_metadata::Artifact(*from._impl_.artifact_);
  }
  if (from._internal_has_type()) {
    _this->_impl_.type_ = new ::ml_metadata::ArtifactType(*from._impl_.type_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.ArtifactAndType)
}

inline void ArtifactAndType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}
    , decltype(_impl_.type_){nullptr}
  };
}

ArtifactAndType::~ArtifactAndType() {
  // @@protoc_insertion_point(destructor:ml_metadata.ArtifactAndType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArtifactAndType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.artifact_;
  if (this != internal_default_instance()) delete _impl_.type_;
}

void ArtifactAndType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArtifactAndType::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.ArtifactAndType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.artifact_ != nullptr);
      _impl_.artifact_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.type_ != nullptr);
      _impl_.type_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArtifactAndType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Artifact artifact = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ArtifactType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArtifactAndType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.ArtifactAndType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Artifact artifact = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::artifact(this),
        _Internal::artifact(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.ArtifactType type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::type(this),
        _Internal::type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.ArtifactAndType)
  return target;
}

size_t ArtifactAndType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.ArtifactAndType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.Artifact artifact = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.artifact_);
    }

    // optional .ml_metadata.ArtifactType type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.type_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArtifactAndType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArtifactAndType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArtifactAndType::GetClassData() const { return &_class_data_; }


void ArtifactAndType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArtifactAndType*>(&to_msg);
  auto& from = static_cast<const ArtifactAndType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.ArtifactAndType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_artifact()->::ml_metadata::Artifact::MergeFrom(
          from._internal_artifact());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_type()->::ml_metadata::ArtifactType::MergeFrom(
          from._internal_type());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArtifactAndType::CopyFrom(const ArtifactAndType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.ArtifactAndType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArtifactAndType::IsInitialized() const {
  return true;
}

void ArtifactAndType::InternalSwap(ArtifactAndType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ArtifactAndType, _impl_.type_)
      + sizeof(ArtifactAndType::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ArtifactAndType, _impl_.artifact_)>(
          reinterpret_cast<char*>(&_impl_.artifact_),
          reinterpret_cast<char*>(&other->_impl_.artifact_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ArtifactAndType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[0]);
}

// ===================================================================

ArtifactStructMap_PropertiesEntry_DoNotUse::ArtifactStructMap_PropertiesEntry_DoNotUse() {}
ArtifactStructMap_PropertiesEntry_DoNotUse::ArtifactStructMap_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ArtifactStructMap_PropertiesEntry_DoNotUse::MergeFrom(const ArtifactStructMap_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ArtifactStructMap_PropertiesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[1]);
}

// ===================================================================

class ArtifactStructMap::_Internal {
 public:
};

ArtifactStructMap::ArtifactStructMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &ArtifactStructMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:ml_metadata.ArtifactStructMap)
}
ArtifactStructMap::ArtifactStructMap(const ArtifactStructMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArtifactStructMap* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.properties_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.ArtifactStructMap)
}

inline void ArtifactStructMap::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.properties_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArtifactStructMap::~ArtifactStructMap() {
  // @@protoc_insertion_point(destructor:ml_metadata.ArtifactStructMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void ArtifactStructMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.properties_.Destruct();
  _impl_.properties_.~MapField();
}

void ArtifactStructMap::ArenaDtor(void* object) {
  ArtifactStructMap* _this = reinterpret_cast< ArtifactStructMap* >(object);
  _this->_impl_.properties_.Destruct();
}
void ArtifactStructMap::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArtifactStructMap::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.ArtifactStructMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArtifactStructMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .ml_metadata.ArtifactStruct> properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArtifactStructMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.ArtifactStructMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ml_metadata.ArtifactStruct> properties = 1;
  if (!this->_internal_properties().empty()) {
    using MapType = ::_pb::Map<std::string, ::ml_metadata::ArtifactStruct>;
    using WireHelper = ArtifactStructMap_PropertiesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_properties();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "ml_metadata.ArtifactStructMap.PropertiesEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.ArtifactStructMap)
  return target;
}

size_t ArtifactStructMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.ArtifactStructMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .ml_metadata.ArtifactStruct> properties = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ml_metadata::ArtifactStruct >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += ArtifactStructMap_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArtifactStructMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArtifactStructMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArtifactStructMap::GetClassData() const { return &_class_data_; }


void ArtifactStructMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArtifactStructMap*>(&to_msg);
  auto& from = static_cast<const ArtifactStructMap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.ArtifactStructMap)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArtifactStructMap::CopyFrom(const ArtifactStructMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.ArtifactStructMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArtifactStructMap::IsInitialized() const {
  return true;
}

void ArtifactStructMap::InternalSwap(ArtifactStructMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArtifactStructMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[2]);
}

// ===================================================================

class ArtifactStructList::_Internal {
 public:
};

ArtifactStructList::ArtifactStructList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.ArtifactStructList)
}
ArtifactStructList::ArtifactStructList(const ArtifactStructList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArtifactStructList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.elements_){from._impl_.elements_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.ArtifactStructList)
}

inline void ArtifactStructList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.elements_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ArtifactStructList::~ArtifactStructList() {
  // @@protoc_insertion_point(destructor:ml_metadata.ArtifactStructList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArtifactStructList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.elements_.~RepeatedPtrField();
}

void ArtifactStructList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArtifactStructList::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.ArtifactStructList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArtifactStructList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactStruct elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArtifactStructList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.ArtifactStructList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactStruct elements = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elements_size()); i < n; i++) {
    const auto& repfield = this->_internal_elements(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.ArtifactStructList)
  return target;
}

size_t ArtifactStructList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.ArtifactStructList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactStruct elements = 1;
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->_impl_.elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArtifactStructList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArtifactStructList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArtifactStructList::GetClassData() const { return &_class_data_; }


void ArtifactStructList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArtifactStructList*>(&to_msg);
  auto& from = static_cast<const ArtifactStructList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.ArtifactStructList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.elements_.MergeFrom(from._impl_.elements_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArtifactStructList::CopyFrom(const ArtifactStructList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.ArtifactStructList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArtifactStructList::IsInitialized() const {
  return true;
}

void ArtifactStructList::InternalSwap(ArtifactStructList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.elements_.InternalSwap(&other->_impl_.elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArtifactStructList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[3]);
}

// ===================================================================

class ArtifactStruct::_Internal {
 public:
  static const ::ml_metadata::ArtifactAndType& artifact(const ArtifactStruct* msg);
  static const ::ml_metadata::ArtifactStructMap& map(const ArtifactStruct* msg);
  static const ::ml_metadata::ArtifactStructList& list(const ArtifactStruct* msg);
};

const ::ml_metadata::ArtifactAndType&
ArtifactStruct::_Internal::artifact(const ArtifactStruct* msg) {
  return *msg->_impl_.value_.artifact_;
}
const ::ml_metadata::ArtifactStructMap&
ArtifactStruct::_Internal::map(const ArtifactStruct* msg) {
  return *msg->_impl_.value_.map_;
}
const ::ml_metadata::ArtifactStructList&
ArtifactStruct::_Internal::list(const ArtifactStruct* msg) {
  return *msg->_impl_.value_.list_;
}
void ArtifactStruct::set_allocated_artifact(::ml_metadata::ArtifactAndType* artifact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (artifact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(artifact);
    if (message_arena != submessage_arena) {
      artifact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, artifact, submessage_arena);
    }
    set_has_artifact();
    _impl_.value_.artifact_ = artifact;
  }
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.ArtifactStruct.artifact)
}
void ArtifactStruct::set_allocated_map(::ml_metadata::ArtifactStructMap* map) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (map) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map);
    if (message_arena != submessage_arena) {
      map = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map, submessage_arena);
    }
    set_has_map();
    _impl_.value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.ArtifactStruct.map)
}
void ArtifactStruct::set_allocated_list(::ml_metadata::ArtifactStructList* list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_value();
  if (list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(list);
    if (message_arena != submessage_arena) {
      list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list, submessage_arena);
    }
    set_has_list();
    _impl_.value_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:ml_metadata.ArtifactStruct.list)
}
ArtifactStruct::ArtifactStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.ArtifactStruct)
}
ArtifactStruct::ArtifactStruct(const ArtifactStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ArtifactStruct* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kArtifact: {
      _this->_internal_mutable_artifact()->::ml_metadata::ArtifactAndType::MergeFrom(
          from._internal_artifact());
      break;
    }
    case kMap: {
      _this->_internal_mutable_map()->::ml_metadata::ArtifactStructMap::MergeFrom(
          from._internal_map());
      break;
    }
    case kList: {
      _this->_internal_mutable_list()->::ml_metadata::ArtifactStructList::MergeFrom(
          from._internal_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.ArtifactStruct)
}

inline void ArtifactStruct::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_value();
}

ArtifactStruct::~ArtifactStruct() {
  // @@protoc_insertion_point(destructor:ml_metadata.ArtifactStruct)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ArtifactStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void ArtifactStruct::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ArtifactStruct::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ml_metadata.ArtifactStruct)
  switch (value_case()) {
    case kArtifact: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.artifact_;
      }
      break;
    }
    case kMap: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.map_;
      }
      break;
    }
    case kList: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.value_.list_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


void ArtifactStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.ArtifactStruct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ArtifactStruct::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ml_metadata.ArtifactAndType artifact = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ml_metadata.ArtifactStructMap map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_map(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ml_metadata.ArtifactStructList list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ArtifactStruct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.ArtifactStruct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (value_case()) {
    case kArtifact: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, _Internal::artifact(this),
          _Internal::artifact(this).GetCachedSize(), target, stream);
      break;
    }
    case kMap: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, _Internal::map(this),
          _Internal::map(this).GetCachedSize(), target, stream);
      break;
    }
    case kList: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::list(this),
          _Internal::list(this).GetCachedSize(), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.ArtifactStruct)
  return target;
}

size_t ArtifactStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.ArtifactStruct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // .ml_metadata.ArtifactAndType artifact = 1;
    case kArtifact: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.artifact_);
      break;
    }
    // .ml_metadata.ArtifactStructMap map = 2;
    case kMap: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.map_);
      break;
    }
    // .ml_metadata.ArtifactStructList list = 3;
    case kList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.value_.list_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ArtifactStruct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ArtifactStruct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ArtifactStruct::GetClassData() const { return &_class_data_; }


void ArtifactStruct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ArtifactStruct*>(&to_msg);
  auto& from = static_cast<const ArtifactStruct&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.ArtifactStruct)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kArtifact: {
      _this->_internal_mutable_artifact()->::ml_metadata::ArtifactAndType::MergeFrom(
          from._internal_artifact());
      break;
    }
    case kMap: {
      _this->_internal_mutable_map()->::ml_metadata::ArtifactStructMap::MergeFrom(
          from._internal_map());
      break;
    }
    case kList: {
      _this->_internal_mutable_list()->::ml_metadata::ArtifactStructList::MergeFrom(
          from._internal_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ArtifactStruct::CopyFrom(const ArtifactStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.ArtifactStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArtifactStruct::IsInitialized() const {
  return true;
}

void ArtifactStruct::InternalSwap(ArtifactStruct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArtifactStruct::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[4]);
}

// ===================================================================

class PutArtifactsRequest_Options::_Internal {
 public:
  using HasBits = decltype(std::declval<PutArtifactsRequest_Options>()._impl_._has_bits_);
  static void set_has_abort_if_latest_updated_time_changed(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PutArtifactsRequest_Options::PutArtifactsRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutArtifactsRequest.Options)
}
PutArtifactsRequest_Options::PutArtifactsRequest_Options(const PutArtifactsRequest_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutArtifactsRequest_Options* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.abort_if_latest_updated_time_changed_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.abort_if_latest_updated_time_changed_ = from._impl_.abort_if_latest_updated_time_changed_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutArtifactsRequest.Options)
}

inline void PutArtifactsRequest_Options::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.abort_if_latest_updated_time_changed_){false}
  };
}

PutArtifactsRequest_Options::~PutArtifactsRequest_Options() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutArtifactsRequest.Options)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutArtifactsRequest_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutArtifactsRequest_Options::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutArtifactsRequest_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutArtifactsRequest.Options)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.abort_if_latest_updated_time_changed_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutArtifactsRequest_Options::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool abort_if_latest_updated_time_changed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_abort_if_latest_updated_time_changed(&has_bits);
          _impl_.abort_if_latest_updated_time_changed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutArtifactsRequest_Options::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutArtifactsRequest.Options)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool abort_if_latest_updated_time_changed = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_abort_if_latest_updated_time_changed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutArtifactsRequest.Options)
  return target;
}

size_t PutArtifactsRequest_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutArtifactsRequest.Options)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool abort_if_latest_updated_time_changed = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutArtifactsRequest_Options::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutArtifactsRequest_Options::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutArtifactsRequest_Options::GetClassData() const { return &_class_data_; }


void PutArtifactsRequest_Options::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutArtifactsRequest_Options*>(&to_msg);
  auto& from = static_cast<const PutArtifactsRequest_Options&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutArtifactsRequest.Options)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_abort_if_latest_updated_time_changed()) {
    _this->_internal_set_abort_if_latest_updated_time_changed(from._internal_abort_if_latest_updated_time_changed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutArtifactsRequest_Options::CopyFrom(const PutArtifactsRequest_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutArtifactsRequest.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutArtifactsRequest_Options::IsInitialized() const {
  return true;
}

void PutArtifactsRequest_Options::InternalSwap(PutArtifactsRequest_Options* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.abort_if_latest_updated_time_changed_, other->_impl_.abort_if_latest_updated_time_changed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutArtifactsRequest_Options::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[5]);
}

// ===================================================================

class PutArtifactsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutArtifactsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::PutArtifactsRequest_Options& options(const PutArtifactsRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutArtifactsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const PutArtifactsRequest* msg);
  static void set_has_update_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ml_metadata::PutArtifactsRequest_Options&
PutArtifactsRequest::_Internal::options(const PutArtifactsRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
PutArtifactsRequest::_Internal::transaction_options(const PutArtifactsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
PutArtifactsRequest::_Internal::update_mask(const PutArtifactsRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void PutArtifactsRequest::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
void PutArtifactsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void PutArtifactsRequest::clear_update_mask() {
  if (_impl_.update_mask_ != nullptr) _impl_.update_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PutArtifactsRequest::PutArtifactsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutArtifactsRequest)
}
PutArtifactsRequest::PutArtifactsRequest(const PutArtifactsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutArtifactsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::PutArtifactsRequest_Options(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutArtifactsRequest)
}

inline void PutArtifactsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
  };
}

PutArtifactsRequest::~PutArtifactsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutArtifactsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutArtifactsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void PutArtifactsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutArtifactsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutArtifactsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.update_mask_ != nullptr);
      _impl_.update_mask_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutArtifactsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.PutArtifactsRequest.Options options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.FieldMask update_mask = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutArtifactsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutArtifactsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.PutArtifactsRequest.Options options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.FieldMask update_mask = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutArtifactsRequest)
  return target;
}

size_t PutArtifactsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutArtifactsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.PutArtifactsRequest.Options options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional .google.protobuf.FieldMask update_mask = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.update_mask_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutArtifactsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutArtifactsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutArtifactsRequest::GetClassData() const { return &_class_data_; }


void PutArtifactsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutArtifactsRequest*>(&to_msg);
  auto& from = static_cast<const PutArtifactsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutArtifactsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::PutArtifactsRequest_Options::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
          from._internal_update_mask());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutArtifactsRequest::CopyFrom(const PutArtifactsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutArtifactsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutArtifactsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutArtifactsRequest::InternalSwap(PutArtifactsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutArtifactsRequest, _impl_.update_mask_)
      + sizeof(PutArtifactsRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(PutArtifactsRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutArtifactsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[6]);
}

// ===================================================================

class PutArtifactsResponse::_Internal {
 public:
};

PutArtifactsResponse::PutArtifactsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutArtifactsResponse)
}
PutArtifactsResponse::PutArtifactsResponse(const PutArtifactsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutArtifactsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_ids_){from._impl_.artifact_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutArtifactsResponse)
}

inline void PutArtifactsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutArtifactsResponse::~PutArtifactsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutArtifactsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutArtifactsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_ids_.~RepeatedField();
}

void PutArtifactsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutArtifactsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutArtifactsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutArtifactsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 artifact_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_artifact_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutArtifactsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutArtifactsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  for (int i = 0, n = this->_internal_artifact_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_artifact_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutArtifactsResponse)
  return target;
}

size_t PutArtifactsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutArtifactsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_artifact_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutArtifactsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutArtifactsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutArtifactsResponse::GetClassData() const { return &_class_data_; }


void PutArtifactsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutArtifactsResponse*>(&to_msg);
  auto& from = static_cast<const PutArtifactsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutArtifactsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_ids_.MergeFrom(from._impl_.artifact_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutArtifactsResponse::CopyFrom(const PutArtifactsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutArtifactsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutArtifactsResponse::IsInitialized() const {
  return true;
}

void PutArtifactsResponse::InternalSwap(PutArtifactsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_ids_.InternalSwap(&other->_impl_.artifact_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutArtifactsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[7]);
}

// ===================================================================

class PutArtifactTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutArtifactTypeRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ArtifactType& artifact_type(const PutArtifactTypeRequest* msg);
  static void set_has_artifact_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_can_add_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_can_omit_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_can_delete_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_all_fields_match(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutArtifactTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ArtifactType&
PutArtifactTypeRequest::_Internal::artifact_type(const PutArtifactTypeRequest* msg) {
  return *msg->_impl_.artifact_type_;
}
const ::ml_metadata::TransactionOptions&
PutArtifactTypeRequest::_Internal::transaction_options(const PutArtifactTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutArtifactTypeRequest::clear_artifact_type() {
  if (_impl_.artifact_type_ != nullptr) _impl_.artifact_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutArtifactTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutArtifactTypeRequest::PutArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutArtifactTypeRequest)
}
PutArtifactTypeRequest::PutArtifactTypeRequest(const PutArtifactTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutArtifactTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){}
    , decltype(_impl_.can_omit_fields_){}
    , decltype(_impl_.can_delete_fields_){}
    , decltype(_impl_.all_fields_match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_artifact_type()) {
    _this->_impl_.artifact_type_ = new ::ml_metadata::ArtifactType(*from._impl_.artifact_type_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  ::memcpy(&_impl_.can_add_fields_, &from._impl_.can_add_fields_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.all_fields_match_) -
    reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.all_fields_match_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutArtifactTypeRequest)
}

inline void PutArtifactTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){false}
    , decltype(_impl_.can_omit_fields_){false}
    , decltype(_impl_.can_delete_fields_){false}
    , decltype(_impl_.all_fields_match_){true}
  };
}

PutArtifactTypeRequest::~PutArtifactTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutArtifactTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutArtifactTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.artifact_type_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutArtifactTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutArtifactTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutArtifactTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.artifact_type_ != nullptr);
      _impl_.artifact_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  ::memset(&_impl_.can_add_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.can_delete_fields_) -
      reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.can_delete_fields_));
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutArtifactTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ArtifactType artifact_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_add_fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_can_add_fields(&has_bits);
          _impl_.can_add_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_delete_fields = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_can_delete_fields(&has_bits);
          _impl_.can_delete_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool all_fields_match = 4 [default = true, deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_all_fields_match(&has_bits);
          _impl_.all_fields_match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_omit_fields = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_can_omit_fields(&has_bits);
          _impl_.can_omit_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutArtifactTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutArtifactTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ArtifactType artifact_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::artifact_type(this),
        _Internal::artifact_type(this).GetCachedSize(), target, stream);
  }

  // optional bool can_add_fields = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_can_add_fields(), target);
  }

  // optional bool can_delete_fields = 3 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_can_delete_fields(), target);
  }

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_all_fields_match(), target);
  }

  // optional bool can_omit_fields = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_can_omit_fields(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutArtifactTypeRequest)
  return target;
}

size_t PutArtifactTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutArtifactTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .ml_metadata.ArtifactType artifact_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.artifact_type_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional bool can_add_fields = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool can_omit_fields = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool can_delete_fields = 3 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool all_fields_match = 4 [default = true, deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutArtifactTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutArtifactTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutArtifactTypeRequest::GetClassData() const { return &_class_data_; }


void PutArtifactTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutArtifactTypeRequest*>(&to_msg);
  auto& from = static_cast<const PutArtifactTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutArtifactTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_artifact_type()->::ml_metadata::ArtifactType::MergeFrom(
          from._internal_artifact_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.can_add_fields_ = from._impl_.can_add_fields_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.can_omit_fields_ = from._impl_.can_omit_fields_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.can_delete_fields_ = from._impl_.can_delete_fields_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.all_fields_match_ = from._impl_.all_fields_match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutArtifactTypeRequest::CopyFrom(const PutArtifactTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutArtifactTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutArtifactTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutArtifactTypeRequest::InternalSwap(PutArtifactTypeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutArtifactTypeRequest, _impl_.can_delete_fields_)
      + sizeof(PutArtifactTypeRequest::_impl_.can_delete_fields_)
      - PROTOBUF_FIELD_OFFSET(PutArtifactTypeRequest, _impl_.artifact_type_)>(
          reinterpret_cast<char*>(&_impl_.artifact_type_),
          reinterpret_cast<char*>(&other->_impl_.artifact_type_));
  swap(_impl_.all_fields_match_, other->_impl_.all_fields_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutArtifactTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[8]);
}

// ===================================================================

class PutArtifactTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PutArtifactTypeResponse>()._impl_._has_bits_);
  static void set_has_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PutArtifactTypeResponse::PutArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutArtifactTypeResponse)
}
PutArtifactTypeResponse::PutArtifactTypeResponse(const PutArtifactTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutArtifactTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_id_ = from._impl_.type_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutArtifactTypeResponse)
}

inline void PutArtifactTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){int64_t{0}}
  };
}

PutArtifactTypeResponse::~PutArtifactTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutArtifactTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutArtifactTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutArtifactTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutArtifactTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutArtifactTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutArtifactTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_type_id(&has_bits);
          _impl_.type_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutArtifactTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutArtifactTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutArtifactTypeResponse)
  return target;
}

size_t PutArtifactTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutArtifactTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 type_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutArtifactTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutArtifactTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutArtifactTypeResponse::GetClassData() const { return &_class_data_; }


void PutArtifactTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutArtifactTypeResponse*>(&to_msg);
  auto& from = static_cast<const PutArtifactTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutArtifactTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type_id()) {
    _this->_internal_set_type_id(from._internal_type_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutArtifactTypeResponse::CopyFrom(const PutArtifactTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutArtifactTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutArtifactTypeResponse::IsInitialized() const {
  return true;
}

void PutArtifactTypeResponse::InternalSwap(PutArtifactTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_id_, other->_impl_.type_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutArtifactTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[9]);
}

// ===================================================================

class PutExecutionsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutExecutionsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const PutExecutionsRequest* msg);
  static void set_has_update_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::TransactionOptions&
PutExecutionsRequest::_Internal::transaction_options(const PutExecutionsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
PutExecutionsRequest::_Internal::update_mask(const PutExecutionsRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void PutExecutionsRequest::clear_executions() {
  _impl_.executions_.Clear();
}
void PutExecutionsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutExecutionsRequest::clear_update_mask() {
  if (_impl_.update_mask_ != nullptr) _impl_.update_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutExecutionsRequest::PutExecutionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionsRequest)
}
PutExecutionsRequest::PutExecutionsRequest(const PutExecutionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){from._impl_.executions_}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionsRequest)
}

inline void PutExecutionsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
  };
}

PutExecutionsRequest::~PutExecutionsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void PutExecutionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.update_mask_ != nullptr);
      _impl_.update_mask_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.FieldMask update_mask = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.FieldMask update_mask = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionsRequest)
  return target;
}

size_t PutExecutionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional .google.protobuf.FieldMask update_mask = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.update_mask_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionsRequest::GetClassData() const { return &_class_data_; }


void PutExecutionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionsRequest*>(&to_msg);
  auto& from = static_cast<const PutExecutionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
          from._internal_update_mask());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionsRequest::CopyFrom(const PutExecutionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutExecutionsRequest::InternalSwap(PutExecutionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutExecutionsRequest, _impl_.update_mask_)
      + sizeof(PutExecutionsRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(PutExecutionsRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[10]);
}

// ===================================================================

class PutExecutionsResponse::_Internal {
 public:
};

PutExecutionsResponse::PutExecutionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionsResponse)
}
PutExecutionsResponse::PutExecutionsResponse(const PutExecutionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_ids_){from._impl_.execution_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionsResponse)
}

inline void PutExecutionsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutExecutionsResponse::~PutExecutionsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_ids_.~RepeatedField();
}

void PutExecutionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 execution_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_execution_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_execution_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  for (int i = 0, n = this->_internal_execution_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_execution_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionsResponse)
  return target;
}

size_t PutExecutionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.execution_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_execution_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionsResponse::GetClassData() const { return &_class_data_; }


void PutExecutionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionsResponse*>(&to_msg);
  auto& from = static_cast<const PutExecutionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_ids_.MergeFrom(from._impl_.execution_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionsResponse::CopyFrom(const PutExecutionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionsResponse::IsInitialized() const {
  return true;
}

void PutExecutionsResponse::InternalSwap(PutExecutionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_ids_.InternalSwap(&other->_impl_.execution_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[11]);
}

// ===================================================================

class PutExecutionTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionTypeRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ExecutionType& execution_type(const PutExecutionTypeRequest* msg);
  static void set_has_execution_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_can_add_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_can_omit_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_can_delete_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_all_fields_match(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutExecutionTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ExecutionType&
PutExecutionTypeRequest::_Internal::execution_type(const PutExecutionTypeRequest* msg) {
  return *msg->_impl_.execution_type_;
}
const ::ml_metadata::TransactionOptions&
PutExecutionTypeRequest::_Internal::transaction_options(const PutExecutionTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutExecutionTypeRequest::clear_execution_type() {
  if (_impl_.execution_type_ != nullptr) _impl_.execution_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutExecutionTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutExecutionTypeRequest::PutExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionTypeRequest)
}
PutExecutionTypeRequest::PutExecutionTypeRequest(const PutExecutionTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){}
    , decltype(_impl_.can_omit_fields_){}
    , decltype(_impl_.can_delete_fields_){}
    , decltype(_impl_.all_fields_match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_execution_type()) {
    _this->_impl_.execution_type_ = new ::ml_metadata::ExecutionType(*from._impl_.execution_type_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  ::memcpy(&_impl_.can_add_fields_, &from._impl_.can_add_fields_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.all_fields_match_) -
    reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.all_fields_match_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionTypeRequest)
}

inline void PutExecutionTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){false}
    , decltype(_impl_.can_omit_fields_){false}
    , decltype(_impl_.can_delete_fields_){false}
    , decltype(_impl_.all_fields_match_){true}
  };
}

PutExecutionTypeRequest::~PutExecutionTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.execution_type_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutExecutionTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.execution_type_ != nullptr);
      _impl_.execution_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  ::memset(&_impl_.can_add_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.can_delete_fields_) -
      reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.can_delete_fields_));
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ExecutionType execution_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_add_fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_can_add_fields(&has_bits);
          _impl_.can_add_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_delete_fields = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_can_delete_fields(&has_bits);
          _impl_.can_delete_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool all_fields_match = 4 [default = true, deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_all_fields_match(&has_bits);
          _impl_.all_fields_match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_omit_fields = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_can_omit_fields(&has_bits);
          _impl_.can_omit_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ExecutionType execution_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::execution_type(this),
        _Internal::execution_type(this).GetCachedSize(), target, stream);
  }

  // optional bool can_add_fields = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_can_add_fields(), target);
  }

  // optional bool can_delete_fields = 3 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_can_delete_fields(), target);
  }

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_all_fields_match(), target);
  }

  // optional bool can_omit_fields = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_can_omit_fields(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionTypeRequest)
  return target;
}

size_t PutExecutionTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .ml_metadata.ExecutionType execution_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.execution_type_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional bool can_add_fields = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool can_omit_fields = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool can_delete_fields = 3 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool all_fields_match = 4 [default = true, deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionTypeRequest::GetClassData() const { return &_class_data_; }


void PutExecutionTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionTypeRequest*>(&to_msg);
  auto& from = static_cast<const PutExecutionTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_execution_type()->::ml_metadata::ExecutionType::MergeFrom(
          from._internal_execution_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.can_add_fields_ = from._impl_.can_add_fields_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.can_omit_fields_ = from._impl_.can_omit_fields_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.can_delete_fields_ = from._impl_.can_delete_fields_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.all_fields_match_ = from._impl_.all_fields_match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionTypeRequest::CopyFrom(const PutExecutionTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutExecutionTypeRequest::InternalSwap(PutExecutionTypeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutExecutionTypeRequest, _impl_.can_delete_fields_)
      + sizeof(PutExecutionTypeRequest::_impl_.can_delete_fields_)
      - PROTOBUF_FIELD_OFFSET(PutExecutionTypeRequest, _impl_.execution_type_)>(
          reinterpret_cast<char*>(&_impl_.execution_type_),
          reinterpret_cast<char*>(&other->_impl_.execution_type_));
  swap(_impl_.all_fields_match_, other->_impl_.all_fields_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[12]);
}

// ===================================================================

class PutExecutionTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionTypeResponse>()._impl_._has_bits_);
  static void set_has_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PutExecutionTypeResponse::PutExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionTypeResponse)
}
PutExecutionTypeResponse::PutExecutionTypeResponse(const PutExecutionTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_id_ = from._impl_.type_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionTypeResponse)
}

inline void PutExecutionTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){int64_t{0}}
  };
}

PutExecutionTypeResponse::~PutExecutionTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutExecutionTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_type_id(&has_bits);
          _impl_.type_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionTypeResponse)
  return target;
}

size_t PutExecutionTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 type_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionTypeResponse::GetClassData() const { return &_class_data_; }


void PutExecutionTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionTypeResponse*>(&to_msg);
  auto& from = static_cast<const PutExecutionTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type_id()) {
    _this->_internal_set_type_id(from._internal_type_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionTypeResponse::CopyFrom(const PutExecutionTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionTypeResponse::IsInitialized() const {
  return true;
}

void PutExecutionTypeResponse::InternalSwap(PutExecutionTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_id_, other->_impl_.type_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[13]);
}

// ===================================================================

class PutEventsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutEventsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutEventsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
PutEventsRequest::_Internal::transaction_options(const PutEventsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutEventsRequest::clear_events() {
  _impl_.events_.Clear();
}
void PutEventsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PutEventsRequest::PutEventsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutEventsRequest)
}
PutEventsRequest::PutEventsRequest(const PutEventsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutEventsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){from._impl_.events_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutEventsRequest)
}

inline void PutEventsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.events_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

PutEventsRequest::~PutEventsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutEventsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutEventsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutEventsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutEventsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutEventsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutEventsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Event events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutEventsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutEventsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutEventsRequest)
  return target;
}

size_t PutEventsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutEventsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_impl_.events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutEventsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutEventsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutEventsRequest::GetClassData() const { return &_class_data_; }


void PutEventsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutEventsRequest*>(&to_msg);
  auto& from = static_cast<const PutEventsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutEventsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.events_.MergeFrom(from._impl_.events_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutEventsRequest::CopyFrom(const PutEventsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutEventsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutEventsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutEventsRequest::InternalSwap(PutEventsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutEventsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[14]);
}

// ===================================================================

class PutEventsResponse::_Internal {
 public:
};

PutEventsResponse::PutEventsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutEventsResponse)
}
PutEventsResponse::PutEventsResponse(const PutEventsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PutEventsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutEventsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutEventsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutEventsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PutEventsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[15]);
}

// ===================================================================

class PutExecutionRequest_ArtifactAndEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionRequest_ArtifactAndEvent>()._impl_._has_bits_);
  static const ::ml_metadata::Artifact& artifact(const PutExecutionRequest_ArtifactAndEvent* msg);
  static void set_has_artifact(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::Event& event(const PutExecutionRequest_ArtifactAndEvent* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::Artifact&
PutExecutionRequest_ArtifactAndEvent::_Internal::artifact(const PutExecutionRequest_ArtifactAndEvent* msg) {
  return *msg->_impl_.artifact_;
}
const ::ml_metadata::Event&
PutExecutionRequest_ArtifactAndEvent::_Internal::event(const PutExecutionRequest_ArtifactAndEvent* msg) {
  return *msg->_impl_.event_;
}
void PutExecutionRequest_ArtifactAndEvent::clear_artifact() {
  if (_impl_.artifact_ != nullptr) _impl_.artifact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutExecutionRequest_ArtifactAndEvent::clear_event() {
  if (_impl_.event_ != nullptr) _impl_.event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutExecutionRequest_ArtifactAndEvent::PutExecutionRequest_ArtifactAndEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
}
PutExecutionRequest_ArtifactAndEvent::PutExecutionRequest_ArtifactAndEvent(const PutExecutionRequest_ArtifactAndEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionRequest_ArtifactAndEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}
    , decltype(_impl_.event_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_artifact()) {
    _this->_impl_.artifact_ = new ::ml_metadata::Artifact(*from._impl_.artifact_);
  }
  if (from._internal_has_event()) {
    _this->_impl_.event_ = new ::ml_metadata::Event(*from._impl_.event_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
}

inline void PutExecutionRequest_ArtifactAndEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}
    , decltype(_impl_.event_){nullptr}
  };
}

PutExecutionRequest_ArtifactAndEvent::~PutExecutionRequest_ArtifactAndEvent() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionRequest_ArtifactAndEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.artifact_;
  if (this != internal_default_instance()) delete _impl_.event_;
}

void PutExecutionRequest_ArtifactAndEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionRequest_ArtifactAndEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.artifact_ != nullptr);
      _impl_.artifact_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.event_ != nullptr);
      _impl_.event_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionRequest_ArtifactAndEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Artifact artifact = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.Event event = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionRequest_ArtifactAndEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Artifact artifact = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::artifact(this),
        _Internal::artifact(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.Event event = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  return target;
}

size_t PutExecutionRequest_ArtifactAndEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.Artifact artifact = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.artifact_);
    }

    // optional .ml_metadata.Event event = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.event_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionRequest_ArtifactAndEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionRequest_ArtifactAndEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionRequest_ArtifactAndEvent::GetClassData() const { return &_class_data_; }


void PutExecutionRequest_ArtifactAndEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionRequest_ArtifactAndEvent*>(&to_msg);
  auto& from = static_cast<const PutExecutionRequest_ArtifactAndEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_artifact()->::ml_metadata::Artifact::MergeFrom(
          from._internal_artifact());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_event()->::ml_metadata::Event::MergeFrom(
          from._internal_event());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionRequest_ArtifactAndEvent::CopyFrom(const PutExecutionRequest_ArtifactAndEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionRequest.ArtifactAndEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionRequest_ArtifactAndEvent::IsInitialized() const {
  return true;
}

void PutExecutionRequest_ArtifactAndEvent::InternalSwap(PutExecutionRequest_ArtifactAndEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutExecutionRequest_ArtifactAndEvent, _impl_.event_)
      + sizeof(PutExecutionRequest_ArtifactAndEvent::_impl_.event_)
      - PROTOBUF_FIELD_OFFSET(PutExecutionRequest_ArtifactAndEvent, _impl_.artifact_)>(
          reinterpret_cast<char*>(&_impl_.artifact_),
          reinterpret_cast<char*>(&other->_impl_.artifact_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionRequest_ArtifactAndEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[16]);
}

// ===================================================================

class PutExecutionRequest_Options::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionRequest_Options>()._impl_._has_bits_);
  static void set_has_reuse_context_if_already_exist(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_reuse_artifact_if_already_exist_by_external_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_force_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_force_reuse_context(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

PutExecutionRequest_Options::PutExecutionRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionRequest.Options)
}
PutExecutionRequest_Options::PutExecutionRequest_Options(const PutExecutionRequest_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionRequest_Options* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reuse_context_if_already_exist_){}
    , decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_){}
    , decltype(_impl_.force_update_time_){}
    , decltype(_impl_.force_reuse_context_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.reuse_context_if_already_exist_, &from._impl_.reuse_context_if_already_exist_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.force_reuse_context_) -
    reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_)) + sizeof(_impl_.force_reuse_context_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionRequest.Options)
}

inline void PutExecutionRequest_Options::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reuse_context_if_already_exist_){false}
    , decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_){false}
    , decltype(_impl_.force_update_time_){false}
    , decltype(_impl_.force_reuse_context_){false}
  };
}

PutExecutionRequest_Options::~PutExecutionRequest_Options() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionRequest.Options)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionRequest_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutExecutionRequest_Options::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionRequest_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionRequest.Options)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.reuse_context_if_already_exist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.force_reuse_context_) -
      reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_)) + sizeof(_impl_.force_reuse_context_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionRequest_Options::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool reuse_context_if_already_exist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_reuse_context_if_already_exist(&has_bits);
          _impl_.reuse_context_if_already_exist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_reuse_artifact_if_already_exist_by_external_id(&has_bits);
          _impl_.reuse_artifact_if_already_exist_by_external_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool force_update_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_force_update_time(&has_bits);
          _impl_.force_update_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool force_reuse_context = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_force_reuse_context(&has_bits);
          _impl_.force_reuse_context_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionRequest_Options::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionRequest.Options)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool reuse_context_if_already_exist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_reuse_context_if_already_exist(), target);
  }

  // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_reuse_artifact_if_already_exist_by_external_id(), target);
  }

  // optional bool force_update_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_force_update_time(), target);
  }

  // optional bool force_reuse_context = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_force_reuse_context(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionRequest.Options)
  return target;
}

size_t PutExecutionRequest_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionRequest.Options)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional bool reuse_context_if_already_exist = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool force_update_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool force_reuse_context = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionRequest_Options::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionRequest_Options::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionRequest_Options::GetClassData() const { return &_class_data_; }


void PutExecutionRequest_Options::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionRequest_Options*>(&to_msg);
  auto& from = static_cast<const PutExecutionRequest_Options&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionRequest.Options)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.reuse_context_if_already_exist_ = from._impl_.reuse_context_if_already_exist_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.reuse_artifact_if_already_exist_by_external_id_ = from._impl_.reuse_artifact_if_already_exist_by_external_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.force_update_time_ = from._impl_.force_update_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.force_reuse_context_ = from._impl_.force_reuse_context_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionRequest_Options::CopyFrom(const PutExecutionRequest_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionRequest.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionRequest_Options::IsInitialized() const {
  return true;
}

void PutExecutionRequest_Options::InternalSwap(PutExecutionRequest_Options* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutExecutionRequest_Options, _impl_.force_reuse_context_)
      + sizeof(PutExecutionRequest_Options::_impl_.force_reuse_context_)
      - PROTOBUF_FIELD_OFFSET(PutExecutionRequest_Options, _impl_.reuse_context_if_already_exist_)>(
          reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_),
          reinterpret_cast<char*>(&other->_impl_.reuse_context_if_already_exist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionRequest_Options::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[17]);
}

// ===================================================================

class PutExecutionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionRequest>()._impl_._has_bits_);
  static const ::ml_metadata::Execution& execution(const PutExecutionRequest* msg);
  static void set_has_execution(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::PutExecutionRequest_Options& options(const PutExecutionRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutExecutionRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ml_metadata::Execution&
PutExecutionRequest::_Internal::execution(const PutExecutionRequest* msg) {
  return *msg->_impl_.execution_;
}
const ::ml_metadata::PutExecutionRequest_Options&
PutExecutionRequest::_Internal::options(const PutExecutionRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
PutExecutionRequest::_Internal::transaction_options(const PutExecutionRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutExecutionRequest::clear_execution() {
  if (_impl_.execution_ != nullptr) _impl_.execution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutExecutionRequest::clear_contexts() {
  _impl_.contexts_.Clear();
}
void PutExecutionRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
PutExecutionRequest::PutExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionRequest)
}
PutExecutionRequest::PutExecutionRequest(const PutExecutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_event_pairs_){from._impl_.artifact_event_pairs_}
    , decltype(_impl_.contexts_){from._impl_.contexts_}
    , decltype(_impl_.execution_){nullptr}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_execution()) {
    _this->_impl_.execution_ = new ::ml_metadata::Execution(*from._impl_.execution_);
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::PutExecutionRequest_Options(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionRequest)
}

inline void PutExecutionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_event_pairs_){arena}
    , decltype(_impl_.contexts_){arena}
    , decltype(_impl_.execution_){nullptr}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

PutExecutionRequest::~PutExecutionRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_event_pairs_.~RepeatedPtrField();
  _impl_.contexts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.execution_;
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutExecutionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_event_pairs_.Clear();
  _impl_.contexts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.execution_ != nullptr);
      _impl_.execution_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Execution execution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.PutExecutionRequest.ArtifactAndEvent artifact_event_pairs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_event_pairs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.Context contexts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.PutExecutionRequest.Options options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Execution execution = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::execution(this),
        _Internal::execution(this).GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.PutExecutionRequest.ArtifactAndEvent artifact_event_pairs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_event_pairs_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_event_pairs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.Context contexts = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.PutExecutionRequest.Options options = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionRequest)
  return target;
}

size_t PutExecutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.PutExecutionRequest.ArtifactAndEvent artifact_event_pairs = 2;
  total_size += 1UL * this->_internal_artifact_event_pairs_size();
  for (const auto& msg : this->_impl_.artifact_event_pairs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.Context contexts = 3;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.Execution execution = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.execution_);
    }

    // optional .ml_metadata.PutExecutionRequest.Options options = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionRequest::GetClassData() const { return &_class_data_; }


void PutExecutionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionRequest*>(&to_msg);
  auto& from = static_cast<const PutExecutionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_event_pairs_.MergeFrom(from._impl_.artifact_event_pairs_);
  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_execution()->::ml_metadata::Execution::MergeFrom(
          from._internal_execution());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_options()->::ml_metadata::PutExecutionRequest_Options::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionRequest::CopyFrom(const PutExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutExecutionRequest::InternalSwap(PutExecutionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifact_event_pairs_.InternalSwap(&other->_impl_.artifact_event_pairs_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutExecutionRequest, _impl_.transaction_options_)
      + sizeof(PutExecutionRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(PutExecutionRequest, _impl_.execution_)>(
          reinterpret_cast<char*>(&_impl_.execution_),
          reinterpret_cast<char*>(&other->_impl_.execution_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[18]);
}

// ===================================================================

class PutExecutionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PutExecutionResponse>()._impl_._has_bits_);
  static void set_has_execution_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PutExecutionResponse::PutExecutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutExecutionResponse)
}
PutExecutionResponse::PutExecutionResponse(const PutExecutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutExecutionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){from._impl_.artifact_ids_}
    , decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , decltype(_impl_.execution_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.execution_id_ = from._impl_.execution_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutExecutionResponse)
}

inline void PutExecutionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){arena}
    , decltype(_impl_.context_ids_){arena}
    , decltype(_impl_.execution_id_){int64_t{0}}
  };
}

PutExecutionResponse::~PutExecutionResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutExecutionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutExecutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_ids_.~RepeatedField();
  _impl_.context_ids_.~RepeatedField();
}

void PutExecutionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutExecutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutExecutionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_ids_.Clear();
  _impl_.context_ids_.Clear();
  _impl_.execution_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutExecutionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 execution_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_execution_id(&has_bits);
          _impl_.execution_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 artifact_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_artifact_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 context_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutExecutionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutExecutionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 execution_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_execution_id(), target);
  }

  // repeated int64 artifact_ids = 2;
  for (int i = 0, n = this->_internal_artifact_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_artifact_ids(i), target);
  }

  // repeated int64 context_ids = 3;
  for (int i = 0, n = this->_internal_context_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_context_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutExecutionResponse)
  return target;
}

size_t PutExecutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutExecutionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_artifact_ids_size());
    total_size += data_size;
  }

  // repeated int64 context_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_context_ids_size());
    total_size += data_size;
  }

  // optional int64 execution_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_execution_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutExecutionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutExecutionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutExecutionResponse::GetClassData() const { return &_class_data_; }


void PutExecutionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutExecutionResponse*>(&to_msg);
  auto& from = static_cast<const PutExecutionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutExecutionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_ids_.MergeFrom(from._impl_.artifact_ids_);
  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  if (from._internal_has_execution_id()) {
    _this->_internal_set_execution_id(from._internal_execution_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutExecutionResponse::CopyFrom(const PutExecutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutExecutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutExecutionResponse::IsInitialized() const {
  return true;
}

void PutExecutionResponse::InternalSwap(PutExecutionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifact_ids_.InternalSwap(&other->_impl_.artifact_ids_);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
  swap(_impl_.execution_id_, other->_impl_.execution_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutExecutionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[19]);
}

// ===================================================================

class PutLineageSubgraphRequest_EventEdge::_Internal {
 public:
  using HasBits = decltype(std::declval<PutLineageSubgraphRequest_EventEdge>()._impl_._has_bits_);
  static void set_has_execution_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_artifact_index(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::Event& event(const PutLineageSubgraphRequest_EventEdge* msg);
  static void set_has_event(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::Event&
PutLineageSubgraphRequest_EventEdge::_Internal::event(const PutLineageSubgraphRequest_EventEdge* msg) {
  return *msg->_impl_.event_;
}
void PutLineageSubgraphRequest_EventEdge::clear_event() {
  if (_impl_.event_ != nullptr) _impl_.event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PutLineageSubgraphRequest_EventEdge::PutLineageSubgraphRequest_EventEdge(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutLineageSubgraphRequest.EventEdge)
}
PutLineageSubgraphRequest_EventEdge::PutLineageSubgraphRequest_EventEdge(const PutLineageSubgraphRequest_EventEdge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutLineageSubgraphRequest_EventEdge* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_){nullptr}
    , decltype(_impl_.execution_index_){}
    , decltype(_impl_.artifact_index_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_event()) {
    _this->_impl_.event_ = new ::ml_metadata::Event(*from._impl_.event_);
  }
  ::memcpy(&_impl_.execution_index_, &from._impl_.execution_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.artifact_index_) -
    reinterpret_cast<char*>(&_impl_.execution_index_)) + sizeof(_impl_.artifact_index_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutLineageSubgraphRequest.EventEdge)
}

inline void PutLineageSubgraphRequest_EventEdge::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.event_){nullptr}
    , decltype(_impl_.execution_index_){0}
    , decltype(_impl_.artifact_index_){0}
  };
}

PutLineageSubgraphRequest_EventEdge::~PutLineageSubgraphRequest_EventEdge() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutLineageSubgraphRequest_EventEdge::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.event_;
}

void PutLineageSubgraphRequest_EventEdge::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutLineageSubgraphRequest_EventEdge::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.event_ != nullptr);
    _impl_.event_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.execution_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.artifact_index_) -
        reinterpret_cast<char*>(&_impl_.execution_index_)) + sizeof(_impl_.artifact_index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutLineageSubgraphRequest_EventEdge::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 execution_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_execution_index(&has_bits);
          _impl_.execution_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 artifact_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_artifact_index(&has_bits);
          _impl_.artifact_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.Event event = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutLineageSubgraphRequest_EventEdge::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 execution_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_execution_index(), target);
  }

  // optional int32 artifact_index = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_artifact_index(), target);
  }

  // optional .ml_metadata.Event event = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::event(this),
        _Internal::event(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  return target;
}

size_t PutLineageSubgraphRequest_EventEdge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.Event event = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.event_);
    }

    // optional int32 execution_index = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_execution_index());
    }

    // optional int32 artifact_index = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_artifact_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutLineageSubgraphRequest_EventEdge::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutLineageSubgraphRequest_EventEdge::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutLineageSubgraphRequest_EventEdge::GetClassData() const { return &_class_data_; }


void PutLineageSubgraphRequest_EventEdge::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutLineageSubgraphRequest_EventEdge*>(&to_msg);
  auto& from = static_cast<const PutLineageSubgraphRequest_EventEdge&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_event()->::ml_metadata::Event::MergeFrom(
          from._internal_event());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.execution_index_ = from._impl_.execution_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.artifact_index_ = from._impl_.artifact_index_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutLineageSubgraphRequest_EventEdge::CopyFrom(const PutLineageSubgraphRequest_EventEdge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutLineageSubgraphRequest.EventEdge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLineageSubgraphRequest_EventEdge::IsInitialized() const {
  return true;
}

void PutLineageSubgraphRequest_EventEdge::InternalSwap(PutLineageSubgraphRequest_EventEdge* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest_EventEdge, _impl_.artifact_index_)
      + sizeof(PutLineageSubgraphRequest_EventEdge::_impl_.artifact_index_)
      - PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest_EventEdge, _impl_.event_)>(
          reinterpret_cast<char*>(&_impl_.event_),
          reinterpret_cast<char*>(&other->_impl_.event_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutLineageSubgraphRequest_EventEdge::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[20]);
}

// ===================================================================

class PutLineageSubgraphRequest_Options::_Internal {
 public:
  using HasBits = decltype(std::declval<PutLineageSubgraphRequest_Options>()._impl_._has_bits_);
  static void set_has_reuse_context_if_already_exist(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_reuse_artifact_if_already_exist_by_external_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PutLineageSubgraphRequest_Options::PutLineageSubgraphRequest_Options(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutLineageSubgraphRequest.Options)
}
PutLineageSubgraphRequest_Options::PutLineageSubgraphRequest_Options(const PutLineageSubgraphRequest_Options& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutLineageSubgraphRequest_Options* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reuse_context_if_already_exist_){}
    , decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.reuse_context_if_already_exist_, &from._impl_.reuse_context_if_already_exist_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.reuse_artifact_if_already_exist_by_external_id_) -
    reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_)) + sizeof(_impl_.reuse_artifact_if_already_exist_by_external_id_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutLineageSubgraphRequest.Options)
}

inline void PutLineageSubgraphRequest_Options::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.reuse_context_if_already_exist_){false}
    , decltype(_impl_.reuse_artifact_if_already_exist_by_external_id_){false}
  };
}

PutLineageSubgraphRequest_Options::~PutLineageSubgraphRequest_Options() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutLineageSubgraphRequest.Options)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutLineageSubgraphRequest_Options::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutLineageSubgraphRequest_Options::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutLineageSubgraphRequest_Options::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutLineageSubgraphRequest.Options)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.reuse_context_if_already_exist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.reuse_artifact_if_already_exist_by_external_id_) -
      reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_)) + sizeof(_impl_.reuse_artifact_if_already_exist_by_external_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutLineageSubgraphRequest_Options::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bool reuse_context_if_already_exist = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_reuse_context_if_already_exist(&has_bits);
          _impl_.reuse_context_if_already_exist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_reuse_artifact_if_already_exist_by_external_id(&has_bits);
          _impl_.reuse_artifact_if_already_exist_by_external_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutLineageSubgraphRequest_Options::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutLineageSubgraphRequest.Options)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool reuse_context_if_already_exist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_reuse_context_if_already_exist(), target);
  }

  // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_reuse_artifact_if_already_exist_by_external_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutLineageSubgraphRequest.Options)
  return target;
}

size_t PutLineageSubgraphRequest_Options::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutLineageSubgraphRequest.Options)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool reuse_context_if_already_exist = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional bool reuse_artifact_if_already_exist_by_external_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutLineageSubgraphRequest_Options::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutLineageSubgraphRequest_Options::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutLineageSubgraphRequest_Options::GetClassData() const { return &_class_data_; }


void PutLineageSubgraphRequest_Options::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutLineageSubgraphRequest_Options*>(&to_msg);
  auto& from = static_cast<const PutLineageSubgraphRequest_Options&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutLineageSubgraphRequest.Options)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.reuse_context_if_already_exist_ = from._impl_.reuse_context_if_already_exist_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.reuse_artifact_if_already_exist_by_external_id_ = from._impl_.reuse_artifact_if_already_exist_by_external_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutLineageSubgraphRequest_Options::CopyFrom(const PutLineageSubgraphRequest_Options& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutLineageSubgraphRequest.Options)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLineageSubgraphRequest_Options::IsInitialized() const {
  return true;
}

void PutLineageSubgraphRequest_Options::InternalSwap(PutLineageSubgraphRequest_Options* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest_Options, _impl_.reuse_artifact_if_already_exist_by_external_id_)
      + sizeof(PutLineageSubgraphRequest_Options::_impl_.reuse_artifact_if_already_exist_by_external_id_)
      - PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest_Options, _impl_.reuse_context_if_already_exist_)>(
          reinterpret_cast<char*>(&_impl_.reuse_context_if_already_exist_),
          reinterpret_cast<char*>(&other->_impl_.reuse_context_if_already_exist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutLineageSubgraphRequest_Options::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[21]);
}

// ===================================================================

class PutLineageSubgraphRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutLineageSubgraphRequest>()._impl_._has_bits_);
  static const ::ml_metadata::PutLineageSubgraphRequest_Options& options(const PutLineageSubgraphRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutLineageSubgraphRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::PutLineageSubgraphRequest_Options&
PutLineageSubgraphRequest::_Internal::options(const PutLineageSubgraphRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
PutLineageSubgraphRequest::_Internal::transaction_options(const PutLineageSubgraphRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutLineageSubgraphRequest::clear_executions() {
  _impl_.executions_.Clear();
}
void PutLineageSubgraphRequest::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
void PutLineageSubgraphRequest::clear_contexts() {
  _impl_.contexts_.Clear();
}
void PutLineageSubgraphRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutLineageSubgraphRequest::PutLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutLineageSubgraphRequest)
}
PutLineageSubgraphRequest::PutLineageSubgraphRequest(const PutLineageSubgraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutLineageSubgraphRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){from._impl_.executions_}
    , decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.contexts_){from._impl_.contexts_}
    , decltype(_impl_.event_edges_){from._impl_.event_edges_}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::PutLineageSubgraphRequest_Options(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutLineageSubgraphRequest)
}

inline void PutLineageSubgraphRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){arena}
    , decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.contexts_){arena}
    , decltype(_impl_.event_edges_){arena}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

PutLineageSubgraphRequest::~PutLineageSubgraphRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutLineageSubgraphRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutLineageSubgraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.contexts_.~RepeatedPtrField();
  _impl_.event_edges_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutLineageSubgraphRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutLineageSubgraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutLineageSubgraphRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  _impl_.artifacts_.Clear();
  _impl_.contexts_.Clear();
  _impl_.event_edges_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutLineageSubgraphRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.Artifact artifacts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.Context contexts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.PutLineageSubgraphRequest.EventEdge event_edges = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.PutLineageSubgraphRequest.Options options = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutLineageSubgraphRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutLineageSubgraphRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.Artifact artifacts = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.Context contexts = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.PutLineageSubgraphRequest.EventEdge event_edges = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_edges_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_edges(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.PutLineageSubgraphRequest.Options options = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutLineageSubgraphRequest)
  return target;
}

size_t PutLineageSubgraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutLineageSubgraphRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.Artifact artifacts = 2;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.Context contexts = 3;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.PutLineageSubgraphRequest.EventEdge event_edges = 4;
  total_size += 1UL * this->_internal_event_edges_size();
  for (const auto& msg : this->_impl_.event_edges_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.PutLineageSubgraphRequest.Options options = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutLineageSubgraphRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutLineageSubgraphRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutLineageSubgraphRequest::GetClassData() const { return &_class_data_; }


void PutLineageSubgraphRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutLineageSubgraphRequest*>(&to_msg);
  auto& from = static_cast<const PutLineageSubgraphRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutLineageSubgraphRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_impl_.event_edges_.MergeFrom(from._impl_.event_edges_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::PutLineageSubgraphRequest_Options::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutLineageSubgraphRequest::CopyFrom(const PutLineageSubgraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutLineageSubgraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLineageSubgraphRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutLineageSubgraphRequest::InternalSwap(PutLineageSubgraphRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
  _impl_.event_edges_.InternalSwap(&other->_impl_.event_edges_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest, _impl_.transaction_options_)
      + sizeof(PutLineageSubgraphRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(PutLineageSubgraphRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutLineageSubgraphRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[22]);
}

// ===================================================================

class PutLineageSubgraphResponse::_Internal {
 public:
};

PutLineageSubgraphResponse::PutLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutLineageSubgraphResponse)
}
PutLineageSubgraphResponse::PutLineageSubgraphResponse(const PutLineageSubgraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutLineageSubgraphResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_ids_){from._impl_.execution_ids_}
    , /*decltype(_impl_._execution_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.artifact_ids_){from._impl_.artifact_ids_}
    , /*decltype(_impl_._artifact_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutLineageSubgraphResponse)
}

inline void PutLineageSubgraphResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_ids_){arena}
    , /*decltype(_impl_._execution_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.artifact_ids_){arena}
    , /*decltype(_impl_._artifact_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.context_ids_){arena}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutLineageSubgraphResponse::~PutLineageSubgraphResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutLineageSubgraphResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutLineageSubgraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_ids_.~RepeatedField();
  _impl_.artifact_ids_.~RepeatedField();
  _impl_.context_ids_.~RepeatedField();
}

void PutLineageSubgraphResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutLineageSubgraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutLineageSubgraphResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_ids_.Clear();
  _impl_.artifact_ids_.Clear();
  _impl_.context_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutLineageSubgraphResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 execution_ids = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_execution_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_execution_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 artifact_ids = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_artifact_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 context_ids = 3 [packed = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutLineageSubgraphResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutLineageSubgraphResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1 [packed = true];
  {
    int byte_size = _impl_._execution_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_execution_ids(), byte_size, target);
    }
  }

  // repeated int64 artifact_ids = 2 [packed = true];
  {
    int byte_size = _impl_._artifact_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_artifact_ids(), byte_size, target);
    }
  }

  // repeated int64 context_ids = 3 [packed = true];
  {
    int byte_size = _impl_._context_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          3, _internal_context_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutLineageSubgraphResponse)
  return target;
}

size_t PutLineageSubgraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutLineageSubgraphResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.execution_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._execution_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 artifact_ids = 2 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._artifact_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int64 context_ids = 3 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._context_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutLineageSubgraphResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutLineageSubgraphResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutLineageSubgraphResponse::GetClassData() const { return &_class_data_; }


void PutLineageSubgraphResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutLineageSubgraphResponse*>(&to_msg);
  auto& from = static_cast<const PutLineageSubgraphResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutLineageSubgraphResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_ids_.MergeFrom(from._impl_.execution_ids_);
  _this->_impl_.artifact_ids_.MergeFrom(from._impl_.artifact_ids_);
  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutLineageSubgraphResponse::CopyFrom(const PutLineageSubgraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutLineageSubgraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutLineageSubgraphResponse::IsInitialized() const {
  return true;
}

void PutLineageSubgraphResponse::InternalSwap(PutLineageSubgraphResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_ids_.InternalSwap(&other->_impl_.execution_ids_);
  _impl_.artifact_ids_.InternalSwap(&other->_impl_.artifact_ids_);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutLineageSubgraphResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[23]);
}

// ===================================================================

class PutTypesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutTypesRequest>()._impl_._has_bits_);
  static void set_has_can_add_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_can_omit_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_can_delete_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_all_fields_match(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutTypesRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
PutTypesRequest::_Internal::transaction_options(const PutTypesRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutTypesRequest::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
void PutTypesRequest::clear_execution_types() {
  _impl_.execution_types_.Clear();
}
void PutTypesRequest::clear_context_types() {
  _impl_.context_types_.Clear();
}
void PutTypesRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PutTypesRequest::PutTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutTypesRequest)
}
PutTypesRequest::PutTypesRequest(const PutTypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutTypesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , decltype(_impl_.execution_types_){from._impl_.execution_types_}
    , decltype(_impl_.context_types_){from._impl_.context_types_}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){}
    , decltype(_impl_.can_omit_fields_){}
    , decltype(_impl_.can_delete_fields_){}
    , decltype(_impl_.all_fields_match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  ::memcpy(&_impl_.can_add_fields_, &from._impl_.can_add_fields_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.all_fields_match_) -
    reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.all_fields_match_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutTypesRequest)
}

inline void PutTypesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_types_){arena}
    , decltype(_impl_.execution_types_){arena}
    , decltype(_impl_.context_types_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){false}
    , decltype(_impl_.can_omit_fields_){false}
    , decltype(_impl_.can_delete_fields_){false}
    , decltype(_impl_.all_fields_match_){true}
  };
}

PutTypesRequest::~PutTypesRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutTypesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutTypesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_types_.~RepeatedPtrField();
  _impl_.execution_types_.~RepeatedPtrField();
  _impl_.context_types_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutTypesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutTypesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutTypesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_types_.Clear();
  _impl_.execution_types_.Clear();
  _impl_.context_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  ::memset(&_impl_.can_add_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.can_delete_fields_) -
      reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.can_delete_fields_));
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutTypesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactType artifact_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.ExecutionType execution_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_execution_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.ContextType context_types = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool can_add_fields = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_can_add_fields(&has_bits);
          _impl_.can_add_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_delete_fields = 5 [deprecated = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_can_delete_fields(&has_bits);
          _impl_.can_delete_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool all_fields_match = 6 [default = true, deprecated = true];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _Internal::set_has_all_fields_match(&has_bits);
          _impl_.all_fields_match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_omit_fields = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_can_omit_fields(&has_bits);
          _impl_.can_omit_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutTypesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutTypesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.ExecutionType execution_types = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_execution_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_execution_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.ContextType context_types = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool can_add_fields = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_can_add_fields(), target);
  }

  // optional bool can_delete_fields = 5 [deprecated = true];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_can_delete_fields(), target);
  }

  // optional bool all_fields_match = 6 [default = true, deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_all_fields_match(), target);
  }

  // optional bool can_omit_fields = 7;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_can_omit_fields(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 8;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutTypesRequest)
  return target;
}

size_t PutTypesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutTypesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.ExecutionType execution_types = 2;
  total_size += 1UL * this->_internal_execution_types_size();
  for (const auto& msg : this->_impl_.execution_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.ContextType context_types = 3;
  total_size += 1UL * this->_internal_context_types_size();
  for (const auto& msg : this->_impl_.context_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .ml_metadata.TransactionOptions transaction_options = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional bool can_add_fields = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional bool can_omit_fields = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool can_delete_fields = 5 [deprecated = true];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool all_fields_match = 6 [default = true, deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutTypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutTypesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutTypesRequest::GetClassData() const { return &_class_data_; }


void PutTypesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutTypesRequest*>(&to_msg);
  auto& from = static_cast<const PutTypesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutTypesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_impl_.execution_types_.MergeFrom(from._impl_.execution_types_);
  _this->_impl_.context_types_.MergeFrom(from._impl_.context_types_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.can_add_fields_ = from._impl_.can_add_fields_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.can_omit_fields_ = from._impl_.can_omit_fields_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.can_delete_fields_ = from._impl_.can_delete_fields_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.all_fields_match_ = from._impl_.all_fields_match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutTypesRequest::CopyFrom(const PutTypesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutTypesRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutTypesRequest::InternalSwap(PutTypesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
  _impl_.execution_types_.InternalSwap(&other->_impl_.execution_types_);
  _impl_.context_types_.InternalSwap(&other->_impl_.context_types_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutTypesRequest, _impl_.can_delete_fields_)
      + sizeof(PutTypesRequest::_impl_.can_delete_fields_)
      - PROTOBUF_FIELD_OFFSET(PutTypesRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
  swap(_impl_.all_fields_match_, other->_impl_.all_fields_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutTypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[24]);
}

// ===================================================================

class PutTypesResponse::_Internal {
 public:
};

PutTypesResponse::PutTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutTypesResponse)
}
PutTypesResponse::PutTypesResponse(const PutTypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutTypesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_type_ids_){from._impl_.artifact_type_ids_}
    , decltype(_impl_.execution_type_ids_){from._impl_.execution_type_ids_}
    , decltype(_impl_.context_type_ids_){from._impl_.context_type_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutTypesResponse)
}

inline void PutTypesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_type_ids_){arena}
    , decltype(_impl_.execution_type_ids_){arena}
    , decltype(_impl_.context_type_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutTypesResponse::~PutTypesResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutTypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutTypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_type_ids_.~RepeatedField();
  _impl_.execution_type_ids_.~RepeatedField();
  _impl_.context_type_ids_.~RepeatedField();
}

void PutTypesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutTypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutTypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_type_ids_.Clear();
  _impl_.execution_type_ids_.Clear();
  _impl_.context_type_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutTypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 artifact_type_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_artifact_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 execution_type_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_execution_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<uint8_t>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_execution_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 context_type_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_context_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<uint8_t>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutTypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutTypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 artifact_type_ids = 1;
  for (int i = 0, n = this->_internal_artifact_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_artifact_type_ids(i), target);
  }

  // repeated int64 execution_type_ids = 2;
  for (int i = 0, n = this->_internal_execution_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_execution_type_ids(i), target);
  }

  // repeated int64 context_type_ids = 3;
  for (int i = 0, n = this->_internal_context_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_context_type_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutTypesResponse)
  return target;
}

size_t PutTypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutTypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 artifact_type_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_artifact_type_ids_size());
    total_size += data_size;
  }

  // repeated int64 execution_type_ids = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.execution_type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_execution_type_ids_size());
    total_size += data_size;
  }

  // repeated int64 context_type_ids = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_context_type_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutTypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutTypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutTypesResponse::GetClassData() const { return &_class_data_; }


void PutTypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutTypesResponse*>(&to_msg);
  auto& from = static_cast<const PutTypesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutTypesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_type_ids_.MergeFrom(from._impl_.artifact_type_ids_);
  _this->_impl_.execution_type_ids_.MergeFrom(from._impl_.execution_type_ids_);
  _this->_impl_.context_type_ids_.MergeFrom(from._impl_.context_type_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutTypesResponse::CopyFrom(const PutTypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutTypesResponse::IsInitialized() const {
  return true;
}

void PutTypesResponse::InternalSwap(PutTypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_type_ids_.InternalSwap(&other->_impl_.artifact_type_ids_);
  _impl_.execution_type_ids_.InternalSwap(&other->_impl_.execution_type_ids_);
  _impl_.context_type_ids_.InternalSwap(&other->_impl_.context_type_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutTypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[25]);
}

// ===================================================================

class PutContextTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutContextTypeRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ContextType& context_type(const PutContextTypeRequest* msg);
  static void set_has_context_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_can_add_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_can_omit_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_can_delete_fields(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_all_fields_match(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutContextTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ContextType&
PutContextTypeRequest::_Internal::context_type(const PutContextTypeRequest* msg) {
  return *msg->_impl_.context_type_;
}
const ::ml_metadata::TransactionOptions&
PutContextTypeRequest::_Internal::transaction_options(const PutContextTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutContextTypeRequest::clear_context_type() {
  if (_impl_.context_type_ != nullptr) _impl_.context_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutContextTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutContextTypeRequest::PutContextTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutContextTypeRequest)
}
PutContextTypeRequest::PutContextTypeRequest(const PutContextTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutContextTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){}
    , decltype(_impl_.can_omit_fields_){}
    , decltype(_impl_.can_delete_fields_){}
    , decltype(_impl_.all_fields_match_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context_type()) {
    _this->_impl_.context_type_ = new ::ml_metadata::ContextType(*from._impl_.context_type_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  ::memcpy(&_impl_.can_add_fields_, &from._impl_.can_add_fields_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.all_fields_match_) -
    reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.all_fields_match_));
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutContextTypeRequest)
}

inline void PutContextTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_type_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.can_add_fields_){false}
    , decltype(_impl_.can_omit_fields_){false}
    , decltype(_impl_.can_delete_fields_){false}
    , decltype(_impl_.all_fields_match_){true}
  };
}

PutContextTypeRequest::~PutContextTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutContextTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutContextTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.context_type_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutContextTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutContextTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutContextTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.context_type_ != nullptr);
      _impl_.context_type_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  ::memset(&_impl_.can_add_fields_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.can_delete_fields_) -
      reinterpret_cast<char*>(&_impl_.can_add_fields_)) + sizeof(_impl_.can_delete_fields_));
  _impl_.all_fields_match_ = true;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContextTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ContextType context_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_add_fields = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_can_add_fields(&has_bits);
          _impl_.can_add_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_delete_fields = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_can_delete_fields(&has_bits);
          _impl_.can_delete_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool all_fields_match = 4 [default = true, deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_all_fields_match(&has_bits);
          _impl_.all_fields_match_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool can_omit_fields = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_can_omit_fields(&has_bits);
          _impl_.can_omit_fields_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContextTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutContextTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ContextType context_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::context_type(this),
        _Internal::context_type(this).GetCachedSize(), target, stream);
  }

  // optional bool can_add_fields = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_can_add_fields(), target);
  }

  // optional bool can_delete_fields = 3 [deprecated = true];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_can_delete_fields(), target);
  }

  // optional bool all_fields_match = 4 [default = true, deprecated = true];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_all_fields_match(), target);
  }

  // optional bool can_omit_fields = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_can_omit_fields(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutContextTypeRequest)
  return target;
}

size_t PutContextTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutContextTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .ml_metadata.ContextType context_type = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.context_type_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional bool can_add_fields = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool can_omit_fields = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool can_delete_fields = 3 [deprecated = true];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool all_fields_match = 4 [default = true, deprecated = true];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContextTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutContextTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContextTypeRequest::GetClassData() const { return &_class_data_; }


void PutContextTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutContextTypeRequest*>(&to_msg);
  auto& from = static_cast<const PutContextTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutContextTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_context_type()->::ml_metadata::ContextType::MergeFrom(
          from._internal_context_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.can_add_fields_ = from._impl_.can_add_fields_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.can_omit_fields_ = from._impl_.can_omit_fields_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.can_delete_fields_ = from._impl_.can_delete_fields_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.all_fields_match_ = from._impl_.all_fields_match_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContextTypeRequest::CopyFrom(const PutContextTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutContextTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContextTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutContextTypeRequest::InternalSwap(PutContextTypeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutContextTypeRequest, _impl_.can_delete_fields_)
      + sizeof(PutContextTypeRequest::_impl_.can_delete_fields_)
      - PROTOBUF_FIELD_OFFSET(PutContextTypeRequest, _impl_.context_type_)>(
          reinterpret_cast<char*>(&_impl_.context_type_),
          reinterpret_cast<char*>(&other->_impl_.context_type_));
  swap(_impl_.all_fields_match_, other->_impl_.all_fields_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContextTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[26]);
}

// ===================================================================

class PutContextTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PutContextTypeResponse>()._impl_._has_bits_);
  static void set_has_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PutContextTypeResponse::PutContextTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutContextTypeResponse)
}
PutContextTypeResponse::PutContextTypeResponse(const PutContextTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutContextTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_id_ = from._impl_.type_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutContextTypeResponse)
}

inline void PutContextTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_id_){int64_t{0}}
  };
}

PutContextTypeResponse::~PutContextTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutContextTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutContextTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PutContextTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutContextTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutContextTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContextTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_type_id(&has_bits);
          _impl_.type_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContextTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutContextTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 type_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutContextTypeResponse)
  return target;
}

size_t PutContextTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutContextTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int64 type_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContextTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutContextTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContextTypeResponse::GetClassData() const { return &_class_data_; }


void PutContextTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutContextTypeResponse*>(&to_msg);
  auto& from = static_cast<const PutContextTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutContextTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_type_id()) {
    _this->_internal_set_type_id(from._internal_type_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContextTypeResponse::CopyFrom(const PutContextTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutContextTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContextTypeResponse::IsInitialized() const {
  return true;
}

void PutContextTypeResponse::InternalSwap(PutContextTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.type_id_, other->_impl_.type_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContextTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[27]);
}

// ===================================================================

class PutContextsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutContextsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutContextsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const PutContextsRequest* msg);
  static void set_has_update_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::TransactionOptions&
PutContextsRequest::_Internal::transaction_options(const PutContextsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
PutContextsRequest::_Internal::update_mask(const PutContextsRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void PutContextsRequest::clear_contexts() {
  _impl_.contexts_.Clear();
}
void PutContextsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PutContextsRequest::clear_update_mask() {
  if (_impl_.update_mask_ != nullptr) _impl_.update_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PutContextsRequest::PutContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutContextsRequest)
}
PutContextsRequest::PutContextsRequest(const PutContextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutContextsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){from._impl_.contexts_}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutContextsRequest)
}

inline void PutContextsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
  };
}

PutContextsRequest::~PutContextsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutContextsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutContextsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void PutContextsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutContextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutContextsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.update_mask_ != nullptr);
      _impl_.update_mask_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContextsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.FieldMask update_mask = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContextsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutContextsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.FieldMask update_mask = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutContextsRequest)
  return target;
}

size_t PutContextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutContextsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional .google.protobuf.FieldMask update_mask = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.update_mask_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContextsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutContextsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContextsRequest::GetClassData() const { return &_class_data_; }


void PutContextsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutContextsRequest*>(&to_msg);
  auto& from = static_cast<const PutContextsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutContextsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
          from._internal_update_mask());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContextsRequest::CopyFrom(const PutContextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutContextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContextsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutContextsRequest::InternalSwap(PutContextsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PutContextsRequest, _impl_.update_mask_)
      + sizeof(PutContextsRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(PutContextsRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContextsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[28]);
}

// ===================================================================

class PutContextsResponse::_Internal {
 public:
};

PutContextsResponse::PutContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutContextsResponse)
}
PutContextsResponse::PutContextsResponse(const PutContextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutContextsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutContextsResponse)
}

inline void PutContextsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PutContextsResponse::~PutContextsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutContextsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutContextsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_ids_.~RepeatedField();
}

void PutContextsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutContextsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutContextsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutContextsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 context_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutContextsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutContextsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 context_ids = 1;
  for (int i = 0, n = this->_internal_context_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutContextsResponse)
  return target;
}

size_t PutContextsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutContextsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 context_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_context_ids_size());
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutContextsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutContextsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutContextsResponse::GetClassData() const { return &_class_data_; }


void PutContextsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutContextsResponse*>(&to_msg);
  auto& from = static_cast<const PutContextsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutContextsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutContextsResponse::CopyFrom(const PutContextsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutContextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContextsResponse::IsInitialized() const {
  return true;
}

void PutContextsResponse::InternalSwap(PutContextsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutContextsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[29]);
}

// ===================================================================

class PutAttributionsAndAssociationsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutAttributionsAndAssociationsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutAttributionsAndAssociationsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
PutAttributionsAndAssociationsRequest::_Internal::transaction_options(const PutAttributionsAndAssociationsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutAttributionsAndAssociationsRequest::clear_attributions() {
  _impl_.attributions_.Clear();
}
void PutAttributionsAndAssociationsRequest::clear_associations() {
  _impl_.associations_.Clear();
}
void PutAttributionsAndAssociationsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PutAttributionsAndAssociationsRequest::PutAttributionsAndAssociationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutAttributionsAndAssociationsRequest)
}
PutAttributionsAndAssociationsRequest::PutAttributionsAndAssociationsRequest(const PutAttributionsAndAssociationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutAttributionsAndAssociationsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.attributions_){from._impl_.attributions_}
    , decltype(_impl_.associations_){from._impl_.associations_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutAttributionsAndAssociationsRequest)
}

inline void PutAttributionsAndAssociationsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.attributions_){arena}
    , decltype(_impl_.associations_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

PutAttributionsAndAssociationsRequest::~PutAttributionsAndAssociationsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutAttributionsAndAssociationsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutAttributionsAndAssociationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributions_.~RepeatedPtrField();
  _impl_.associations_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutAttributionsAndAssociationsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutAttributionsAndAssociationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutAttributionsAndAssociationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributions_.Clear();
  _impl_.associations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutAttributionsAndAssociationsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Attribution attributions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_attributions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.Association associations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_associations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutAttributionsAndAssociationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutAttributionsAndAssociationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Attribution attributions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_attributions_size()); i < n; i++) {
    const auto& repfield = this->_internal_attributions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.Association associations = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_associations_size()); i < n; i++) {
    const auto& repfield = this->_internal_associations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutAttributionsAndAssociationsRequest)
  return target;
}

size_t PutAttributionsAndAssociationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutAttributionsAndAssociationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Attribution attributions = 1;
  total_size += 1UL * this->_internal_attributions_size();
  for (const auto& msg : this->_impl_.attributions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.Association associations = 2;
  total_size += 1UL * this->_internal_associations_size();
  for (const auto& msg : this->_impl_.associations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutAttributionsAndAssociationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutAttributionsAndAssociationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutAttributionsAndAssociationsRequest::GetClassData() const { return &_class_data_; }


void PutAttributionsAndAssociationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutAttributionsAndAssociationsRequest*>(&to_msg);
  auto& from = static_cast<const PutAttributionsAndAssociationsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutAttributionsAndAssociationsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.attributions_.MergeFrom(from._impl_.attributions_);
  _this->_impl_.associations_.MergeFrom(from._impl_.associations_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutAttributionsAndAssociationsRequest::CopyFrom(const PutAttributionsAndAssociationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutAttributionsAndAssociationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutAttributionsAndAssociationsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutAttributionsAndAssociationsRequest::InternalSwap(PutAttributionsAndAssociationsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.attributions_.InternalSwap(&other->_impl_.attributions_);
  _impl_.associations_.InternalSwap(&other->_impl_.associations_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutAttributionsAndAssociationsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[30]);
}

// ===================================================================

class PutAttributionsAndAssociationsResponse::_Internal {
 public:
};

PutAttributionsAndAssociationsResponse::PutAttributionsAndAssociationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutAttributionsAndAssociationsResponse)
}
PutAttributionsAndAssociationsResponse::PutAttributionsAndAssociationsResponse(const PutAttributionsAndAssociationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PutAttributionsAndAssociationsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutAttributionsAndAssociationsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutAttributionsAndAssociationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutAttributionsAndAssociationsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PutAttributionsAndAssociationsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[31]);
}

// ===================================================================

class PutParentContextsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PutParentContextsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const PutParentContextsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
PutParentContextsRequest::_Internal::transaction_options(const PutParentContextsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void PutParentContextsRequest::clear_parent_contexts() {
  _impl_.parent_contexts_.Clear();
}
void PutParentContextsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
PutParentContextsRequest::PutParentContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutParentContextsRequest)
}
PutParentContextsRequest::PutParentContextsRequest(const PutParentContextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PutParentContextsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parent_contexts_){from._impl_.parent_contexts_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutParentContextsRequest)
}

inline void PutParentContextsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.parent_contexts_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

PutParentContextsRequest::~PutParentContextsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.PutParentContextsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PutParentContextsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_contexts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void PutParentContextsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PutParentContextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.PutParentContextsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_contexts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PutParentContextsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ParentContext parent_contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parent_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PutParentContextsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.PutParentContextsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ParentContext parent_contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parent_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_parent_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.PutParentContextsRequest)
  return target;
}

size_t PutParentContextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.PutParentContextsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ParentContext parent_contexts = 1;
  total_size += 1UL * this->_internal_parent_contexts_size();
  for (const auto& msg : this->_impl_.parent_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutParentContextsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PutParentContextsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutParentContextsRequest::GetClassData() const { return &_class_data_; }


void PutParentContextsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PutParentContextsRequest*>(&to_msg);
  auto& from = static_cast<const PutParentContextsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.PutParentContextsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parent_contexts_.MergeFrom(from._impl_.parent_contexts_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PutParentContextsRequest::CopyFrom(const PutParentContextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.PutParentContextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutParentContextsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void PutParentContextsRequest::InternalSwap(PutParentContextsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parent_contexts_.InternalSwap(&other->_impl_.parent_contexts_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PutParentContextsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[32]);
}

// ===================================================================

class PutParentContextsResponse::_Internal {
 public:
};

PutParentContextsResponse::PutParentContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ml_metadata.PutParentContextsResponse)
}
PutParentContextsResponse::PutParentContextsResponse(const PutParentContextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PutParentContextsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.PutParentContextsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PutParentContextsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PutParentContextsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PutParentContextsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[33]);
}

// ===================================================================

class GetArtifactsByTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::ListOperationOptions& options(const GetArtifactsByTypeRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsByTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetArtifactsByTypeRequest::_Internal::options(const GetArtifactsByTypeRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetArtifactsByTypeRequest::_Internal::transaction_options(const GetArtifactsByTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsByTypeRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetArtifactsByTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetArtifactsByTypeRequest::GetArtifactsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByTypeRequest)
}
GetArtifactsByTypeRequest::GetArtifactsByTypeRequest(const GetArtifactsByTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByTypeRequest)
}

inline void GetArtifactsByTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactsByTypeRequest::~GetArtifactsByTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsByTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ListOperationOptions options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string type_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.ListOperationOptions options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByTypeRequest)
  return target;
}

size_t GetArtifactsByTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.ListOperationOptions options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByTypeRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsByTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByTypeRequest::CopyFrom(const GetArtifactsByTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsByTypeRequest::InternalSwap(GetArtifactsByTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetArtifactsByTypeRequest, _impl_.transaction_options_)
      + sizeof(GetArtifactsByTypeRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetArtifactsByTypeRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[34]);
}

// ===================================================================

class GetArtifactsByTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByTypeResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetArtifactsByTypeResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
GetArtifactsByTypeResponse::GetArtifactsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByTypeResponse)
}
GetArtifactsByTypeResponse::GetArtifactsByTypeResponse(const GetArtifactsByTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByTypeResponse)
}

inline void GetArtifactsByTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactsByTypeResponse::~GetArtifactsByTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetArtifactsByTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByTypeResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByTypeResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByTypeResponse)
  return target;
}

size_t GetArtifactsByTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByTypeResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsByTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByTypeResponse::CopyFrom(const GetArtifactsByTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByTypeResponse::IsInitialized() const {
  return true;
}

void GetArtifactsByTypeResponse::InternalSwap(GetArtifactsByTypeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[35]);
}

// ===================================================================

class GetArtifactByTypeAndNameRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactByTypeAndNameRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_artifact_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactByTypeAndNameRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactByTypeAndNameRequest::_Internal::transaction_options(const GetArtifactByTypeAndNameRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactByTypeAndNameRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetArtifactByTypeAndNameRequest::GetArtifactByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactByTypeAndNameRequest)
}
GetArtifactByTypeAndNameRequest::GetArtifactByTypeAndNameRequest(const GetArtifactByTypeAndNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactByTypeAndNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.artifact_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.artifact_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.artifact_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_artifact_name()) {
    _this->_impl_.artifact_name_.Set(from._internal_artifact_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactByTypeAndNameRequest)
}

inline void GetArtifactByTypeAndNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.artifact_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.artifact_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.artifact_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactByTypeAndNameRequest::~GetArtifactByTypeAndNameRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactByTypeAndNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactByTypeAndNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.artifact_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactByTypeAndNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactByTypeAndNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.artifact_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactByTypeAndNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactByTypeAndNameRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string artifact_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_artifact_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactByTypeAndNameRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactByTypeAndNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactByTypeAndNameRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string artifact_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_artifact_name().data(), static_cast<int>(this->_internal_artifact_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactByTypeAndNameRequest.artifact_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_artifact_name(), target);
  }

  // optional string type_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactByTypeAndNameRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactByTypeAndNameRequest)
  return target;
}

size_t GetArtifactByTypeAndNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactByTypeAndNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string artifact_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_artifact_name());
    }

    // optional string type_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactByTypeAndNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactByTypeAndNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactByTypeAndNameRequest::GetClassData() const { return &_class_data_; }


void GetArtifactByTypeAndNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactByTypeAndNameRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactByTypeAndNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactByTypeAndNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_artifact_name(from._internal_artifact_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactByTypeAndNameRequest::CopyFrom(const GetArtifactByTypeAndNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactByTypeAndNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactByTypeAndNameRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactByTypeAndNameRequest::InternalSwap(GetArtifactByTypeAndNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.artifact_name_, lhs_arena,
      &other->_impl_.artifact_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactByTypeAndNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[36]);
}

// ===================================================================

class GetArtifactByTypeAndNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactByTypeAndNameResponse>()._impl_._has_bits_);
  static const ::ml_metadata::Artifact& artifact(const GetArtifactByTypeAndNameResponse* msg);
  static void set_has_artifact(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::Artifact&
GetArtifactByTypeAndNameResponse::_Internal::artifact(const GetArtifactByTypeAndNameResponse* msg) {
  return *msg->_impl_.artifact_;
}
void GetArtifactByTypeAndNameResponse::clear_artifact() {
  if (_impl_.artifact_ != nullptr) _impl_.artifact_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactByTypeAndNameResponse::GetArtifactByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactByTypeAndNameResponse)
}
GetArtifactByTypeAndNameResponse::GetArtifactByTypeAndNameResponse(const GetArtifactByTypeAndNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactByTypeAndNameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_artifact()) {
    _this->_impl_.artifact_ = new ::ml_metadata::Artifact(*from._impl_.artifact_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactByTypeAndNameResponse)
}

inline void GetArtifactByTypeAndNameResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_){nullptr}
  };
}

GetArtifactByTypeAndNameResponse::~GetArtifactByTypeAndNameResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactByTypeAndNameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactByTypeAndNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.artifact_;
}

void GetArtifactByTypeAndNameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactByTypeAndNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.artifact_ != nullptr);
    _impl_.artifact_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactByTypeAndNameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Artifact artifact = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactByTypeAndNameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Artifact artifact = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::artifact(this),
        _Internal::artifact(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactByTypeAndNameResponse)
  return target;
}

size_t GetArtifactByTypeAndNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactByTypeAndNameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.Artifact artifact = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.artifact_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactByTypeAndNameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactByTypeAndNameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactByTypeAndNameResponse::GetClassData() const { return &_class_data_; }


void GetArtifactByTypeAndNameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactByTypeAndNameResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactByTypeAndNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactByTypeAndNameResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_artifact()) {
    _this->_internal_mutable_artifact()->::ml_metadata::Artifact::MergeFrom(
        from._internal_artifact());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactByTypeAndNameResponse::CopyFrom(const GetArtifactByTypeAndNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactByTypeAndNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactByTypeAndNameResponse::IsInitialized() const {
  return true;
}

void GetArtifactByTypeAndNameResponse::InternalSwap(GetArtifactByTypeAndNameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.artifact_, other->_impl_.artifact_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactByTypeAndNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[37]);
}

// ===================================================================

class GetArtifactsByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByIDRequest>()._impl_._has_bits_);
  static void set_has_populate_artifact_types(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactsByIDRequest::_Internal::transaction_options(const GetArtifactsByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactsByIDRequest::GetArtifactsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByIDRequest)
}
GetArtifactsByIDRequest::GetArtifactsByIDRequest(const GetArtifactsByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){from._impl_.artifact_ids_}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.populate_artifact_types_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.populate_artifact_types_ = from._impl_.populate_artifact_types_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByIDRequest)
}

inline void GetArtifactsByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.populate_artifact_types_){false}
  };
}

GetArtifactsByIDRequest::~GetArtifactsByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_.populate_artifact_types_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 artifact_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_artifact_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool populate_artifact_types = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_populate_artifact_types(&has_bits);
          _impl_.populate_artifact_types_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  for (int i = 0, n = this->_internal_artifact_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_artifact_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  // optional bool populate_artifact_types = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_populate_artifact_types(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByIDRequest)
  return target;
}

size_t GetArtifactsByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_artifact_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional bool populate_artifact_types = 3 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByIDRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_ids_.MergeFrom(from._impl_.artifact_ids_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.populate_artifact_types_ = from._impl_.populate_artifact_types_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByIDRequest::CopyFrom(const GetArtifactsByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsByIDRequest::InternalSwap(GetArtifactsByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifact_ids_.InternalSwap(&other->_impl_.artifact_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetArtifactsByIDRequest, _impl_.populate_artifact_types_)
      + sizeof(GetArtifactsByIDRequest::_impl_.populate_artifact_types_)
      - PROTOBUF_FIELD_OFFSET(GetArtifactsByIDRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[38]);
}

// ===================================================================

class GetArtifactsByIDResponse::_Internal {
 public:
};

void GetArtifactsByIDResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
void GetArtifactsByIDResponse::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
GetArtifactsByIDResponse::GetArtifactsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByIDResponse)
}
GetArtifactsByIDResponse::GetArtifactsByIDResponse(const GetArtifactsByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByIDResponse)
}

inline void GetArtifactsByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.artifact_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactsByIDResponse::~GetArtifactsByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.artifact_types_.~RepeatedPtrField();
}

void GetArtifactsByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  _impl_.artifact_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.ArtifactType artifact_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.ArtifactType artifact_types = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByIDResponse)
  return target;
}

size_t GetArtifactsByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.ArtifactType artifact_types = 2;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByIDResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByIDResponse::CopyFrom(const GetArtifactsByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByIDResponse::IsInitialized() const {
  return true;
}

void GetArtifactsByIDResponse::InternalSwap(GetArtifactsByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[39]);
}

// ===================================================================

class GetArtifactsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ListOperationOptions& options(const GetArtifactsRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetArtifactsRequest::_Internal::options(const GetArtifactsRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetArtifactsRequest::_Internal::transaction_options(const GetArtifactsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetArtifactsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetArtifactsRequest::GetArtifactsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsRequest)
}
GetArtifactsRequest::GetArtifactsRequest(const GetArtifactsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsRequest)
}

inline void GetArtifactsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactsRequest::~GetArtifactsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ListOperationOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ListOperationOptions options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsRequest)
  return target;
}

size_t GetArtifactsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.ListOperationOptions options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsRequest::CopyFrom(const GetArtifactsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsRequest::InternalSwap(GetArtifactsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetArtifactsRequest, _impl_.transaction_options_)
      + sizeof(GetArtifactsRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetArtifactsRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[40]);
}

// ===================================================================

class GetArtifactsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetArtifactsResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
GetArtifactsResponse::GetArtifactsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsResponse)
}
GetArtifactsResponse::GetArtifactsResponse(const GetArtifactsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsResponse)
}

inline void GetArtifactsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactsResponse::~GetArtifactsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetArtifactsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsResponse)
  return target;
}

size_t GetArtifactsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsResponse::CopyFrom(const GetArtifactsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsResponse::IsInitialized() const {
  return true;
}

void GetArtifactsResponse::InternalSwap(GetArtifactsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[41]);
}

// ===================================================================

class GetArtifactsByURIRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByURIRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsByURIRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactsByURIRequest::_Internal::transaction_options(const GetArtifactsByURIRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsByURIRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactsByURIRequest::GetArtifactsByURIRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByURIRequest)
}
GetArtifactsByURIRequest::GetArtifactsByURIRequest(const GetArtifactsByURIRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByURIRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uris_){from._impl_.uris_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByURIRequest)
}

inline void GetArtifactsByURIRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.uris_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactsByURIRequest::~GetArtifactsByURIRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByURIRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByURIRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uris_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsByURIRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByURIRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByURIRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uris_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByURIRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string uris = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uris();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByURIRequest.uris");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByURIRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByURIRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uris = 2;
  for (int i = 0, n = this->_internal_uris_size(); i < n; i++) {
    const auto& s = this->_internal_uris(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByURIRequest.uris");
    target = stream->WriteString(2, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByURIRequest)
  return target;
}

size_t GetArtifactsByURIRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByURIRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uris = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.uris_.size());
  for (int i = 0, n = _impl_.uris_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.uris_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByURIRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByURIRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByURIRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsByURIRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByURIRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByURIRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByURIRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.uris_.MergeFrom(from._impl_.uris_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByURIRequest::CopyFrom(const GetArtifactsByURIRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByURIRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByURIRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsByURIRequest::InternalSwap(GetArtifactsByURIRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.uris_.InternalSwap(&other->_impl_.uris_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByURIRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[42]);
}

// ===================================================================

class GetArtifactsByURIResponse::_Internal {
 public:
};

void GetArtifactsByURIResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
GetArtifactsByURIResponse::GetArtifactsByURIResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByURIResponse)
}
GetArtifactsByURIResponse::GetArtifactsByURIResponse(const GetArtifactsByURIResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByURIResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByURIResponse)
}

inline void GetArtifactsByURIResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactsByURIResponse::~GetArtifactsByURIResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByURIResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByURIResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
}

void GetArtifactsByURIResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByURIResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByURIResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByURIResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByURIResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByURIResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByURIResponse)
  return target;
}

size_t GetArtifactsByURIResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByURIResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByURIResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByURIResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByURIResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsByURIResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByURIResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByURIResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByURIResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByURIResponse::CopyFrom(const GetArtifactsByURIResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByURIResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByURIResponse::IsInitialized() const {
  return true;
}

void GetArtifactsByURIResponse::InternalSwap(GetArtifactsByURIResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByURIResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[43]);
}

// ===================================================================

class GetExecutionsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ListOperationOptions& options(const GetExecutionsRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetExecutionsRequest::_Internal::options(const GetExecutionsRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetExecutionsRequest::_Internal::transaction_options(const GetExecutionsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetExecutionsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetExecutionsRequest::GetExecutionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsRequest)
}
GetExecutionsRequest::GetExecutionsRequest(const GetExecutionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsRequest)
}

inline void GetExecutionsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionsRequest::~GetExecutionsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ListOperationOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ListOperationOptions options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsRequest)
  return target;
}

size_t GetExecutionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.ListOperationOptions options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsRequest::GetClassData() const { return &_class_data_; }


void GetExecutionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsRequest::CopyFrom(const GetExecutionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsRequest::InternalSwap(GetExecutionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetExecutionsRequest, _impl_.transaction_options_)
      + sizeof(GetExecutionsRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetExecutionsRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[44]);
}

// ===================================================================

class GetExecutionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetExecutionsResponse::clear_executions() {
  _impl_.executions_.Clear();
}
GetExecutionsResponse::GetExecutionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsResponse)
}
GetExecutionsResponse::GetExecutionsResponse(const GetExecutionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){from._impl_.executions_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsResponse)
}

inline void GetExecutionsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionsResponse::~GetExecutionsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetExecutionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsResponse)
  return target;
}

size_t GetExecutionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsResponse::GetClassData() const { return &_class_data_; }


void GetExecutionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsResponse::CopyFrom(const GetExecutionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsResponse::IsInitialized() const {
  return true;
}

void GetExecutionsResponse::InternalSwap(GetExecutionsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[45]);
}

// ===================================================================

class GetArtifactTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactTypeRequest::_Internal::transaction_options(const GetArtifactTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GetArtifactTypeRequest::GetArtifactTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypeRequest)
}
GetArtifactTypeRequest::GetArtifactTypeRequest(const GetArtifactTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypeRequest)
}

inline void GetArtifactTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactTypeRequest::~GetArtifactTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string type_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypeRequest)
  return target;
}

size_t GetArtifactTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypeRequest::GetClassData() const { return &_class_data_; }


void GetArtifactTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypeRequest::CopyFrom(const GetArtifactTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactTypeRequest::InternalSwap(GetArtifactTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[46]);
}

// ===================================================================

class GetArtifactTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactTypeResponse>()._impl_._has_bits_);
  static const ::ml_metadata::ArtifactType& artifact_type(const GetArtifactTypeResponse* msg);
  static void set_has_artifact_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::ArtifactType&
GetArtifactTypeResponse::_Internal::artifact_type(const GetArtifactTypeResponse* msg) {
  return *msg->_impl_.artifact_type_;
}
void GetArtifactTypeResponse::clear_artifact_type() {
  if (_impl_.artifact_type_ != nullptr) _impl_.artifact_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactTypeResponse::GetArtifactTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypeResponse)
}
GetArtifactTypeResponse::GetArtifactTypeResponse(const GetArtifactTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_type_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_artifact_type()) {
    _this->_impl_.artifact_type_ = new ::ml_metadata::ArtifactType(*from._impl_.artifact_type_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypeResponse)
}

inline void GetArtifactTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_type_){nullptr}
  };
}

GetArtifactTypeResponse::~GetArtifactTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.artifact_type_;
}

void GetArtifactTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.artifact_type_ != nullptr);
    _impl_.artifact_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ArtifactType artifact_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_artifact_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ArtifactType artifact_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::artifact_type(this),
        _Internal::artifact_type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypeResponse)
  return target;
}

size_t GetArtifactTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.ArtifactType artifact_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.artifact_type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypeResponse::GetClassData() const { return &_class_data_; }


void GetArtifactTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_artifact_type()) {
    _this->_internal_mutable_artifact_type()->::ml_metadata::ArtifactType::MergeFrom(
        from._internal_artifact_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypeResponse::CopyFrom(const GetArtifactTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypeResponse::IsInitialized() const {
  return true;
}

void GetArtifactTypeResponse::InternalSwap(GetArtifactTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.artifact_type_, other->_impl_.artifact_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[47]);
}

// ===================================================================

class GetArtifactTypesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactTypesRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactTypesRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactTypesRequest::_Internal::transaction_options(const GetArtifactTypesRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactTypesRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactTypesRequest::GetArtifactTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesRequest)
}
GetArtifactTypesRequest::GetArtifactTypesRequest(const GetArtifactTypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesRequest)
}

inline void GetArtifactTypesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactTypesRequest::~GetArtifactTypesRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactTypesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.TransactionOptions transaction_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesRequest)
  return target;
}

size_t GetArtifactTypesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesRequest::GetClassData() const { return &_class_data_; }


void GetArtifactTypesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesRequest::CopyFrom(const GetArtifactTypesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactTypesRequest::InternalSwap(GetArtifactTypesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[48]);
}

// ===================================================================

class GetArtifactTypesResponse::_Internal {
 public:
};

void GetArtifactTypesResponse::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
GetArtifactTypesResponse::GetArtifactTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesResponse)
}
GetArtifactTypesResponse::GetArtifactTypesResponse(const GetArtifactTypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesResponse)
}

inline void GetArtifactTypesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactTypesResponse::~GetArtifactTypesResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_types_.~RepeatedPtrField();
}

void GetArtifactTypesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactType artifact_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesResponse)
  return target;
}

size_t GetArtifactTypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesResponse::GetClassData() const { return &_class_data_; }


void GetArtifactTypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesResponse::CopyFrom(const GetArtifactTypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesResponse::IsInitialized() const {
  return true;
}

void GetArtifactTypesResponse::InternalSwap(GetArtifactTypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[49]);
}

// ===================================================================

class GetExecutionTypesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionTypesRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionTypesRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionTypesRequest::_Internal::transaction_options(const GetExecutionTypesRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionTypesRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionTypesRequest::GetExecutionTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesRequest)
}
GetExecutionTypesRequest::GetExecutionTypesRequest(const GetExecutionTypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesRequest)
}

inline void GetExecutionTypesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionTypesRequest::~GetExecutionTypesRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionTypesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.TransactionOptions transaction_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesRequest)
  return target;
}

size_t GetExecutionTypesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesRequest::GetClassData() const { return &_class_data_; }


void GetExecutionTypesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesRequest::CopyFrom(const GetExecutionTypesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionTypesRequest::InternalSwap(GetExecutionTypesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[50]);
}

// ===================================================================

class GetExecutionTypesResponse::_Internal {
 public:
};

void GetExecutionTypesResponse::clear_execution_types() {
  _impl_.execution_types_.Clear();
}
GetExecutionTypesResponse::GetExecutionTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesResponse)
}
GetExecutionTypesResponse::GetExecutionTypesResponse(const GetExecutionTypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){from._impl_.execution_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesResponse)
}

inline void GetExecutionTypesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetExecutionTypesResponse::~GetExecutionTypesResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_types_.~RepeatedPtrField();
}

void GetExecutionTypesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ExecutionType execution_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_execution_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_execution_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_execution_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesResponse)
  return target;
}

size_t GetExecutionTypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  total_size += 1UL * this->_internal_execution_types_size();
  for (const auto& msg : this->_impl_.execution_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesResponse::GetClassData() const { return &_class_data_; }


void GetExecutionTypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_types_.MergeFrom(from._impl_.execution_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesResponse::CopyFrom(const GetExecutionTypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesResponse::IsInitialized() const {
  return true;
}

void GetExecutionTypesResponse::InternalSwap(GetExecutionTypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_types_.InternalSwap(&other->_impl_.execution_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[51]);
}

// ===================================================================

class GetContextTypesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextTypesRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextTypesRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextTypesRequest::_Internal::transaction_options(const GetContextTypesRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextTypesRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextTypesRequest::GetContextTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesRequest)
}
GetContextTypesRequest::GetContextTypesRequest(const GetContextTypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesRequest)
}

inline void GetContextTypesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextTypesRequest::~GetContextTypesRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextTypesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.TransactionOptions transaction_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesRequest)
  return target;
}

size_t GetContextTypesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.TransactionOptions transaction_options = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesRequest::GetClassData() const { return &_class_data_; }


void GetContextTypesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesRequest*>(&to_msg);
  auto& from = static_cast<const GetContextTypesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesRequest::CopyFrom(const GetContextTypesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextTypesRequest::InternalSwap(GetContextTypesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[52]);
}

// ===================================================================

class GetContextTypesResponse::_Internal {
 public:
};

void GetContextTypesResponse::clear_context_types() {
  _impl_.context_types_.Clear();
}
GetContextTypesResponse::GetContextTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesResponse)
}
GetContextTypesResponse::GetContextTypesResponse(const GetContextTypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){from._impl_.context_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesResponse)
}

inline void GetContextTypesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextTypesResponse::~GetContextTypesResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_types_.~RepeatedPtrField();
}

void GetContextTypesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ContextType context_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesResponse)
  return target;
}

size_t GetContextTypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  total_size += 1UL * this->_internal_context_types_size();
  for (const auto& msg : this->_impl_.context_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesResponse::GetClassData() const { return &_class_data_; }


void GetContextTypesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesResponse*>(&to_msg);
  auto& from = static_cast<const GetContextTypesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_types_.MergeFrom(from._impl_.context_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesResponse::CopyFrom(const GetContextTypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesResponse::IsInitialized() const {
  return true;
}

void GetContextTypesResponse::InternalSwap(GetContextTypesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_types_.InternalSwap(&other->_impl_.context_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[53]);
}

// ===================================================================

class GetArtifactsByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactsByExternalIdsRequest::_Internal::transaction_options(const GetArtifactsByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactsByExternalIdsRequest::GetArtifactsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByExternalIdsRequest)
}
GetArtifactsByExternalIdsRequest::GetArtifactsByExternalIdsRequest(const GetArtifactsByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByExternalIdsRequest)
}

inline void GetArtifactsByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactsByExternalIdsRequest::~GetArtifactsByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByExternalIdsRequest)
  return target;
}

size_t GetArtifactsByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByExternalIdsRequest::CopyFrom(const GetArtifactsByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsByExternalIdsRequest::InternalSwap(GetArtifactsByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[54]);
}

// ===================================================================

class GetArtifactsByExternalIdsResponse::_Internal {
 public:
};

void GetArtifactsByExternalIdsResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
GetArtifactsByExternalIdsResponse::GetArtifactsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByExternalIdsResponse)
}
GetArtifactsByExternalIdsResponse::GetArtifactsByExternalIdsResponse(const GetArtifactsByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByExternalIdsResponse)
}

inline void GetArtifactsByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifacts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactsByExternalIdsResponse::~GetArtifactsByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
}

void GetArtifactsByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByExternalIdsResponse)
  return target;
}

size_t GetArtifactsByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByExternalIdsResponse::CopyFrom(const GetArtifactsByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetArtifactsByExternalIdsResponse::InternalSwap(GetArtifactsByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[55]);
}

// ===================================================================

class GetExecutionsByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionsByExternalIdsRequest::_Internal::transaction_options(const GetExecutionsByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionsByExternalIdsRequest::GetExecutionsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByExternalIdsRequest)
}
GetExecutionsByExternalIdsRequest::GetExecutionsByExternalIdsRequest(const GetExecutionsByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByExternalIdsRequest)
}

inline void GetExecutionsByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionsByExternalIdsRequest::~GetExecutionsByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByExternalIdsRequest)
  return target;
}

size_t GetExecutionsByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetExecutionsByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByExternalIdsRequest::CopyFrom(const GetExecutionsByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsByExternalIdsRequest::InternalSwap(GetExecutionsByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[56]);
}

// ===================================================================

class GetExecutionsByExternalIdsResponse::_Internal {
 public:
};

void GetExecutionsByExternalIdsResponse::clear_executions() {
  _impl_.executions_.Clear();
}
GetExecutionsByExternalIdsResponse::GetExecutionsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByExternalIdsResponse)
}
GetExecutionsByExternalIdsResponse::GetExecutionsByExternalIdsResponse(const GetExecutionsByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.executions_){from._impl_.executions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByExternalIdsResponse)
}

inline void GetExecutionsByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.executions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetExecutionsByExternalIdsResponse::~GetExecutionsByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
}

void GetExecutionsByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByExternalIdsResponse)
  return target;
}

size_t GetExecutionsByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetExecutionsByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByExternalIdsResponse::CopyFrom(const GetExecutionsByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetExecutionsByExternalIdsResponse::InternalSwap(GetExecutionsByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[57]);
}

// ===================================================================

class GetContextsByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextsByExternalIdsRequest::_Internal::transaction_options(const GetContextsByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextsByExternalIdsRequest::GetContextsByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByExternalIdsRequest)
}
GetContextsByExternalIdsRequest::GetContextsByExternalIdsRequest(const GetContextsByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByExternalIdsRequest)
}

inline void GetContextsByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextsByExternalIdsRequest::~GetContextsByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextsByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextsByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByExternalIdsRequest)
  return target;
}

size_t GetContextsByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetContextsByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByExternalIdsRequest::CopyFrom(const GetContextsByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsByExternalIdsRequest::InternalSwap(GetContextsByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[58]);
}

// ===================================================================

class GetContextsByExternalIdsResponse::_Internal {
 public:
};

void GetContextsByExternalIdsResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsByExternalIdsResponse::GetContextsByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByExternalIdsResponse)
}
GetContextsByExternalIdsResponse::GetContextsByExternalIdsResponse(const GetContextsByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByExternalIdsResponse)
}

inline void GetContextsByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextsByExternalIdsResponse::~GetContextsByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetContextsByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByExternalIdsResponse)
  return target;
}

size_t GetContextsByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetContextsByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByExternalIdsResponse::CopyFrom(const GetContextsByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetContextsByExternalIdsResponse::InternalSwap(GetContextsByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[59]);
}

// ===================================================================

class GetArtifactTypesByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactTypesByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactTypesByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactTypesByExternalIdsRequest::_Internal::transaction_options(const GetArtifactTypesByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactTypesByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactTypesByExternalIdsRequest::GetArtifactTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesByExternalIdsRequest)
}
GetArtifactTypesByExternalIdsRequest::GetArtifactTypesByExternalIdsRequest(const GetArtifactTypesByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesByExternalIdsRequest)
}

inline void GetArtifactTypesByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactTypesByExternalIdsRequest::~GetArtifactTypesByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactTypesByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactTypesByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  return target;
}

size_t GetArtifactTypesByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetArtifactTypesByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesByExternalIdsRequest::CopyFrom(const GetArtifactTypesByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactTypesByExternalIdsRequest::InternalSwap(GetArtifactTypesByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[60]);
}

// ===================================================================

class GetArtifactTypesByExternalIdsResponse::_Internal {
 public:
};

void GetArtifactTypesByExternalIdsResponse::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
GetArtifactTypesByExternalIdsResponse::GetArtifactTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesByExternalIdsResponse)
}
GetArtifactTypesByExternalIdsResponse::GetArtifactTypesByExternalIdsResponse(const GetArtifactTypesByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesByExternalIdsResponse)
}

inline void GetArtifactTypesByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactTypesByExternalIdsResponse::~GetArtifactTypesByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_types_.~RepeatedPtrField();
}

void GetArtifactTypesByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactType artifact_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  return target;
}

size_t GetArtifactTypesByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetArtifactTypesByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesByExternalIdsResponse::CopyFrom(const GetArtifactTypesByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetArtifactTypesByExternalIdsResponse::InternalSwap(GetArtifactTypesByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[61]);
}

// ===================================================================

class GetExecutionTypesByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionTypesByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionTypesByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionTypesByExternalIdsRequest::_Internal::transaction_options(const GetExecutionTypesByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionTypesByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionTypesByExternalIdsRequest::GetExecutionTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesByExternalIdsRequest)
}
GetExecutionTypesByExternalIdsRequest::GetExecutionTypesByExternalIdsRequest(const GetExecutionTypesByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesByExternalIdsRequest)
}

inline void GetExecutionTypesByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionTypesByExternalIdsRequest::~GetExecutionTypesByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionTypesByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionTypesByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  return target;
}

size_t GetExecutionTypesByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetExecutionTypesByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesByExternalIdsRequest::CopyFrom(const GetExecutionTypesByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionTypesByExternalIdsRequest::InternalSwap(GetExecutionTypesByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[62]);
}

// ===================================================================

class GetExecutionTypesByExternalIdsResponse::_Internal {
 public:
};

void GetExecutionTypesByExternalIdsResponse::clear_execution_types() {
  _impl_.execution_types_.Clear();
}
GetExecutionTypesByExternalIdsResponse::GetExecutionTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesByExternalIdsResponse)
}
GetExecutionTypesByExternalIdsResponse::GetExecutionTypesByExternalIdsResponse(const GetExecutionTypesByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){from._impl_.execution_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesByExternalIdsResponse)
}

inline void GetExecutionTypesByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetExecutionTypesByExternalIdsResponse::~GetExecutionTypesByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_types_.~RepeatedPtrField();
}

void GetExecutionTypesByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ExecutionType execution_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_execution_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_execution_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_execution_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  return target;
}

size_t GetExecutionTypesByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  total_size += 1UL * this->_internal_execution_types_size();
  for (const auto& msg : this->_impl_.execution_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetExecutionTypesByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_types_.MergeFrom(from._impl_.execution_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesByExternalIdsResponse::CopyFrom(const GetExecutionTypesByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetExecutionTypesByExternalIdsResponse::InternalSwap(GetExecutionTypesByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_types_.InternalSwap(&other->_impl_.execution_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[63]);
}

// ===================================================================

class GetContextTypesByExternalIdsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextTypesByExternalIdsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextTypesByExternalIdsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextTypesByExternalIdsRequest::_Internal::transaction_options(const GetContextTypesByExternalIdsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextTypesByExternalIdsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextTypesByExternalIdsRequest::GetContextTypesByExternalIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesByExternalIdsRequest)
}
GetContextTypesByExternalIdsRequest::GetContextTypesByExternalIdsRequest(const GetContextTypesByExternalIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesByExternalIdsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesByExternalIdsRequest)
}

inline void GetContextTypesByExternalIdsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextTypesByExternalIdsRequest::~GetContextTypesByExternalIdsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesByExternalIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesByExternalIdsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextTypesByExternalIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesByExternalIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesByExternalIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            #ifndef NDEBUG
            ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextTypesByExternalIdsRequest.external_ids");
            #endif  // !NDEBUG
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesByExternalIdsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesByExternalIdsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextTypesByExternalIdsRequest.external_ids");
    target = stream->WriteString(1, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesByExternalIdsRequest)
  return target;
}

size_t GetContextTypesByExternalIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesByExternalIdsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesByExternalIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesByExternalIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesByExternalIdsRequest::GetClassData() const { return &_class_data_; }


void GetContextTypesByExternalIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesByExternalIdsRequest*>(&to_msg);
  auto& from = static_cast<const GetContextTypesByExternalIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesByExternalIdsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesByExternalIdsRequest::CopyFrom(const GetContextTypesByExternalIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesByExternalIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesByExternalIdsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextTypesByExternalIdsRequest::InternalSwap(GetContextTypesByExternalIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesByExternalIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[64]);
}

// ===================================================================

class GetContextTypesByExternalIdsResponse::_Internal {
 public:
};

void GetContextTypesByExternalIdsResponse::clear_context_types() {
  _impl_.context_types_.Clear();
}
GetContextTypesByExternalIdsResponse::GetContextTypesByExternalIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesByExternalIdsResponse)
}
GetContextTypesByExternalIdsResponse::GetContextTypesByExternalIdsResponse(const GetContextTypesByExternalIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesByExternalIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){from._impl_.context_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesByExternalIdsResponse)
}

inline void GetContextTypesByExternalIdsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextTypesByExternalIdsResponse::~GetContextTypesByExternalIdsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesByExternalIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesByExternalIdsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_types_.~RepeatedPtrField();
}

void GetContextTypesByExternalIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesByExternalIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesByExternalIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ContextType context_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesByExternalIdsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesByExternalIdsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesByExternalIdsResponse)
  return target;
}

size_t GetContextTypesByExternalIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesByExternalIdsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  total_size += 1UL * this->_internal_context_types_size();
  for (const auto& msg : this->_impl_.context_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesByExternalIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesByExternalIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesByExternalIdsResponse::GetClassData() const { return &_class_data_; }


void GetContextTypesByExternalIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesByExternalIdsResponse*>(&to_msg);
  auto& from = static_cast<const GetContextTypesByExternalIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesByExternalIdsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_types_.MergeFrom(from._impl_.context_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesByExternalIdsResponse::CopyFrom(const GetContextTypesByExternalIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesByExternalIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesByExternalIdsResponse::IsInitialized() const {
  return true;
}

void GetContextTypesByExternalIdsResponse::InternalSwap(GetContextTypesByExternalIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_types_.InternalSwap(&other->_impl_.context_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesByExternalIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[65]);
}

// ===================================================================

class GetExecutionsByTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::ListOperationOptions& options(const GetExecutionsByTypeRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsByTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetExecutionsByTypeRequest::_Internal::options(const GetExecutionsByTypeRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetExecutionsByTypeRequest::_Internal::transaction_options(const GetExecutionsByTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsByTypeRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetExecutionsByTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetExecutionsByTypeRequest::GetExecutionsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByTypeRequest)
}
GetExecutionsByTypeRequest::GetExecutionsByTypeRequest(const GetExecutionsByTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByTypeRequest)
}

inline void GetExecutionsByTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionsByTypeRequest::~GetExecutionsByTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsByTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsByTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsByTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ListOperationOptions options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsByTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string type_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsByTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.ListOperationOptions options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByTypeRequest)
  return target;
}

size_t GetExecutionsByTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.ListOperationOptions options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByTypeRequest::GetClassData() const { return &_class_data_; }


void GetExecutionsByTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByTypeRequest::CopyFrom(const GetExecutionsByTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsByTypeRequest::InternalSwap(GetExecutionsByTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetExecutionsByTypeRequest, _impl_.transaction_options_)
      + sizeof(GetExecutionsByTypeRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetExecutionsByTypeRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[66]);
}

// ===================================================================

class GetExecutionsByTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByTypeResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetExecutionsByTypeResponse::clear_executions() {
  _impl_.executions_.Clear();
}
GetExecutionsByTypeResponse::GetExecutionsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByTypeResponse)
}
GetExecutionsByTypeResponse::GetExecutionsByTypeResponse(const GetExecutionsByTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){from._impl_.executions_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByTypeResponse)
}

inline void GetExecutionsByTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionsByTypeResponse::~GetExecutionsByTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetExecutionsByTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsByTypeResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsByTypeResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByTypeResponse)
  return target;
}

size_t GetExecutionsByTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByTypeResponse::GetClassData() const { return &_class_data_; }


void GetExecutionsByTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByTypeResponse::CopyFrom(const GetExecutionsByTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByTypeResponse::IsInitialized() const {
  return true;
}

void GetExecutionsByTypeResponse::InternalSwap(GetExecutionsByTypeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[67]);
}

// ===================================================================

class GetExecutionByTypeAndNameRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionByTypeAndNameRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_execution_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionByTypeAndNameRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionByTypeAndNameRequest::_Internal::transaction_options(const GetExecutionByTypeAndNameRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionByTypeAndNameRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetExecutionByTypeAndNameRequest::GetExecutionByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionByTypeAndNameRequest)
}
GetExecutionByTypeAndNameRequest::GetExecutionByTypeAndNameRequest(const GetExecutionByTypeAndNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionByTypeAndNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.execution_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.execution_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_execution_name()) {
    _this->_impl_.execution_name_.Set(from._internal_execution_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionByTypeAndNameRequest)
}

inline void GetExecutionByTypeAndNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.execution_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.execution_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execution_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionByTypeAndNameRequest::~GetExecutionByTypeAndNameRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionByTypeAndNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionByTypeAndNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.execution_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionByTypeAndNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionByTypeAndNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.execution_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionByTypeAndNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionByTypeAndNameRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string execution_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_execution_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionByTypeAndNameRequest.execution_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionByTypeAndNameRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionByTypeAndNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionByTypeAndNameRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string execution_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_execution_name().data(), static_cast<int>(this->_internal_execution_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionByTypeAndNameRequest.execution_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_execution_name(), target);
  }

  // optional string type_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionByTypeAndNameRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionByTypeAndNameRequest)
  return target;
}

size_t GetExecutionByTypeAndNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionByTypeAndNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string execution_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_execution_name());
    }

    // optional string type_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionByTypeAndNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionByTypeAndNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionByTypeAndNameRequest::GetClassData() const { return &_class_data_; }


void GetExecutionByTypeAndNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionByTypeAndNameRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionByTypeAndNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionByTypeAndNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_execution_name(from._internal_execution_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionByTypeAndNameRequest::CopyFrom(const GetExecutionByTypeAndNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionByTypeAndNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionByTypeAndNameRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionByTypeAndNameRequest::InternalSwap(GetExecutionByTypeAndNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.execution_name_, lhs_arena,
      &other->_impl_.execution_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionByTypeAndNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[68]);
}

// ===================================================================

class GetExecutionByTypeAndNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionByTypeAndNameResponse>()._impl_._has_bits_);
  static const ::ml_metadata::Execution& execution(const GetExecutionByTypeAndNameResponse* msg);
  static void set_has_execution(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::Execution&
GetExecutionByTypeAndNameResponse::_Internal::execution(const GetExecutionByTypeAndNameResponse* msg) {
  return *msg->_impl_.execution_;
}
void GetExecutionByTypeAndNameResponse::clear_execution() {
  if (_impl_.execution_ != nullptr) _impl_.execution_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionByTypeAndNameResponse::GetExecutionByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionByTypeAndNameResponse)
}
GetExecutionByTypeAndNameResponse::GetExecutionByTypeAndNameResponse(const GetExecutionByTypeAndNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionByTypeAndNameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_execution()) {
    _this->_impl_.execution_ = new ::ml_metadata::Execution(*from._impl_.execution_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionByTypeAndNameResponse)
}

inline void GetExecutionByTypeAndNameResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_){nullptr}
  };
}

GetExecutionByTypeAndNameResponse::~GetExecutionByTypeAndNameResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionByTypeAndNameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionByTypeAndNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.execution_;
}

void GetExecutionByTypeAndNameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionByTypeAndNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.execution_ != nullptr);
    _impl_.execution_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionByTypeAndNameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Execution execution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionByTypeAndNameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Execution execution = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::execution(this),
        _Internal::execution(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionByTypeAndNameResponse)
  return target;
}

size_t GetExecutionByTypeAndNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionByTypeAndNameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.Execution execution = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.execution_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionByTypeAndNameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionByTypeAndNameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionByTypeAndNameResponse::GetClassData() const { return &_class_data_; }


void GetExecutionByTypeAndNameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionByTypeAndNameResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionByTypeAndNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionByTypeAndNameResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_execution()) {
    _this->_internal_mutable_execution()->::ml_metadata::Execution::MergeFrom(
        from._internal_execution());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionByTypeAndNameResponse::CopyFrom(const GetExecutionByTypeAndNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionByTypeAndNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionByTypeAndNameResponse::IsInitialized() const {
  return true;
}

void GetExecutionByTypeAndNameResponse::InternalSwap(GetExecutionByTypeAndNameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.execution_, other->_impl_.execution_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionByTypeAndNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[69]);
}

// ===================================================================

class GetExecutionsByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByIDRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionsByIDRequest::_Internal::transaction_options(const GetExecutionsByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionsByIDRequest::GetExecutionsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByIDRequest)
}
GetExecutionsByIDRequest::GetExecutionsByIDRequest(const GetExecutionsByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_ids_){from._impl_.execution_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByIDRequest)
}

inline void GetExecutionsByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionsByIDRequest::~GetExecutionsByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 execution_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_execution_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_execution_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  for (int i = 0, n = this->_internal_execution_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_execution_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByIDRequest)
  return target;
}

size_t GetExecutionsByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.execution_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_execution_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByIDRequest::GetClassData() const { return &_class_data_; }


void GetExecutionsByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_ids_.MergeFrom(from._impl_.execution_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByIDRequest::CopyFrom(const GetExecutionsByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsByIDRequest::InternalSwap(GetExecutionsByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.execution_ids_.InternalSwap(&other->_impl_.execution_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[70]);
}

// ===================================================================

class GetExecutionsByIDResponse::_Internal {
 public:
};

void GetExecutionsByIDResponse::clear_executions() {
  _impl_.executions_.Clear();
}
GetExecutionsByIDResponse::GetExecutionsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByIDResponse)
}
GetExecutionsByIDResponse::GetExecutionsByIDResponse(const GetExecutionsByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.executions_){from._impl_.executions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByIDResponse)
}

inline void GetExecutionsByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.executions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetExecutionsByIDResponse::~GetExecutionsByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
}

void GetExecutionsByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByIDResponse)
  return target;
}

size_t GetExecutionsByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByIDResponse::GetClassData() const { return &_class_data_; }


void GetExecutionsByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByIDResponse::CopyFrom(const GetExecutionsByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByIDResponse::IsInitialized() const {
  return true;
}

void GetExecutionsByIDResponse::InternalSwap(GetExecutionsByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[71]);
}

// ===================================================================

class GetExecutionTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionTypeRequest::_Internal::transaction_options(const GetExecutionTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GetExecutionTypeRequest::GetExecutionTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypeRequest)
}
GetExecutionTypeRequest::GetExecutionTypeRequest(const GetExecutionTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypeRequest)
}

inline void GetExecutionTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionTypeRequest::~GetExecutionTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string type_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypeRequest)
  return target;
}

size_t GetExecutionTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypeRequest::GetClassData() const { return &_class_data_; }


void GetExecutionTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypeRequest::CopyFrom(const GetExecutionTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionTypeRequest::InternalSwap(GetExecutionTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[72]);
}

// ===================================================================

class GetExecutionTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionTypeResponse>()._impl_._has_bits_);
  static const ::ml_metadata::ExecutionType& execution_type(const GetExecutionTypeResponse* msg);
  static void set_has_execution_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::ExecutionType&
GetExecutionTypeResponse::_Internal::execution_type(const GetExecutionTypeResponse* msg) {
  return *msg->_impl_.execution_type_;
}
void GetExecutionTypeResponse::clear_execution_type() {
  if (_impl_.execution_type_ != nullptr) _impl_.execution_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionTypeResponse::GetExecutionTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypeResponse)
}
GetExecutionTypeResponse::GetExecutionTypeResponse(const GetExecutionTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_type_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_execution_type()) {
    _this->_impl_.execution_type_ = new ::ml_metadata::ExecutionType(*from._impl_.execution_type_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypeResponse)
}

inline void GetExecutionTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_type_){nullptr}
  };
}

GetExecutionTypeResponse::~GetExecutionTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.execution_type_;
}

void GetExecutionTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.execution_type_ != nullptr);
    _impl_.execution_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ExecutionType execution_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_execution_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ExecutionType execution_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::execution_type(this),
        _Internal::execution_type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypeResponse)
  return target;
}

size_t GetExecutionTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.ExecutionType execution_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.execution_type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypeResponse::GetClassData() const { return &_class_data_; }


void GetExecutionTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_execution_type()) {
    _this->_internal_mutable_execution_type()->::ml_metadata::ExecutionType::MergeFrom(
        from._internal_execution_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypeResponse::CopyFrom(const GetExecutionTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypeResponse::IsInitialized() const {
  return true;
}

void GetExecutionTypeResponse::InternalSwap(GetExecutionTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.execution_type_, other->_impl_.execution_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[73]);
}

// ===================================================================

class GetEventsByExecutionIDsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetEventsByExecutionIDsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetEventsByExecutionIDsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetEventsByExecutionIDsRequest::_Internal::transaction_options(const GetEventsByExecutionIDsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetEventsByExecutionIDsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetEventsByExecutionIDsRequest::GetEventsByExecutionIDsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetEventsByExecutionIDsRequest)
}
GetEventsByExecutionIDsRequest::GetEventsByExecutionIDsRequest(const GetEventsByExecutionIDsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEventsByExecutionIDsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_ids_){from._impl_.execution_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetEventsByExecutionIDsRequest)
}

inline void GetEventsByExecutionIDsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.execution_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetEventsByExecutionIDsRequest::~GetEventsByExecutionIDsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetEventsByExecutionIDsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEventsByExecutionIDsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetEventsByExecutionIDsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEventsByExecutionIDsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetEventsByExecutionIDsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEventsByExecutionIDsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 execution_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_execution_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_execution_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEventsByExecutionIDsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetEventsByExecutionIDsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  for (int i = 0, n = this->_internal_execution_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_execution_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetEventsByExecutionIDsRequest)
  return target;
}

size_t GetEventsByExecutionIDsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetEventsByExecutionIDsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 execution_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.execution_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_execution_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEventsByExecutionIDsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEventsByExecutionIDsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEventsByExecutionIDsRequest::GetClassData() const { return &_class_data_; }


void GetEventsByExecutionIDsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEventsByExecutionIDsRequest*>(&to_msg);
  auto& from = static_cast<const GetEventsByExecutionIDsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetEventsByExecutionIDsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_ids_.MergeFrom(from._impl_.execution_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEventsByExecutionIDsRequest::CopyFrom(const GetEventsByExecutionIDsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetEventsByExecutionIDsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEventsByExecutionIDsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetEventsByExecutionIDsRequest::InternalSwap(GetEventsByExecutionIDsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.execution_ids_.InternalSwap(&other->_impl_.execution_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEventsByExecutionIDsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[74]);
}

// ===================================================================

class GetEventsByExecutionIDsResponse::_Internal {
 public:
};

void GetEventsByExecutionIDsResponse::clear_events() {
  _impl_.events_.Clear();
}
GetEventsByExecutionIDsResponse::GetEventsByExecutionIDsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetEventsByExecutionIDsResponse)
}
GetEventsByExecutionIDsResponse::GetEventsByExecutionIDsResponse(const GetEventsByExecutionIDsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEventsByExecutionIDsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){from._impl_.events_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetEventsByExecutionIDsResponse)
}

inline void GetEventsByExecutionIDsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEventsByExecutionIDsResponse::~GetEventsByExecutionIDsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetEventsByExecutionIDsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEventsByExecutionIDsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
}

void GetEventsByExecutionIDsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEventsByExecutionIDsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetEventsByExecutionIDsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEventsByExecutionIDsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Event events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEventsByExecutionIDsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetEventsByExecutionIDsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetEventsByExecutionIDsResponse)
  return target;
}

size_t GetEventsByExecutionIDsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetEventsByExecutionIDsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_impl_.events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEventsByExecutionIDsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEventsByExecutionIDsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEventsByExecutionIDsResponse::GetClassData() const { return &_class_data_; }


void GetEventsByExecutionIDsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEventsByExecutionIDsResponse*>(&to_msg);
  auto& from = static_cast<const GetEventsByExecutionIDsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetEventsByExecutionIDsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.events_.MergeFrom(from._impl_.events_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEventsByExecutionIDsResponse::CopyFrom(const GetEventsByExecutionIDsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetEventsByExecutionIDsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEventsByExecutionIDsResponse::IsInitialized() const {
  return true;
}

void GetEventsByExecutionIDsResponse::InternalSwap(GetEventsByExecutionIDsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEventsByExecutionIDsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[75]);
}

// ===================================================================

class GetEventsByArtifactIDsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetEventsByArtifactIDsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetEventsByArtifactIDsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetEventsByArtifactIDsRequest::_Internal::transaction_options(const GetEventsByArtifactIDsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetEventsByArtifactIDsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetEventsByArtifactIDsRequest::GetEventsByArtifactIDsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetEventsByArtifactIDsRequest)
}
GetEventsByArtifactIDsRequest::GetEventsByArtifactIDsRequest(const GetEventsByArtifactIDsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEventsByArtifactIDsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){from._impl_.artifact_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetEventsByArtifactIDsRequest)
}

inline void GetEventsByArtifactIDsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifact_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetEventsByArtifactIDsRequest::~GetEventsByArtifactIDsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetEventsByArtifactIDsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEventsByArtifactIDsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetEventsByArtifactIDsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEventsByArtifactIDsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetEventsByArtifactIDsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEventsByArtifactIDsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 artifact_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_artifact_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_artifact_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEventsByArtifactIDsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetEventsByArtifactIDsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  for (int i = 0, n = this->_internal_artifact_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_artifact_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetEventsByArtifactIDsRequest)
  return target;
}

size_t GetEventsByArtifactIDsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetEventsByArtifactIDsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 artifact_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.artifact_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_artifact_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEventsByArtifactIDsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEventsByArtifactIDsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEventsByArtifactIDsRequest::GetClassData() const { return &_class_data_; }


void GetEventsByArtifactIDsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEventsByArtifactIDsRequest*>(&to_msg);
  auto& from = static_cast<const GetEventsByArtifactIDsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetEventsByArtifactIDsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_ids_.MergeFrom(from._impl_.artifact_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEventsByArtifactIDsRequest::CopyFrom(const GetEventsByArtifactIDsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetEventsByArtifactIDsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEventsByArtifactIDsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetEventsByArtifactIDsRequest::InternalSwap(GetEventsByArtifactIDsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifact_ids_.InternalSwap(&other->_impl_.artifact_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEventsByArtifactIDsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[76]);
}

// ===================================================================

class GetEventsByArtifactIDsResponse::_Internal {
 public:
};

void GetEventsByArtifactIDsResponse::clear_events() {
  _impl_.events_.Clear();
}
GetEventsByArtifactIDsResponse::GetEventsByArtifactIDsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetEventsByArtifactIDsResponse)
}
GetEventsByArtifactIDsResponse::GetEventsByArtifactIDsResponse(const GetEventsByArtifactIDsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEventsByArtifactIDsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){from._impl_.events_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetEventsByArtifactIDsResponse)
}

inline void GetEventsByArtifactIDsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.events_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEventsByArtifactIDsResponse::~GetEventsByArtifactIDsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetEventsByArtifactIDsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEventsByArtifactIDsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.events_.~RepeatedPtrField();
}

void GetEventsByArtifactIDsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEventsByArtifactIDsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetEventsByArtifactIDsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEventsByArtifactIDsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Event events = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEventsByArtifactIDsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetEventsByArtifactIDsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_events_size()); i < n; i++) {
    const auto& repfield = this->_internal_events(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetEventsByArtifactIDsResponse)
  return target;
}

size_t GetEventsByArtifactIDsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetEventsByArtifactIDsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Event events = 1;
  total_size += 1UL * this->_internal_events_size();
  for (const auto& msg : this->_impl_.events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEventsByArtifactIDsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEventsByArtifactIDsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEventsByArtifactIDsResponse::GetClassData() const { return &_class_data_; }


void GetEventsByArtifactIDsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEventsByArtifactIDsResponse*>(&to_msg);
  auto& from = static_cast<const GetEventsByArtifactIDsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetEventsByArtifactIDsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.events_.MergeFrom(from._impl_.events_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEventsByArtifactIDsResponse::CopyFrom(const GetEventsByArtifactIDsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetEventsByArtifactIDsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEventsByArtifactIDsResponse::IsInitialized() const {
  return true;
}

void GetEventsByArtifactIDsResponse::InternalSwap(GetEventsByArtifactIDsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEventsByArtifactIDsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[77]);
}

// ===================================================================

class GetArtifactTypesByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactTypesByIDRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactTypesByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetArtifactTypesByIDRequest::_Internal::transaction_options(const GetArtifactTypesByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactTypesByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetArtifactTypesByIDRequest::GetArtifactTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesByIDRequest)
}
GetArtifactTypesByIDRequest::GetArtifactTypesByIDRequest(const GetArtifactTypesByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){from._impl_.type_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesByIDRequest)
}

inline void GetArtifactTypesByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetArtifactTypesByIDRequest::~GetArtifactTypesByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactTypesByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 type_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  for (int i = 0, n = this->_internal_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesByIDRequest)
  return target;
}

size_t GetArtifactTypesByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_type_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesByIDRequest::GetClassData() const { return &_class_data_; }


void GetArtifactTypesByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.type_ids_.MergeFrom(from._impl_.type_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesByIDRequest::CopyFrom(const GetArtifactTypesByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactTypesByIDRequest::InternalSwap(GetArtifactTypesByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.type_ids_.InternalSwap(&other->_impl_.type_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[78]);
}

// ===================================================================

class GetArtifactTypesByIDResponse::_Internal {
 public:
};

void GetArtifactTypesByIDResponse::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
GetArtifactTypesByIDResponse::GetArtifactTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactTypesByIDResponse)
}
GetArtifactTypesByIDResponse::GetArtifactTypesByIDResponse(const GetArtifactTypesByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactTypesByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactTypesByIDResponse)
}

inline void GetArtifactTypesByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetArtifactTypesByIDResponse::~GetArtifactTypesByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactTypesByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactTypesByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_types_.~RepeatedPtrField();
}

void GetArtifactTypesByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactTypesByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactTypesByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactType artifact_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactTypesByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactTypesByIDResponse)
  return target;
}

size_t GetArtifactTypesByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactTypesByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactTypesByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactTypesByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactTypesByIDResponse::GetClassData() const { return &_class_data_; }


void GetArtifactTypesByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactTypesByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactTypesByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactTypesByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactTypesByIDResponse::CopyFrom(const GetArtifactTypesByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactTypesByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactTypesByIDResponse::IsInitialized() const {
  return true;
}

void GetArtifactTypesByIDResponse::InternalSwap(GetArtifactTypesByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactTypesByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[79]);
}

// ===================================================================

class GetExecutionTypesByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionTypesByIDRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionTypesByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionTypesByIDRequest::_Internal::transaction_options(const GetExecutionTypesByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionTypesByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetExecutionTypesByIDRequest::GetExecutionTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesByIDRequest)
}
GetExecutionTypesByIDRequest::GetExecutionTypesByIDRequest(const GetExecutionTypesByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){from._impl_.type_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesByIDRequest)
}

inline void GetExecutionTypesByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetExecutionTypesByIDRequest::~GetExecutionTypesByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionTypesByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 type_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  for (int i = 0, n = this->_internal_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesByIDRequest)
  return target;
}

size_t GetExecutionTypesByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_type_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesByIDRequest::GetClassData() const { return &_class_data_; }


void GetExecutionTypesByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.type_ids_.MergeFrom(from._impl_.type_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesByIDRequest::CopyFrom(const GetExecutionTypesByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionTypesByIDRequest::InternalSwap(GetExecutionTypesByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.type_ids_.InternalSwap(&other->_impl_.type_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[80]);
}

// ===================================================================

class GetExecutionTypesByIDResponse::_Internal {
 public:
};

void GetExecutionTypesByIDResponse::clear_execution_types() {
  _impl_.execution_types_.Clear();
}
GetExecutionTypesByIDResponse::GetExecutionTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionTypesByIDResponse)
}
GetExecutionTypesByIDResponse::GetExecutionTypesByIDResponse(const GetExecutionTypesByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionTypesByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){from._impl_.execution_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionTypesByIDResponse)
}

inline void GetExecutionTypesByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execution_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetExecutionTypesByIDResponse::~GetExecutionTypesByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionTypesByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionTypesByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execution_types_.~RepeatedPtrField();
}

void GetExecutionTypesByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionTypesByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execution_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionTypesByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ExecutionType execution_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_execution_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionTypesByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_execution_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_execution_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionTypesByIDResponse)
  return target;
}

size_t GetExecutionTypesByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionTypesByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ExecutionType execution_types = 1;
  total_size += 1UL * this->_internal_execution_types_size();
  for (const auto& msg : this->_impl_.execution_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionTypesByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionTypesByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionTypesByIDResponse::GetClassData() const { return &_class_data_; }


void GetExecutionTypesByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionTypesByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionTypesByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionTypesByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.execution_types_.MergeFrom(from._impl_.execution_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionTypesByIDResponse::CopyFrom(const GetExecutionTypesByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionTypesByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionTypesByIDResponse::IsInitialized() const {
  return true;
}

void GetExecutionTypesByIDResponse::InternalSwap(GetExecutionTypesByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.execution_types_.InternalSwap(&other->_impl_.execution_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionTypesByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[81]);
}

// ===================================================================

class GetContextTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextTypeRequest::_Internal::transaction_options(const GetContextTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GetContextTypeRequest::GetContextTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypeRequest)
}
GetContextTypeRequest::GetContextTypeRequest(const GetContextTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypeRequest)
}

inline void GetContextTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetContextTypeRequest::~GetContextTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string type_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypeRequest)
  return target;
}

size_t GetContextTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypeRequest::GetClassData() const { return &_class_data_; }


void GetContextTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetContextTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypeRequest::CopyFrom(const GetContextTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextTypeRequest::InternalSwap(GetContextTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[82]);
}

// ===================================================================

class GetContextTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextTypeResponse>()._impl_._has_bits_);
  static const ::ml_metadata::ContextType& context_type(const GetContextTypeResponse* msg);
  static void set_has_context_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::ContextType&
GetContextTypeResponse::_Internal::context_type(const GetContextTypeResponse* msg) {
  return *msg->_impl_.context_type_;
}
void GetContextTypeResponse::clear_context_type() {
  if (_impl_.context_type_ != nullptr) _impl_.context_type_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextTypeResponse::GetContextTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypeResponse)
}
GetContextTypeResponse::GetContextTypeResponse(const GetContextTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_type_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context_type()) {
    _this->_impl_.context_type_ = new ::ml_metadata::ContextType(*from._impl_.context_type_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypeResponse)
}

inline void GetContextTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_type_){nullptr}
  };
}

GetContextTypeResponse::~GetContextTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.context_type_;
}

void GetContextTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.context_type_ != nullptr);
    _impl_.context_type_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ContextType context_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ContextType context_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::context_type(this),
        _Internal::context_type(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypeResponse)
  return target;
}

size_t GetContextTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.ContextType context_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypeResponse::GetClassData() const { return &_class_data_; }


void GetContextTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetContextTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_context_type()) {
    _this->_internal_mutable_context_type()->::ml_metadata::ContextType::MergeFrom(
        from._internal_context_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypeResponse::CopyFrom(const GetContextTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypeResponse::IsInitialized() const {
  return true;
}

void GetContextTypeResponse::InternalSwap(GetContextTypeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.context_type_, other->_impl_.context_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[83]);
}

// ===================================================================

class GetContextTypesByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextTypesByIDRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextTypesByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextTypesByIDRequest::_Internal::transaction_options(const GetContextTypesByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextTypesByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextTypesByIDRequest::GetContextTypesByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesByIDRequest)
}
GetContextTypesByIDRequest::GetContextTypesByIDRequest(const GetContextTypesByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){from._impl_.type_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesByIDRequest)
}

inline void GetContextTypesByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextTypesByIDRequest::~GetContextTypesByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextTypesByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 type_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_type_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_type_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  for (int i = 0, n = this->_internal_type_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_type_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesByIDRequest)
  return target;
}

size_t GetContextTypesByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 type_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.type_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_type_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesByIDRequest::GetClassData() const { return &_class_data_; }


void GetContextTypesByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetContextTypesByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.type_ids_.MergeFrom(from._impl_.type_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesByIDRequest::CopyFrom(const GetContextTypesByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextTypesByIDRequest::InternalSwap(GetContextTypesByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.type_ids_.InternalSwap(&other->_impl_.type_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[84]);
}

// ===================================================================

class GetContextTypesByIDResponse::_Internal {
 public:
};

void GetContextTypesByIDResponse::clear_context_types() {
  _impl_.context_types_.Clear();
}
GetContextTypesByIDResponse::GetContextTypesByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextTypesByIDResponse)
}
GetContextTypesByIDResponse::GetContextTypesByIDResponse(const GetContextTypesByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextTypesByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){from._impl_.context_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextTypesByIDResponse)
}

inline void GetContextTypesByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.context_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextTypesByIDResponse::~GetContextTypesByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextTypesByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextTypesByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_types_.~RepeatedPtrField();
}

void GetContextTypesByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextTypesByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextTypesByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ContextType context_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextTypesByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextTypesByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextTypesByIDResponse)
  return target;
}

size_t GetContextTypesByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextTypesByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ContextType context_types = 1;
  total_size += 1UL * this->_internal_context_types_size();
  for (const auto& msg : this->_impl_.context_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextTypesByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextTypesByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextTypesByIDResponse::GetClassData() const { return &_class_data_; }


void GetContextTypesByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextTypesByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetContextTypesByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextTypesByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_types_.MergeFrom(from._impl_.context_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextTypesByIDResponse::CopyFrom(const GetContextTypesByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextTypesByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextTypesByIDResponse::IsInitialized() const {
  return true;
}

void GetContextTypesByIDResponse::InternalSwap(GetContextTypesByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.context_types_.InternalSwap(&other->_impl_.context_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextTypesByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[85]);
}

// ===================================================================

class GetContextsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::ListOperationOptions& options(const GetContextsRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetContextsRequest::_Internal::options(const GetContextsRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetContextsRequest::_Internal::transaction_options(const GetContextsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetContextsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetContextsRequest::GetContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsRequest)
}
GetContextsRequest::GetContextsRequest(const GetContextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsRequest)
}

inline void GetContextsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextsRequest::~GetContextsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.ListOperationOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.ListOperationOptions options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsRequest)
  return target;
}

size_t GetContextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.ListOperationOptions options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsRequest::GetClassData() const { return &_class_data_; }


void GetContextsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsRequest::CopyFrom(const GetContextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsRequest::InternalSwap(GetContextsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContextsRequest, _impl_.transaction_options_)
      + sizeof(GetContextsRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetContextsRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[86]);
}

// ===================================================================

class GetContextsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetContextsResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsResponse::GetContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsResponse)
}
GetContextsResponse::GetContextsResponse(const GetContextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){from._impl_.contexts_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsResponse)
}

inline void GetContextsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetContextsResponse::~GetContextsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetContextsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextsResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsResponse)
  return target;
}

size_t GetContextsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsResponse::GetClassData() const { return &_class_data_; }


void GetContextsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsResponse::CopyFrom(const GetContextsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsResponse::IsInitialized() const {
  return true;
}

void GetContextsResponse::InternalSwap(GetContextsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[87]);
}

// ===================================================================

class GetContextsByTypeRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByTypeRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::ListOperationOptions& options(const GetContextsByTypeRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsByTypeRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetContextsByTypeRequest::_Internal::options(const GetContextsByTypeRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetContextsByTypeRequest::_Internal::transaction_options(const GetContextsByTypeRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsByTypeRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetContextsByTypeRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetContextsByTypeRequest::GetContextsByTypeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByTypeRequest)
}
GetContextsByTypeRequest::GetContextsByTypeRequest(const GetContextsByTypeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByTypeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByTypeRequest)
}

inline void GetContextsByTypeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetContextsByTypeRequest::~GetContextsByTypeRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByTypeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByTypeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsByTypeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByTypeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByTypeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextsByTypeRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ListOperationOptions options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextsByTypeRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByTypeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByTypeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextsByTypeRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional .ml_metadata.ListOperationOptions options = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional string type_version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextsByTypeRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByTypeRequest)
  return target;
}

size_t GetContextsByTypeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByTypeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string type_version = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.ListOperationOptions options = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByTypeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByTypeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByTypeRequest::GetClassData() const { return &_class_data_; }


void GetContextsByTypeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsByTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByTypeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByTypeRequest::CopyFrom(const GetContextsByTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByTypeRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsByTypeRequest::InternalSwap(GetContextsByTypeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContextsByTypeRequest, _impl_.transaction_options_)
      + sizeof(GetContextsByTypeRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetContextsByTypeRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByTypeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[88]);
}

// ===================================================================

class GetContextsByTypeResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByTypeResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetContextsByTypeResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsByTypeResponse::GetContextsByTypeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByTypeResponse)
}
GetContextsByTypeResponse::GetContextsByTypeResponse(const GetContextsByTypeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByTypeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){from._impl_.contexts_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByTypeResponse)
}

inline void GetContextsByTypeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.contexts_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetContextsByTypeResponse::~GetContextsByTypeResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByTypeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByTypeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetContextsByTypeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByTypeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByTypeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextsByTypeResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByTypeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByTypeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextsByTypeResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByTypeResponse)
  return target;
}

size_t GetContextsByTypeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByTypeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByTypeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByTypeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByTypeResponse::GetClassData() const { return &_class_data_; }


void GetContextsByTypeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsByTypeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByTypeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByTypeResponse::CopyFrom(const GetContextsByTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByTypeResponse::IsInitialized() const {
  return true;
}

void GetContextsByTypeResponse::InternalSwap(GetContextsByTypeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByTypeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[89]);
}

// ===================================================================

class GetContextByTypeAndNameRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextByTypeAndNameRequest>()._impl_._has_bits_);
  static void set_has_type_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type_version(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_context_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextByTypeAndNameRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextByTypeAndNameRequest::_Internal::transaction_options(const GetContextByTypeAndNameRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextByTypeAndNameRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GetContextByTypeAndNameRequest::GetContextByTypeAndNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextByTypeAndNameRequest)
}
GetContextByTypeAndNameRequest::GetContextByTypeAndNameRequest(const GetContextByTypeAndNameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextByTypeAndNameRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.context_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_name()) {
    _this->_impl_.type_name_.Set(from._internal_type_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.context_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_context_name()) {
    _this->_impl_.context_name_.Set(from._internal_context_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_type_version()) {
    _this->_impl_.type_version_.Set(from._internal_type_version(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextByTypeAndNameRequest)
}

inline void GetContextByTypeAndNameRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.type_name_){}
    , decltype(_impl_.context_name_){}
    , decltype(_impl_.type_version_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.type_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.context_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.context_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetContextByTypeAndNameRequest::~GetContextByTypeAndNameRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextByTypeAndNameRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextByTypeAndNameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_name_.Destroy();
  _impl_.context_name_.Destroy();
  _impl_.type_version_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextByTypeAndNameRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextByTypeAndNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.type_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.context_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.type_version_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextByTypeAndNameRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextByTypeAndNameRequest.type_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string context_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_context_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextByTypeAndNameRequest.context_name");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional string type_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_type_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetContextByTypeAndNameRequest.type_version");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextByTypeAndNameRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextByTypeAndNameRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string type_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_name().data(), static_cast<int>(this->_internal_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextByTypeAndNameRequest.type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type_name(), target);
  }

  // optional string context_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_context_name().data(), static_cast<int>(this->_internal_context_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextByTypeAndNameRequest.context_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_context_name(), target);
  }

  // optional string type_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_type_version().data(), static_cast<int>(this->_internal_type_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetContextByTypeAndNameRequest.type_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_type_version(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextByTypeAndNameRequest)
  return target;
}

size_t GetContextByTypeAndNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextByTypeAndNameRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string type_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_name());
    }

    // optional string context_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_context_name());
    }

    // optional string type_version = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_type_version());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextByTypeAndNameRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextByTypeAndNameRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextByTypeAndNameRequest::GetClassData() const { return &_class_data_; }


void GetContextByTypeAndNameRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextByTypeAndNameRequest*>(&to_msg);
  auto& from = static_cast<const GetContextByTypeAndNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextByTypeAndNameRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_type_name(from._internal_type_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_context_name(from._internal_context_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_type_version(from._internal_type_version());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextByTypeAndNameRequest::CopyFrom(const GetContextByTypeAndNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextByTypeAndNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextByTypeAndNameRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextByTypeAndNameRequest::InternalSwap(GetContextByTypeAndNameRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_name_, lhs_arena,
      &other->_impl_.type_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.context_name_, lhs_arena,
      &other->_impl_.context_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_version_, lhs_arena,
      &other->_impl_.type_version_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextByTypeAndNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[90]);
}

// ===================================================================

class GetContextByTypeAndNameResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextByTypeAndNameResponse>()._impl_._has_bits_);
  static const ::ml_metadata::Context& context(const GetContextByTypeAndNameResponse* msg);
  static void set_has_context(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::Context&
GetContextByTypeAndNameResponse::_Internal::context(const GetContextByTypeAndNameResponse* msg) {
  return *msg->_impl_.context_;
}
void GetContextByTypeAndNameResponse::clear_context() {
  if (_impl_.context_ != nullptr) _impl_.context_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextByTypeAndNameResponse::GetContextByTypeAndNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextByTypeAndNameResponse)
}
GetContextByTypeAndNameResponse::GetContextByTypeAndNameResponse(const GetContextByTypeAndNameResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextByTypeAndNameResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::ml_metadata::Context(*from._impl_.context_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextByTypeAndNameResponse)
}

inline void GetContextByTypeAndNameResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_){nullptr}
  };
}

GetContextByTypeAndNameResponse::~GetContextByTypeAndNameResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextByTypeAndNameResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextByTypeAndNameResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.context_;
}

void GetContextByTypeAndNameResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextByTypeAndNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.context_ != nullptr);
    _impl_.context_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextByTypeAndNameResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.Context context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextByTypeAndNameResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextByTypeAndNameResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.Context context = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextByTypeAndNameResponse)
  return target;
}

size_t GetContextByTypeAndNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextByTypeAndNameResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.Context context = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextByTypeAndNameResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextByTypeAndNameResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextByTypeAndNameResponse::GetClassData() const { return &_class_data_; }


void GetContextByTypeAndNameResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextByTypeAndNameResponse*>(&to_msg);
  auto& from = static_cast<const GetContextByTypeAndNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextByTypeAndNameResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::ml_metadata::Context::MergeFrom(
        from._internal_context());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextByTypeAndNameResponse::CopyFrom(const GetContextByTypeAndNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextByTypeAndNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextByTypeAndNameResponse::IsInitialized() const {
  return true;
}

void GetContextByTypeAndNameResponse::InternalSwap(GetContextByTypeAndNameResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.context_, other->_impl_.context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextByTypeAndNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[91]);
}

// ===================================================================

class GetContextsByIDRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByIDRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsByIDRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextsByIDRequest::_Internal::transaction_options(const GetContextsByIDRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsByIDRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextsByIDRequest::GetContextsByIDRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByIDRequest)
}
GetContextsByIDRequest::GetContextsByIDRequest(const GetContextsByIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByIDRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByIDRequest)
}

inline void GetContextsByIDRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){arena}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetContextsByIDRequest::~GetContextsByIDRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByIDRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByIDRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsByIDRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByIDRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByIDRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 context_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<uint8_t>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByIDRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByIDRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 context_ids = 1;
  for (int i = 0, n = this->_internal_context_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_ids(i), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByIDRequest)
  return target;
}

size_t GetContextsByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByIDRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 context_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    total_size += 1 *
                  ::_pbi::FromIntSize(this->_internal_context_ids_size());
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByIDRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByIDRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByIDRequest::GetClassData() const { return &_class_data_; }


void GetContextsByIDRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByIDRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsByIDRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByIDRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByIDRequest::CopyFrom(const GetContextsByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByIDRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsByIDRequest::InternalSwap(GetContextsByIDRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByIDRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[92]);
}

// ===================================================================

class GetContextsByIDResponse::_Internal {
 public:
};

void GetContextsByIDResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsByIDResponse::GetContextsByIDResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByIDResponse)
}
GetContextsByIDResponse::GetContextsByIDResponse(const GetContextsByIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByIDResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByIDResponse)
}

inline void GetContextsByIDResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextsByIDResponse::~GetContextsByIDResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByIDResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByIDResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetContextsByIDResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByIDResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByIDResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByIDResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByIDResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByIDResponse)
  return target;
}

size_t GetContextsByIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByIDResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByIDResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByIDResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByIDResponse::GetClassData() const { return &_class_data_; }


void GetContextsByIDResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByIDResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsByIDResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByIDResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByIDResponse::CopyFrom(const GetContextsByIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByIDResponse::IsInitialized() const {
  return true;
}

void GetContextsByIDResponse::InternalSwap(GetContextsByIDResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByIDResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[93]);
}

// ===================================================================

class GetContextsByArtifactRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByArtifactRequest>()._impl_._has_bits_);
  static void set_has_artifact_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsByArtifactRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextsByArtifactRequest::_Internal::transaction_options(const GetContextsByArtifactRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsByArtifactRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextsByArtifactRequest::GetContextsByArtifactRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByArtifactRequest)
}
GetContextsByArtifactRequest::GetContextsByArtifactRequest(const GetContextsByArtifactRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByArtifactRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.artifact_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.artifact_id_ = from._impl_.artifact_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByArtifactRequest)
}

inline void GetContextsByArtifactRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.artifact_id_){int64_t{0}}
  };
}

GetContextsByArtifactRequest::~GetContextsByArtifactRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByArtifactRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByArtifactRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsByArtifactRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByArtifactRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByArtifactRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_.artifact_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByArtifactRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 artifact_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_artifact_id(&has_bits);
          _impl_.artifact_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByArtifactRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByArtifactRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 artifact_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_artifact_id(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByArtifactRequest)
  return target;
}

size_t GetContextsByArtifactRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByArtifactRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 artifact_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_artifact_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByArtifactRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByArtifactRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByArtifactRequest::GetClassData() const { return &_class_data_; }


void GetContextsByArtifactRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByArtifactRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsByArtifactRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByArtifactRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.artifact_id_ = from._impl_.artifact_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByArtifactRequest::CopyFrom(const GetContextsByArtifactRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByArtifactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByArtifactRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsByArtifactRequest::InternalSwap(GetContextsByArtifactRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContextsByArtifactRequest, _impl_.artifact_id_)
      + sizeof(GetContextsByArtifactRequest::_impl_.artifact_id_)
      - PROTOBUF_FIELD_OFFSET(GetContextsByArtifactRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByArtifactRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[94]);
}

// ===================================================================

class GetContextsByArtifactResponse::_Internal {
 public:
};

void GetContextsByArtifactResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsByArtifactResponse::GetContextsByArtifactResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByArtifactResponse)
}
GetContextsByArtifactResponse::GetContextsByArtifactResponse(const GetContextsByArtifactResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByArtifactResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByArtifactResponse)
}

inline void GetContextsByArtifactResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextsByArtifactResponse::~GetContextsByArtifactResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByArtifactResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByArtifactResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetContextsByArtifactResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByArtifactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByArtifactResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByArtifactResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByArtifactResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByArtifactResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByArtifactResponse)
  return target;
}

size_t GetContextsByArtifactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByArtifactResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByArtifactResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByArtifactResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByArtifactResponse::GetClassData() const { return &_class_data_; }


void GetContextsByArtifactResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByArtifactResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsByArtifactResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByArtifactResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByArtifactResponse::CopyFrom(const GetContextsByArtifactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByArtifactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByArtifactResponse::IsInitialized() const {
  return true;
}

void GetContextsByArtifactResponse::InternalSwap(GetContextsByArtifactResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByArtifactResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[95]);
}

// ===================================================================

class GetContextsByExecutionRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetContextsByExecutionRequest>()._impl_._has_bits_);
  static void set_has_execution_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetContextsByExecutionRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetContextsByExecutionRequest::_Internal::transaction_options(const GetContextsByExecutionRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetContextsByExecutionRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetContextsByExecutionRequest::GetContextsByExecutionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByExecutionRequest)
}
GetContextsByExecutionRequest::GetContextsByExecutionRequest(const GetContextsByExecutionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByExecutionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.execution_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.execution_id_ = from._impl_.execution_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByExecutionRequest)
}

inline void GetContextsByExecutionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.execution_id_){int64_t{0}}
  };
}

GetContextsByExecutionRequest::~GetContextsByExecutionRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByExecutionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByExecutionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetContextsByExecutionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByExecutionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByExecutionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_.execution_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByExecutionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 execution_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_execution_id(&has_bits);
          _impl_.execution_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByExecutionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByExecutionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 execution_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_execution_id(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByExecutionRequest)
  return target;
}

size_t GetContextsByExecutionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByExecutionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 execution_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_execution_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByExecutionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByExecutionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByExecutionRequest::GetClassData() const { return &_class_data_; }


void GetContextsByExecutionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByExecutionRequest*>(&to_msg);
  auto& from = static_cast<const GetContextsByExecutionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByExecutionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.execution_id_ = from._impl_.execution_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByExecutionRequest::CopyFrom(const GetContextsByExecutionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByExecutionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByExecutionRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetContextsByExecutionRequest::InternalSwap(GetContextsByExecutionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetContextsByExecutionRequest, _impl_.execution_id_)
      + sizeof(GetContextsByExecutionRequest::_impl_.execution_id_)
      - PROTOBUF_FIELD_OFFSET(GetContextsByExecutionRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByExecutionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[96]);
}

// ===================================================================

class GetContextsByExecutionResponse::_Internal {
 public:
};

void GetContextsByExecutionResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetContextsByExecutionResponse::GetContextsByExecutionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetContextsByExecutionResponse)
}
GetContextsByExecutionResponse::GetContextsByExecutionResponse(const GetContextsByExecutionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetContextsByExecutionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetContextsByExecutionResponse)
}

inline void GetContextsByExecutionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetContextsByExecutionResponse::~GetContextsByExecutionResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetContextsByExecutionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetContextsByExecutionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetContextsByExecutionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetContextsByExecutionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetContextsByExecutionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetContextsByExecutionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetContextsByExecutionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetContextsByExecutionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetContextsByExecutionResponse)
  return target;
}

size_t GetContextsByExecutionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetContextsByExecutionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetContextsByExecutionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetContextsByExecutionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetContextsByExecutionResponse::GetClassData() const { return &_class_data_; }


void GetContextsByExecutionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetContextsByExecutionResponse*>(&to_msg);
  auto& from = static_cast<const GetContextsByExecutionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetContextsByExecutionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetContextsByExecutionResponse::CopyFrom(const GetContextsByExecutionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetContextsByExecutionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContextsByExecutionResponse::IsInitialized() const {
  return true;
}

void GetContextsByExecutionResponse::InternalSwap(GetContextsByExecutionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetContextsByExecutionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[97]);
}

// ===================================================================

class GetParentContextsByContextRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetParentContextsByContextRequest>()._impl_._has_bits_);
  static void set_has_context_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetParentContextsByContextRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetParentContextsByContextRequest::_Internal::transaction_options(const GetParentContextsByContextRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetParentContextsByContextRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetParentContextsByContextRequest::GetParentContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetParentContextsByContextRequest)
}
GetParentContextsByContextRequest::GetParentContextsByContextRequest(const GetParentContextsByContextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetParentContextsByContextRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.context_id_ = from._impl_.context_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetParentContextsByContextRequest)
}

inline void GetParentContextsByContextRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){int64_t{0}}
  };
}

GetParentContextsByContextRequest::~GetParentContextsByContextRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetParentContextsByContextRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetParentContextsByContextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetParentContextsByContextRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetParentContextsByContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetParentContextsByContextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetParentContextsByContextRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 context_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_context_id(&has_bits);
          _impl_.context_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetParentContextsByContextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetParentContextsByContextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 context_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_id(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetParentContextsByContextRequest)
  return target;
}

size_t GetParentContextsByContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetParentContextsByContextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 context_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_context_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetParentContextsByContextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetParentContextsByContextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetParentContextsByContextRequest::GetClassData() const { return &_class_data_; }


void GetParentContextsByContextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetParentContextsByContextRequest*>(&to_msg);
  auto& from = static_cast<const GetParentContextsByContextRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetParentContextsByContextRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.context_id_ = from._impl_.context_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetParentContextsByContextRequest::CopyFrom(const GetParentContextsByContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetParentContextsByContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentContextsByContextRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetParentContextsByContextRequest::InternalSwap(GetParentContextsByContextRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetParentContextsByContextRequest, _impl_.context_id_)
      + sizeof(GetParentContextsByContextRequest::_impl_.context_id_)
      - PROTOBUF_FIELD_OFFSET(GetParentContextsByContextRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[98]);
}

// ===================================================================

class GetParentContextsByContextResponse::_Internal {
 public:
};

void GetParentContextsByContextResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetParentContextsByContextResponse::GetParentContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetParentContextsByContextResponse)
}
GetParentContextsByContextResponse::GetParentContextsByContextResponse(const GetParentContextsByContextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetParentContextsByContextResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetParentContextsByContextResponse)
}

inline void GetParentContextsByContextResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetParentContextsByContextResponse::~GetParentContextsByContextResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetParentContextsByContextResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetParentContextsByContextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetParentContextsByContextResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetParentContextsByContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetParentContextsByContextResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetParentContextsByContextResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetParentContextsByContextResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetParentContextsByContextResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetParentContextsByContextResponse)
  return target;
}

size_t GetParentContextsByContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetParentContextsByContextResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetParentContextsByContextResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetParentContextsByContextResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetParentContextsByContextResponse::GetClassData() const { return &_class_data_; }


void GetParentContextsByContextResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetParentContextsByContextResponse*>(&to_msg);
  auto& from = static_cast<const GetParentContextsByContextResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetParentContextsByContextResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetParentContextsByContextResponse::CopyFrom(const GetParentContextsByContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetParentContextsByContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentContextsByContextResponse::IsInitialized() const {
  return true;
}

void GetParentContextsByContextResponse::InternalSwap(GetParentContextsByContextResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[99]);
}

// ===================================================================

class GetChildrenContextsByContextRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetChildrenContextsByContextRequest>()._impl_._has_bits_);
  static void set_has_context_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetChildrenContextsByContextRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetChildrenContextsByContextRequest::_Internal::transaction_options(const GetChildrenContextsByContextRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetChildrenContextsByContextRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetChildrenContextsByContextRequest::GetChildrenContextsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetChildrenContextsByContextRequest)
}
GetChildrenContextsByContextRequest::GetChildrenContextsByContextRequest(const GetChildrenContextsByContextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChildrenContextsByContextRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.context_id_ = from._impl_.context_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetChildrenContextsByContextRequest)
}

inline void GetChildrenContextsByContextRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){int64_t{0}}
  };
}

GetChildrenContextsByContextRequest::~GetChildrenContextsByContextRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetChildrenContextsByContextRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChildrenContextsByContextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetChildrenContextsByContextRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChildrenContextsByContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetChildrenContextsByContextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenContextsByContextRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 context_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_context_id(&has_bits);
          _impl_.context_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenContextsByContextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetChildrenContextsByContextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 context_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_id(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetChildrenContextsByContextRequest)
  return target;
}

size_t GetChildrenContextsByContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetChildrenContextsByContextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 context_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_context_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenContextsByContextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChildrenContextsByContextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenContextsByContextRequest::GetClassData() const { return &_class_data_; }


void GetChildrenContextsByContextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChildrenContextsByContextRequest*>(&to_msg);
  auto& from = static_cast<const GetChildrenContextsByContextRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetChildrenContextsByContextRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.context_id_ = from._impl_.context_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenContextsByContextRequest::CopyFrom(const GetChildrenContextsByContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetChildrenContextsByContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenContextsByContextRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetChildrenContextsByContextRequest::InternalSwap(GetChildrenContextsByContextRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetChildrenContextsByContextRequest, _impl_.context_id_)
      + sizeof(GetChildrenContextsByContextRequest::_impl_.context_id_)
      - PROTOBUF_FIELD_OFFSET(GetChildrenContextsByContextRequest, _impl_.transaction_options_)>(
          reinterpret_cast<char*>(&_impl_.transaction_options_),
          reinterpret_cast<char*>(&other->_impl_.transaction_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[100]);
}

// ===================================================================

class GetChildrenContextsByContextResponse::_Internal {
 public:
};

void GetChildrenContextsByContextResponse::clear_contexts() {
  _impl_.contexts_.Clear();
}
GetChildrenContextsByContextResponse::GetChildrenContextsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetChildrenContextsByContextResponse)
}
GetChildrenContextsByContextResponse::GetChildrenContextsByContextResponse(const GetChildrenContextsByContextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChildrenContextsByContextResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){from._impl_.contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetChildrenContextsByContextResponse)
}

inline void GetChildrenContextsByContextResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetChildrenContextsByContextResponse::~GetChildrenContextsByContextResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetChildrenContextsByContextResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChildrenContextsByContextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.~RepeatedPtrField();
}

void GetChildrenContextsByContextResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChildrenContextsByContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetChildrenContextsByContextResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenContextsByContextResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenContextsByContextResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetChildrenContextsByContextResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetChildrenContextsByContextResponse)
  return target;
}

size_t GetChildrenContextsByContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetChildrenContextsByContextResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context contexts = 1;
  total_size += 1UL * this->_internal_contexts_size();
  for (const auto& msg : this->_impl_.contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenContextsByContextResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChildrenContextsByContextResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenContextsByContextResponse::GetClassData() const { return &_class_data_; }


void GetChildrenContextsByContextResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChildrenContextsByContextResponse*>(&to_msg);
  auto& from = static_cast<const GetChildrenContextsByContextResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetChildrenContextsByContextResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenContextsByContextResponse::CopyFrom(const GetChildrenContextsByContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetChildrenContextsByContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenContextsByContextResponse::IsInitialized() const {
  return true;
}

void GetChildrenContextsByContextResponse::InternalSwap(GetChildrenContextsByContextResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[101]);
}

// ===================================================================

class GetParentContextsByContextsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetParentContextsByContextsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetParentContextsByContextsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetParentContextsByContextsRequest::_Internal::transaction_options(const GetParentContextsByContextsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetParentContextsByContextsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetParentContextsByContextsRequest::GetParentContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetParentContextsByContextsRequest)
}
GetParentContextsByContextsRequest::GetParentContextsByContextsRequest(const GetParentContextsByContextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetParentContextsByContextsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetParentContextsByContextsRequest)
}

inline void GetParentContextsByContextsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){arena}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetParentContextsByContextsRequest::~GetParentContextsByContextsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetParentContextsByContextsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetParentContextsByContextsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetParentContextsByContextsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetParentContextsByContextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetParentContextsByContextsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetParentContextsByContextsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 context_ids = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetParentContextsByContextsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetParentContextsByContextsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 context_ids = 1 [packed = true];
  {
    int byte_size = _impl_._context_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_context_ids(), byte_size, target);
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetParentContextsByContextsRequest)
  return target;
}

size_t GetParentContextsByContextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetParentContextsByContextsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 context_ids = 1 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._context_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetParentContextsByContextsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetParentContextsByContextsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetParentContextsByContextsRequest::GetClassData() const { return &_class_data_; }


void GetParentContextsByContextsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetParentContextsByContextsRequest*>(&to_msg);
  auto& from = static_cast<const GetParentContextsByContextsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetParentContextsByContextsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetParentContextsByContextsRequest::CopyFrom(const GetParentContextsByContextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetParentContextsByContextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentContextsByContextsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetParentContextsByContextsRequest::InternalSwap(GetParentContextsByContextsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[102]);
}

// ===================================================================

class GetParentContextsByContextsResponse_ParentContextsPerChild::_Internal {
 public:
};

void GetParentContextsByContextsResponse_ParentContextsPerChild::clear_parent_contexts() {
  _impl_.parent_contexts_.Clear();
}
GetParentContextsByContextsResponse_ParentContextsPerChild::GetParentContextsByContextsResponse_ParentContextsPerChild(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
}
GetParentContextsByContextsResponse_ParentContextsPerChild::GetParentContextsByContextsResponse_ParentContextsPerChild(const GetParentContextsByContextsResponse_ParentContextsPerChild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetParentContextsByContextsResponse_ParentContextsPerChild* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_contexts_){from._impl_.parent_contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
}

inline void GetParentContextsByContextsResponse_ParentContextsPerChild::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetParentContextsByContextsResponse_ParentContextsPerChild::~GetParentContextsByContextsResponse_ParentContextsPerChild() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetParentContextsByContextsResponse_ParentContextsPerChild::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_contexts_.~RepeatedPtrField();
}

void GetParentContextsByContextsResponse_ParentContextsPerChild::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetParentContextsByContextsResponse_ParentContextsPerChild::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetParentContextsByContextsResponse_ParentContextsPerChild::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context parent_contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parent_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetParentContextsByContextsResponse_ParentContextsPerChild::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context parent_contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_parent_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_parent_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  return target;
}

size_t GetParentContextsByContextsResponse_ParentContextsPerChild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context parent_contexts = 1;
  total_size += 1UL * this->_internal_parent_contexts_size();
  for (const auto& msg : this->_impl_.parent_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetParentContextsByContextsResponse_ParentContextsPerChild::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetParentContextsByContextsResponse_ParentContextsPerChild::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetParentContextsByContextsResponse_ParentContextsPerChild::GetClassData() const { return &_class_data_; }


void GetParentContextsByContextsResponse_ParentContextsPerChild::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetParentContextsByContextsResponse_ParentContextsPerChild*>(&to_msg);
  auto& from = static_cast<const GetParentContextsByContextsResponse_ParentContextsPerChild&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parent_contexts_.MergeFrom(from._impl_.parent_contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetParentContextsByContextsResponse_ParentContextsPerChild::CopyFrom(const GetParentContextsByContextsResponse_ParentContextsPerChild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentContextsByContextsResponse_ParentContextsPerChild::IsInitialized() const {
  return true;
}

void GetParentContextsByContextsResponse_ParentContextsPerChild::InternalSwap(GetParentContextsByContextsResponse_ParentContextsPerChild* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parent_contexts_.InternalSwap(&other->_impl_.parent_contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextsResponse_ParentContextsPerChild::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[103]);
}

// ===================================================================

GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse() {}
GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::MergeFrom(const GetParentContextsByContextsResponse_ContextsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[104]);
}

// ===================================================================

class GetParentContextsByContextsResponse::_Internal {
 public:
};

GetParentContextsByContextsResponse::GetParentContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetParentContextsByContextsResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetParentContextsByContextsResponse)
}
GetParentContextsByContextsResponse::GetParentContextsByContextsResponse(const GetParentContextsByContextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetParentContextsByContextsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.contexts_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetParentContextsByContextsResponse)
}

inline void GetParentContextsByContextsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.contexts_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetParentContextsByContextsResponse::~GetParentContextsByContextsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetParentContextsByContextsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetParentContextsByContextsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.Destruct();
  _impl_.contexts_.~MapField();
}

void GetParentContextsByContextsResponse::ArenaDtor(void* object) {
  GetParentContextsByContextsResponse* _this = reinterpret_cast< GetParentContextsByContextsResponse* >(object);
  _this->_impl_.contexts_.Destruct();
}
void GetParentContextsByContextsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetParentContextsByContextsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetParentContextsByContextsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetParentContextsByContextsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int64, .ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild> contexts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.contexts_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetParentContextsByContextsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetParentContextsByContextsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild> contexts = 2;
  if (!this->_internal_contexts().empty()) {
    using MapType = ::_pb::Map<int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild>;
    using WireHelper = GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_contexts();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetParentContextsByContextsResponse)
  return target;
}

size_t GetParentContextsByContextsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetParentContextsByContextsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .ml_metadata.GetParentContextsByContextsResponse.ParentContextsPerChild> contexts = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_contexts_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >::const_iterator
      it = this->_internal_contexts().begin();
      it != this->_internal_contexts().end(); ++it) {
    total_size += GetParentContextsByContextsResponse_ContextsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetParentContextsByContextsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetParentContextsByContextsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetParentContextsByContextsResponse::GetClassData() const { return &_class_data_; }


void GetParentContextsByContextsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetParentContextsByContextsResponse*>(&to_msg);
  auto& from = static_cast<const GetParentContextsByContextsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetParentContextsByContextsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetParentContextsByContextsResponse::CopyFrom(const GetParentContextsByContextsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetParentContextsByContextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetParentContextsByContextsResponse::IsInitialized() const {
  return true;
}

void GetParentContextsByContextsResponse::InternalSwap(GetParentContextsByContextsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetParentContextsByContextsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[105]);
}

// ===================================================================

class GetChildrenContextsByContextsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetChildrenContextsByContextsRequest>()._impl_._has_bits_);
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetChildrenContextsByContextsRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::TransactionOptions&
GetChildrenContextsByContextsRequest::_Internal::transaction_options(const GetChildrenContextsByContextsRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetChildrenContextsByContextsRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetChildrenContextsByContextsRequest::GetChildrenContextsByContextsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetChildrenContextsByContextsRequest)
}
GetChildrenContextsByContextsRequest::GetChildrenContextsByContextsRequest(const GetChildrenContextsByContextsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChildrenContextsByContextsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){from._impl_.context_ids_}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetChildrenContextsByContextsRequest)
}

inline void GetChildrenContextsByContextsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.context_ids_){arena}
    , /*decltype(_impl_._context_ids_cached_byte_size_)*/{0}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetChildrenContextsByContextsRequest::~GetChildrenContextsByContextsRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetChildrenContextsByContextsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChildrenContextsByContextsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.context_ids_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetChildrenContextsByContextsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChildrenContextsByContextsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetChildrenContextsByContextsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.context_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
    _impl_.transaction_options_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenContextsByContextsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int64 context_ids = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_context_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_context_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenContextsByContextsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetChildrenContextsByContextsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 context_ids = 1 [packed = true];
  {
    int byte_size = _impl_._context_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_context_ids(), byte_size, target);
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetChildrenContextsByContextsRequest)
  return target;
}

size_t GetChildrenContextsByContextsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetChildrenContextsByContextsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 context_ids = 1 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.context_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._context_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.transaction_options_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenContextsByContextsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChildrenContextsByContextsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenContextsByContextsRequest::GetClassData() const { return &_class_data_; }


void GetChildrenContextsByContextsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChildrenContextsByContextsRequest*>(&to_msg);
  auto& from = static_cast<const GetChildrenContextsByContextsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetChildrenContextsByContextsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.context_ids_.MergeFrom(from._impl_.context_ids_);
  if (from._internal_has_transaction_options()) {
    _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
        from._internal_transaction_options());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenContextsByContextsRequest::CopyFrom(const GetChildrenContextsByContextsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetChildrenContextsByContextsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenContextsByContextsRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetChildrenContextsByContextsRequest::InternalSwap(GetChildrenContextsByContextsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.context_ids_.InternalSwap(&other->_impl_.context_ids_);
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[106]);
}

// ===================================================================

class GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_Internal {
 public:
};

void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::clear_children_contexts() {
  _impl_.children_contexts_.Clear();
}
GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
}
GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent(const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.children_contexts_){from._impl_.children_contexts_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
}

inline void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.children_contexts_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::~GetChildrenContextsByContextsResponse_ChildrenContextsPerParent() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.children_contexts_.~RepeatedPtrField();
}

void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.children_contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Context children_contexts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_children_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Context children_contexts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_children_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_children_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  return target;
}

size_t GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Context children_contexts = 1;
  total_size += 1UL * this->_internal_children_contexts_size();
  for (const auto& msg : this->_impl_.children_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::GetClassData() const { return &_class_data_; }


void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChildrenContextsByContextsResponse_ChildrenContextsPerParent*>(&to_msg);
  auto& from = static_cast<const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.children_contexts_.MergeFrom(from._impl_.children_contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::CopyFrom(const GetChildrenContextsByContextsResponse_ChildrenContextsPerParent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::IsInitialized() const {
  return true;
}

void GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::InternalSwap(GetChildrenContextsByContextsResponse_ChildrenContextsPerParent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.children_contexts_.InternalSwap(&other->_impl_.children_contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextsResponse_ChildrenContextsPerParent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[107]);
}

// ===================================================================

GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse() {}
GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::MergeFrom(const GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[108]);
}

// ===================================================================

class GetChildrenContextsByContextsResponse::_Internal {
 public:
};

GetChildrenContextsByContextsResponse::GetChildrenContextsByContextsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetChildrenContextsByContextsResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetChildrenContextsByContextsResponse)
}
GetChildrenContextsByContextsResponse::GetChildrenContextsByContextsResponse(const GetChildrenContextsByContextsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetChildrenContextsByContextsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.contexts_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetChildrenContextsByContextsResponse)
}

inline void GetChildrenContextsByContextsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.contexts_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetChildrenContextsByContextsResponse::~GetChildrenContextsByContextsResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetChildrenContextsByContextsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetChildrenContextsByContextsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.contexts_.Destruct();
  _impl_.contexts_.~MapField();
}

void GetChildrenContextsByContextsResponse::ArenaDtor(void* object) {
  GetChildrenContextsByContextsResponse* _this = reinterpret_cast< GetChildrenContextsByContextsResponse* >(object);
  _this->_impl_.contexts_.Destruct();
}
void GetChildrenContextsByContextsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetChildrenContextsByContextsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetChildrenContextsByContextsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contexts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetChildrenContextsByContextsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<int64, .ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent> contexts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.contexts_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetChildrenContextsByContextsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetChildrenContextsByContextsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent> contexts = 2;
  if (!this->_internal_contexts().empty()) {
    using MapType = ::_pb::Map<int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent>;
    using WireHelper = GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_contexts();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetChildrenContextsByContextsResponse)
  return target;
}

size_t GetChildrenContextsByContextsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetChildrenContextsByContextsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .ml_metadata.GetChildrenContextsByContextsResponse.ChildrenContextsPerParent> contexts = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_contexts_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< int64_t, ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >::const_iterator
      it = this->_internal_contexts().begin();
      it != this->_internal_contexts().end(); ++it) {
    total_size += GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetChildrenContextsByContextsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetChildrenContextsByContextsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetChildrenContextsByContextsResponse::GetClassData() const { return &_class_data_; }


void GetChildrenContextsByContextsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetChildrenContextsByContextsResponse*>(&to_msg);
  auto& from = static_cast<const GetChildrenContextsByContextsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetChildrenContextsByContextsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.contexts_.MergeFrom(from._impl_.contexts_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetChildrenContextsByContextsResponse::CopyFrom(const GetChildrenContextsByContextsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetChildrenContextsByContextsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenContextsByContextsResponse::IsInitialized() const {
  return true;
}

void GetChildrenContextsByContextsResponse::InternalSwap(GetChildrenContextsByContextsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.contexts_.InternalSwap(&other->_impl_.contexts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetChildrenContextsByContextsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[109]);
}

// ===================================================================

class GetArtifactsByContextRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByContextRequest>()._impl_._has_bits_);
  static void set_has_context_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::ListOperationOptions& options(const GetArtifactsByContextRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetArtifactsByContextRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetArtifactsByContextRequest::_Internal::options(const GetArtifactsByContextRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetArtifactsByContextRequest::_Internal::transaction_options(const GetArtifactsByContextRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetArtifactsByContextRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetArtifactsByContextRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetArtifactsByContextRequest::GetArtifactsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByContextRequest)
}
GetArtifactsByContextRequest::GetArtifactsByContextRequest(const GetArtifactsByContextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByContextRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.context_id_ = from._impl_.context_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByContextRequest)
}

inline void GetArtifactsByContextRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){int64_t{0}}
  };
}

GetArtifactsByContextRequest::~GetArtifactsByContextRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByContextRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByContextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetArtifactsByContextRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByContextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByContextRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 context_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_context_id(&has_bits);
          _impl_.context_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ListOperationOptions options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByContextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByContextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 context_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_id(), target);
  }

  // optional .ml_metadata.ListOperationOptions options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByContextRequest)
  return target;
}

size_t GetArtifactsByContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByContextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.ListOperationOptions options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 context_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_context_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByContextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByContextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByContextRequest::GetClassData() const { return &_class_data_; }


void GetArtifactsByContextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByContextRequest*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByContextRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByContextRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.context_id_ = from._impl_.context_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByContextRequest::CopyFrom(const GetArtifactsByContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByContextRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetArtifactsByContextRequest::InternalSwap(GetArtifactsByContextRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetArtifactsByContextRequest, _impl_.context_id_)
      + sizeof(GetArtifactsByContextRequest::_impl_.context_id_)
      - PROTOBUF_FIELD_OFFSET(GetArtifactsByContextRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByContextRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[110]);
}

// ===================================================================

class GetArtifactsByContextResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetArtifactsByContextResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void GetArtifactsByContextResponse::clear_artifacts() {
  _impl_.artifacts_.Clear();
}
GetArtifactsByContextResponse::GetArtifactsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetArtifactsByContextResponse)
}
GetArtifactsByContextResponse::GetArtifactsByContextResponse(const GetArtifactsByContextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetArtifactsByContextResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){from._impl_.artifacts_}
    , decltype(_impl_.next_page_token_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetArtifactsByContextResponse)
}

inline void GetArtifactsByContextResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.artifacts_){arena}
    , decltype(_impl_.next_page_token_){}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetArtifactsByContextResponse::~GetArtifactsByContextResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetArtifactsByContextResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetArtifactsByContextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifacts_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void GetArtifactsByContextResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetArtifactsByContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetArtifactsByContextResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifacts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.next_page_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetArtifactsByContextResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Artifact artifacts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifacts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetArtifactsByContextResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetArtifactsByContextResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetArtifactsByContextResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifacts_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifacts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetArtifactsByContextResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetArtifactsByContextResponse)
  return target;
}

size_t GetArtifactsByContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetArtifactsByContextResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Artifact artifacts = 1;
  total_size += 1UL * this->_internal_artifacts_size();
  for (const auto& msg : this->_impl_.artifacts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional string next_page_token = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetArtifactsByContextResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetArtifactsByContextResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetArtifactsByContextResponse::GetClassData() const { return &_class_data_; }


void GetArtifactsByContextResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetArtifactsByContextResponse*>(&to_msg);
  auto& from = static_cast<const GetArtifactsByContextResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetArtifactsByContextResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifacts_.MergeFrom(from._impl_.artifacts_);
  if (from._internal_has_next_page_token()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetArtifactsByContextResponse::CopyFrom(const GetArtifactsByContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetArtifactsByContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetArtifactsByContextResponse::IsInitialized() const {
  return true;
}

void GetArtifactsByContextResponse::InternalSwap(GetArtifactsByContextResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.artifacts_.InternalSwap(&other->_impl_.artifacts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetArtifactsByContextResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[111]);
}

// ===================================================================

class GetExecutionsByContextRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByContextRequest>()._impl_._has_bits_);
  static void set_has_context_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::ListOperationOptions& options(const GetExecutionsByContextRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsByContextRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::ListOperationOptions&
GetExecutionsByContextRequest::_Internal::options(const GetExecutionsByContextRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetExecutionsByContextRequest::_Internal::transaction_options(const GetExecutionsByContextRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsByContextRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetExecutionsByContextRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetExecutionsByContextRequest::GetExecutionsByContextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByContextRequest)
}
GetExecutionsByContextRequest::GetExecutionsByContextRequest(const GetExecutionsByContextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByContextRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::ListOperationOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  _this->_impl_.context_id_ = from._impl_.context_id_;
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByContextRequest)
}

inline void GetExecutionsByContextRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.context_id_){int64_t{0}}
  };
}

GetExecutionsByContextRequest::~GetExecutionsByContextRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByContextRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByContextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsByContextRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByContextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_.context_id_ = int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByContextRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int64 context_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_context_id(&has_bits);
          _impl_.context_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.ListOperationOptions options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByContextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByContextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int64 context_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_context_id(), target);
  }

  // optional .ml_metadata.ListOperationOptions options = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByContextRequest)
  return target;
}

size_t GetExecutionsByContextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByContextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.ListOperationOptions options = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional int64 context_id = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_context_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByContextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByContextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByContextRequest::GetClassData() const { return &_class_data_; }


void GetExecutionsByContextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByContextRequest*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByContextRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByContextRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::ListOperationOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.context_id_ = from._impl_.context_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByContextRequest::CopyFrom(const GetExecutionsByContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByContextRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsByContextRequest::InternalSwap(GetExecutionsByContextRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetExecutionsByContextRequest, _impl_.context_id_)
      + sizeof(GetExecutionsByContextRequest::_impl_.context_id_)
      - PROTOBUF_FIELD_OFFSET(GetExecutionsByContextRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByContextRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[112]);
}

// ===================================================================

class GetExecutionsByContextResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetExecutionsByContextResponse>()._impl_._has_bits_);
  static void set_has_next_page_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetExecutionsByContextResponse* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::TransactionOptions&
GetExecutionsByContextResponse::_Internal::transaction_options(const GetExecutionsByContextResponse* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetExecutionsByContextResponse::clear_executions() {
  _impl_.executions_.Clear();
}
void GetExecutionsByContextResponse::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetExecutionsByContextResponse::GetExecutionsByContextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetExecutionsByContextResponse)
}
GetExecutionsByContextResponse::GetExecutionsByContextResponse(const GetExecutionsByContextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetExecutionsByContextResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){from._impl_.executions_}
    , decltype(_impl_.next_page_token_){}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_next_page_token()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetExecutionsByContextResponse)
}

inline void GetExecutionsByContextResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.executions_){arena}
    , decltype(_impl_.next_page_token_){}
    , decltype(_impl_.transaction_options_){nullptr}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetExecutionsByContextResponse::~GetExecutionsByContextResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetExecutionsByContextResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetExecutionsByContextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.executions_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetExecutionsByContextResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetExecutionsByContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetExecutionsByContextResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.executions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.next_page_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetExecutionsByContextResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.Execution executions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_executions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          #ifndef NDEBUG
          ::_pbi::VerifyUTF8(str, "ml_metadata.GetExecutionsByContextResponse.next_page_token");
          #endif  // !NDEBUG
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetExecutionsByContextResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetExecutionsByContextResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_executions_size()); i < n; i++) {
    const auto& repfield = this->_internal_executions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string next_page_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ml_metadata.GetExecutionsByContextResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetExecutionsByContextResponse)
  return target;
}

size_t GetExecutionsByContextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetExecutionsByContextResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.Execution executions = 1;
  total_size += 1UL * this->_internal_executions_size();
  for (const auto& msg : this->_impl_.executions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string next_page_token = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_next_page_token());
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetExecutionsByContextResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetExecutionsByContextResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetExecutionsByContextResponse::GetClassData() const { return &_class_data_; }


void GetExecutionsByContextResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetExecutionsByContextResponse*>(&to_msg);
  auto& from = static_cast<const GetExecutionsByContextResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetExecutionsByContextResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.executions_.MergeFrom(from._impl_.executions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_next_page_token(from._internal_next_page_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetExecutionsByContextResponse::CopyFrom(const GetExecutionsByContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetExecutionsByContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExecutionsByContextResponse::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetExecutionsByContextResponse::InternalSwap(GetExecutionsByContextResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.executions_.InternalSwap(&other->_impl_.executions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
  swap(_impl_.transaction_options_, other->_impl_.transaction_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetExecutionsByContextResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[113]);
}

// ===================================================================

class GetLineageGraphRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLineageGraphRequest>()._impl_._has_bits_);
  static const ::ml_metadata::LineageGraphQueryOptions& options(const GetLineageGraphRequest* msg);
  static void set_has_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetLineageGraphRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::LineageGraphQueryOptions&
GetLineageGraphRequest::_Internal::options(const GetLineageGraphRequest* msg) {
  return *msg->_impl_.options_;
}
const ::ml_metadata::TransactionOptions&
GetLineageGraphRequest::_Internal::transaction_options(const GetLineageGraphRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetLineageGraphRequest::clear_options() {
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetLineageGraphRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetLineageGraphRequest::GetLineageGraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetLineageGraphRequest)
}
GetLineageGraphRequest::GetLineageGraphRequest(const GetLineageGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLineageGraphRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_options()) {
    _this->_impl_.options_ = new ::ml_metadata::LineageGraphQueryOptions(*from._impl_.options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetLineageGraphRequest)
}

inline void GetLineageGraphRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
  };
}

GetLineageGraphRequest::~GetLineageGraphRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetLineageGraphRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLineageGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
}

void GetLineageGraphRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLineageGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetLineageGraphRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLineageGraphRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.LineageGraphQueryOptions options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLineageGraphRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetLineageGraphRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.LineageGraphQueryOptions options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::options(this),
        _Internal::options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetLineageGraphRequest)
  return target;
}

size_t GetLineageGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetLineageGraphRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .ml_metadata.LineageGraphQueryOptions options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLineageGraphRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLineageGraphRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLineageGraphRequest::GetClassData() const { return &_class_data_; }


void GetLineageGraphRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLineageGraphRequest*>(&to_msg);
  auto& from = static_cast<const GetLineageGraphRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetLineageGraphRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_options()->::ml_metadata::LineageGraphQueryOptions::MergeFrom(
          from._internal_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLineageGraphRequest::CopyFrom(const GetLineageGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetLineageGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLineageGraphRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetLineageGraphRequest::InternalSwap(GetLineageGraphRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLineageGraphRequest, _impl_.transaction_options_)
      + sizeof(GetLineageGraphRequest::_impl_.transaction_options_)
      - PROTOBUF_FIELD_OFFSET(GetLineageGraphRequest, _impl_.options_)>(
          reinterpret_cast<char*>(&_impl_.options_),
          reinterpret_cast<char*>(&other->_impl_.options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLineageGraphRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[114]);
}

// ===================================================================

class GetLineageGraphResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLineageGraphResponse>()._impl_._has_bits_);
  static const ::ml_metadata::LineageGraph& subgraph(const GetLineageGraphResponse* msg);
  static void set_has_subgraph(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::LineageGraph&
GetLineageGraphResponse::_Internal::subgraph(const GetLineageGraphResponse* msg) {
  return *msg->_impl_.subgraph_;
}
void GetLineageGraphResponse::clear_subgraph() {
  if (_impl_.subgraph_ != nullptr) _impl_.subgraph_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetLineageGraphResponse::GetLineageGraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetLineageGraphResponse)
}
GetLineageGraphResponse::GetLineageGraphResponse(const GetLineageGraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLineageGraphResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subgraph_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_subgraph()) {
    _this->_impl_.subgraph_ = new ::ml_metadata::LineageGraph(*from._impl_.subgraph_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetLineageGraphResponse)
}

inline void GetLineageGraphResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subgraph_){nullptr}
  };
}

GetLineageGraphResponse::~GetLineageGraphResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetLineageGraphResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLineageGraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.subgraph_;
}

void GetLineageGraphResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLineageGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetLineageGraphResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.subgraph_ != nullptr);
    _impl_.subgraph_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLineageGraphResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.LineageGraph subgraph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subgraph(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLineageGraphResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetLineageGraphResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.LineageGraph subgraph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subgraph(this),
        _Internal::subgraph(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetLineageGraphResponse)
  return target;
}

size_t GetLineageGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetLineageGraphResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.LineageGraph subgraph = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subgraph_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLineageGraphResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLineageGraphResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLineageGraphResponse::GetClassData() const { return &_class_data_; }


void GetLineageGraphResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLineageGraphResponse*>(&to_msg);
  auto& from = static_cast<const GetLineageGraphResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetLineageGraphResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_subgraph()) {
    _this->_internal_mutable_subgraph()->::ml_metadata::LineageGraph::MergeFrom(
        from._internal_subgraph());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLineageGraphResponse::CopyFrom(const GetLineageGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetLineageGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLineageGraphResponse::IsInitialized() const {
  return true;
}

void GetLineageGraphResponse::InternalSwap(GetLineageGraphResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.subgraph_, other->_impl_.subgraph_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLineageGraphResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[115]);
}

// ===================================================================

class GetLineageSubgraphRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLineageSubgraphRequest>()._impl_._has_bits_);
  static const ::ml_metadata::LineageSubgraphQueryOptions& lineage_subgraph_query_options(const GetLineageSubgraphRequest* msg);
  static void set_has_lineage_subgraph_query_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& read_mask(const GetLineageSubgraphRequest* msg);
  static void set_has_read_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ml_metadata::TransactionOptions& transaction_options(const GetLineageSubgraphRequest* msg);
  static void set_has_transaction_options(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ml_metadata::LineageSubgraphQueryOptions&
GetLineageSubgraphRequest::_Internal::lineage_subgraph_query_options(const GetLineageSubgraphRequest* msg) {
  return *msg->_impl_.lineage_subgraph_query_options_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
GetLineageSubgraphRequest::_Internal::read_mask(const GetLineageSubgraphRequest* msg) {
  return *msg->_impl_.read_mask_;
}
const ::ml_metadata::TransactionOptions&
GetLineageSubgraphRequest::_Internal::transaction_options(const GetLineageSubgraphRequest* msg) {
  return *msg->_impl_.transaction_options_;
}
void GetLineageSubgraphRequest::clear_lineage_subgraph_query_options() {
  if (_impl_.lineage_subgraph_query_options_ != nullptr) _impl_.lineage_subgraph_query_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GetLineageSubgraphRequest::clear_read_mask() {
  if (_impl_.read_mask_ != nullptr) _impl_.read_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void GetLineageSubgraphRequest::clear_transaction_options() {
  if (_impl_.transaction_options_ != nullptr) _impl_.transaction_options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetLineageSubgraphRequest::GetLineageSubgraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetLineageSubgraphRequest)
}
GetLineageSubgraphRequest::GetLineageSubgraphRequest(const GetLineageSubgraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLineageSubgraphRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lineage_subgraph_query_options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.read_mask_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_lineage_subgraph_query_options()) {
    _this->_impl_.lineage_subgraph_query_options_ = new ::ml_metadata::LineageSubgraphQueryOptions(*from._impl_.lineage_subgraph_query_options_);
  }
  if (from._internal_has_transaction_options()) {
    _this->_impl_.transaction_options_ = new ::ml_metadata::TransactionOptions(*from._impl_.transaction_options_);
  }
  if (from._internal_has_read_mask()) {
    _this->_impl_.read_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.read_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetLineageSubgraphRequest)
}

inline void GetLineageSubgraphRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lineage_subgraph_query_options_){nullptr}
    , decltype(_impl_.transaction_options_){nullptr}
    , decltype(_impl_.read_mask_){nullptr}
  };
}

GetLineageSubgraphRequest::~GetLineageSubgraphRequest() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetLineageSubgraphRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLineageSubgraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.lineage_subgraph_query_options_;
  if (this != internal_default_instance()) delete _impl_.transaction_options_;
  if (this != internal_default_instance()) delete _impl_.read_mask_;
}

void GetLineageSubgraphRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLineageSubgraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetLineageSubgraphRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.lineage_subgraph_query_options_ != nullptr);
      _impl_.lineage_subgraph_query_options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.transaction_options_ != nullptr);
      _impl_.transaction_options_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.read_mask_ != nullptr);
      _impl_.read_mask_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLineageSubgraphRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.LineageSubgraphQueryOptions lineage_subgraph_query_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_lineage_subgraph_query_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .ml_metadata.TransactionOptions transaction_options = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction_options(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.FieldMask read_mask = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_read_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLineageSubgraphRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetLineageSubgraphRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.LineageSubgraphQueryOptions lineage_subgraph_query_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::lineage_subgraph_query_options(this),
        _Internal::lineage_subgraph_query_options(this).GetCachedSize(), target, stream);
  }

  // optional .ml_metadata.TransactionOptions transaction_options = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transaction_options(this),
        _Internal::transaction_options(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.FieldMask read_mask = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::read_mask(this),
        _Internal::read_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetLineageSubgraphRequest)
  return target;
}

size_t GetLineageSubgraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetLineageSubgraphRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .ml_metadata.LineageSubgraphQueryOptions lineage_subgraph_query_options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.lineage_subgraph_query_options_);
    }

    // optional .ml_metadata.TransactionOptions transaction_options = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.transaction_options_);
    }

    // optional .google.protobuf.FieldMask read_mask = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.read_mask_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLineageSubgraphRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLineageSubgraphRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLineageSubgraphRequest::GetClassData() const { return &_class_data_; }


void GetLineageSubgraphRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLineageSubgraphRequest*>(&to_msg);
  auto& from = static_cast<const GetLineageSubgraphRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetLineageSubgraphRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_lineage_subgraph_query_options()->::ml_metadata::LineageSubgraphQueryOptions::MergeFrom(
          from._internal_lineage_subgraph_query_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_transaction_options()->::ml_metadata::TransactionOptions::MergeFrom(
          from._internal_transaction_options());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_read_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
          from._internal_read_mask());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLineageSubgraphRequest::CopyFrom(const GetLineageSubgraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetLineageSubgraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLineageSubgraphRequest::IsInitialized() const {
  if (_internal_has_transaction_options()) {
    if (!_impl_.transaction_options_->IsInitialized()) return false;
  }
  return true;
}

void GetLineageSubgraphRequest::InternalSwap(GetLineageSubgraphRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLineageSubgraphRequest, _impl_.read_mask_)
      + sizeof(GetLineageSubgraphRequest::_impl_.read_mask_)
      - PROTOBUF_FIELD_OFFSET(GetLineageSubgraphRequest, _impl_.lineage_subgraph_query_options_)>(
          reinterpret_cast<char*>(&_impl_.lineage_subgraph_query_options_),
          reinterpret_cast<char*>(&other->_impl_.lineage_subgraph_query_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLineageSubgraphRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[116]);
}

// ===================================================================

class GetLineageSubgraphResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<GetLineageSubgraphResponse>()._impl_._has_bits_);
  static const ::ml_metadata::LineageGraph& lineage_subgraph(const GetLineageSubgraphResponse* msg);
  static void set_has_lineage_subgraph(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ml_metadata::LineageGraph&
GetLineageSubgraphResponse::_Internal::lineage_subgraph(const GetLineageSubgraphResponse* msg) {
  return *msg->_impl_.lineage_subgraph_;
}
void GetLineageSubgraphResponse::clear_lineage_subgraph() {
  if (_impl_.lineage_subgraph_ != nullptr) _impl_.lineage_subgraph_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetLineageSubgraphResponse::GetLineageSubgraphResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.GetLineageSubgraphResponse)
}
GetLineageSubgraphResponse::GetLineageSubgraphResponse(const GetLineageSubgraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetLineageSubgraphResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lineage_subgraph_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_lineage_subgraph()) {
    _this->_impl_.lineage_subgraph_ = new ::ml_metadata::LineageGraph(*from._impl_.lineage_subgraph_);
  }
  // @@protoc_insertion_point(copy_constructor:ml_metadata.GetLineageSubgraphResponse)
}

inline void GetLineageSubgraphResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.lineage_subgraph_){nullptr}
  };
}

GetLineageSubgraphResponse::~GetLineageSubgraphResponse() {
  // @@protoc_insertion_point(destructor:ml_metadata.GetLineageSubgraphResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetLineageSubgraphResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.lineage_subgraph_;
}

void GetLineageSubgraphResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetLineageSubgraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.GetLineageSubgraphResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.lineage_subgraph_ != nullptr);
    _impl_.lineage_subgraph_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLineageSubgraphResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .ml_metadata.LineageGraph lineage_subgraph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_lineage_subgraph(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetLineageSubgraphResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.GetLineageSubgraphResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ml_metadata.LineageGraph lineage_subgraph = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::lineage_subgraph(this),
        _Internal::lineage_subgraph(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.GetLineageSubgraphResponse)
  return target;
}

size_t GetLineageSubgraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.GetLineageSubgraphResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ml_metadata.LineageGraph lineage_subgraph = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lineage_subgraph_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetLineageSubgraphResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetLineageSubgraphResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetLineageSubgraphResponse::GetClassData() const { return &_class_data_; }


void GetLineageSubgraphResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetLineageSubgraphResponse*>(&to_msg);
  auto& from = static_cast<const GetLineageSubgraphResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.GetLineageSubgraphResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_lineage_subgraph()) {
    _this->_internal_mutable_lineage_subgraph()->::ml_metadata::LineageGraph::MergeFrom(
        from._internal_lineage_subgraph());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetLineageSubgraphResponse::CopyFrom(const GetLineageSubgraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.GetLineageSubgraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLineageSubgraphResponse::IsInitialized() const {
  return true;
}

void GetLineageSubgraphResponse::InternalSwap(GetLineageSubgraphResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.lineage_subgraph_, other->_impl_.lineage_subgraph_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLineageSubgraphResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_getter, &descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fproto_2fmetadata_5fstore_5fservice_2eproto[117]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ml_metadata
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ml_metadata::ArtifactAndType*
Arena::CreateMaybeMessage< ::ml_metadata::ArtifactAndType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::ArtifactAndType >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::ArtifactStructMap_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::ArtifactStructMap*
Arena::CreateMaybeMessage< ::ml_metadata::ArtifactStructMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::ArtifactStructMap >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::ArtifactStructList*
Arena::CreateMaybeMessage< ::ml_metadata::ArtifactStructList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::ArtifactStructList >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::ArtifactStruct*
Arena::CreateMaybeMessage< ::ml_metadata::ArtifactStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::ArtifactStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutArtifactsRequest_Options*
Arena::CreateMaybeMessage< ::ml_metadata::PutArtifactsRequest_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutArtifactsRequest_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutArtifactsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutArtifactsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutArtifactsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutArtifactsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutArtifactsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutArtifactsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutArtifactTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutArtifactTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutArtifactTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutArtifactTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutArtifactTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutArtifactTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutEventsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutEventsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutEventsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutEventsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutEventsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutEventsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionRequest_ArtifactAndEvent*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionRequest_ArtifactAndEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionRequest_Options*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionRequest_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionRequest_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutExecutionResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutExecutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutExecutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutLineageSubgraphRequest_EventEdge*
Arena::CreateMaybeMessage< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutLineageSubgraphRequest_EventEdge >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutLineageSubgraphRequest_Options*
Arena::CreateMaybeMessage< ::ml_metadata::PutLineageSubgraphRequest_Options >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutLineageSubgraphRequest_Options >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutLineageSubgraphRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutLineageSubgraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutLineageSubgraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutLineageSubgraphResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutLineageSubgraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutLineageSubgraphResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutTypesRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutTypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutTypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutTypesResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutTypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutTypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutContextTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutContextTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutContextTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutContextTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutContextTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutContextTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutContextsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutContextsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutContextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutContextsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutContextsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutContextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutAttributionsAndAssociationsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutAttributionsAndAssociationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutAttributionsAndAssociationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutAttributionsAndAssociationsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutAttributionsAndAssociationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutAttributionsAndAssociationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutParentContextsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::PutParentContextsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutParentContextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::PutParentContextsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::PutParentContextsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::PutParentContextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactByTypeAndNameRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactByTypeAndNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactByTypeAndNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactByTypeAndNameResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactByTypeAndNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactByTypeAndNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByURIRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByURIRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByURIRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByURIResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByURIResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByURIResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesByExternalIdsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesByExternalIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesByExternalIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesByExternalIdsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesByExternalIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesByExternalIdsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionByTypeAndNameRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionByTypeAndNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionByTypeAndNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionByTypeAndNameResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionByTypeAndNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionByTypeAndNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetEventsByExecutionIDsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetEventsByExecutionIDsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetEventsByExecutionIDsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetEventsByExecutionIDsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetEventsByExecutionIDsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetEventsByExecutionIDsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetEventsByArtifactIDsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetEventsByArtifactIDsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetEventsByArtifactIDsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetEventsByArtifactIDsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetEventsByArtifactIDsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetEventsByArtifactIDsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactTypesByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactTypesByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactTypesByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionTypesByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionTypesByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionTypesByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextTypesByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextTypesByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextTypesByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByTypeRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByTypeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByTypeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByTypeResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByTypeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByTypeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextByTypeAndNameRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextByTypeAndNameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextByTypeAndNameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextByTypeAndNameResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextByTypeAndNameResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextByTypeAndNameResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByIDRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByIDRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByIDResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByIDResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByArtifactRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByArtifactRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByArtifactRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByArtifactResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByArtifactResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByArtifactResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByExecutionRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByExecutionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByExecutionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetContextsByExecutionResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetContextsByExecutionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetContextsByExecutionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextsResponse_ParentContextsPerChild >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextsResponse_ContextsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetParentContextsByContextsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetParentContextsByContextsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetParentContextsByContextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextsRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextsResponse_ChildrenContextsPerParent >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextsResponse_ContextsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetChildrenContextsByContextsResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetChildrenContextsByContextsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetChildrenContextsByContextsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByContextRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByContextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByContextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetArtifactsByContextResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetArtifactsByContextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetArtifactsByContextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByContextRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByContextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByContextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetExecutionsByContextResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetExecutionsByContextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetExecutionsByContextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetLineageGraphRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetLineageGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetLineageGraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetLineageGraphResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetLineageGraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetLineageGraphResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetLineageSubgraphRequest*
Arena::CreateMaybeMessage< ::ml_metadata::GetLineageSubgraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetLineageSubgraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ml_metadata::GetLineageSubgraphResponse*
Arena::CreateMaybeMessage< ::ml_metadata::GetLineageSubgraphResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::GetLineageSubgraphResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
