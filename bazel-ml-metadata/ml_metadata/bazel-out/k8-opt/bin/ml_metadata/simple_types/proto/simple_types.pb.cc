// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ml_metadata/simple_types/proto/simple_types.proto

#include "ml_metadata/simple_types/proto/simple_types.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ml_metadata {
PROTOBUF_CONSTEXPR SimpleTypes::SimpleTypes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.artifact_types_)*/{}
  , /*decltype(_impl_.execution_types_)*/{}
  , /*decltype(_impl_.context_types_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SimpleTypesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimpleTypesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimpleTypesDefaultTypeInternal() {}
  union {
    SimpleTypes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimpleTypesDefaultTypeInternal _SimpleTypes_default_instance_;
}  // namespace ml_metadata
static ::_pb::Metadata file_level_metadata_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto = nullptr;

const uint32_t TableStruct_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::SimpleTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ml_metadata::SimpleTypes, _impl_.artifact_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::SimpleTypes, _impl_.execution_types_),
  PROTOBUF_FIELD_OFFSET(::ml_metadata::SimpleTypes, _impl_.context_types_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ml_metadata::SimpleTypes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ml_metadata::_SimpleTypes_default_instance_._instance,
};

const char descriptor_table_protodef_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n1ml_metadata/simple_types/proto/simple_"
  "types.proto\022\013ml_metadata\032&ml_metadata/pr"
  "oto/metadata_store.proto\"\246\001\n\013SimpleTypes"
  "\0221\n\016artifact_types\030\001 \003(\0132\031.ml_metadata.A"
  "rtifactType\0223\n\017execution_types\030\002 \003(\0132\032.m"
  "l_metadata.ExecutionType\022/\n\rcontext_type"
  "s\030\003 \003(\0132\030.ml_metadata.ContextTypeb\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_deps[1] = {
  &::descriptor_table_ml_5fmetadata_2fproto_2fmetadata_5fstore_2eproto,
};
static ::_pbi::once_flag descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto = {
    false, false, 281, descriptor_table_protodef_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto,
    "ml_metadata/simple_types/proto/simple_types.proto",
    &descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_once, descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto::offsets,
    file_level_metadata_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto, file_level_enum_descriptors_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto,
    file_level_service_descriptors_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_getter() {
  return &descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto(&descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto);
namespace ml_metadata {

// ===================================================================

class SimpleTypes::_Internal {
 public:
};

void SimpleTypes::clear_artifact_types() {
  _impl_.artifact_types_.Clear();
}
void SimpleTypes::clear_execution_types() {
  _impl_.execution_types_.Clear();
}
void SimpleTypes::clear_context_types() {
  _impl_.context_types_.Clear();
}
SimpleTypes::SimpleTypes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ml_metadata.SimpleTypes)
}
SimpleTypes::SimpleTypes(const SimpleTypes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SimpleTypes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){from._impl_.artifact_types_}
    , decltype(_impl_.execution_types_){from._impl_.execution_types_}
    , decltype(_impl_.context_types_){from._impl_.context_types_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ml_metadata.SimpleTypes)
}

inline void SimpleTypes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.artifact_types_){arena}
    , decltype(_impl_.execution_types_){arena}
    , decltype(_impl_.context_types_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SimpleTypes::~SimpleTypes() {
  // @@protoc_insertion_point(destructor:ml_metadata.SimpleTypes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SimpleTypes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.artifact_types_.~RepeatedPtrField();
  _impl_.execution_types_.~RepeatedPtrField();
  _impl_.context_types_.~RepeatedPtrField();
}

void SimpleTypes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SimpleTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:ml_metadata.SimpleTypes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.artifact_types_.Clear();
  _impl_.execution_types_.Clear();
  _impl_.context_types_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SimpleTypes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ml_metadata.ArtifactType artifact_types = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_artifact_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.ExecutionType execution_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_execution_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ml_metadata.ContextType context_types = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_context_types(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SimpleTypes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ml_metadata.SimpleTypes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_artifact_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_artifact_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.ExecutionType execution_types = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_execution_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_execution_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ml_metadata.ContextType context_types = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_context_types_size()); i < n; i++) {
    const auto& repfield = this->_internal_context_types(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ml_metadata.SimpleTypes)
  return target;
}

size_t SimpleTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ml_metadata.SimpleTypes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ml_metadata.ArtifactType artifact_types = 1;
  total_size += 1UL * this->_internal_artifact_types_size();
  for (const auto& msg : this->_impl_.artifact_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.ExecutionType execution_types = 2;
  total_size += 1UL * this->_internal_execution_types_size();
  for (const auto& msg : this->_impl_.execution_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ml_metadata.ContextType context_types = 3;
  total_size += 1UL * this->_internal_context_types_size();
  for (const auto& msg : this->_impl_.context_types_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SimpleTypes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SimpleTypes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SimpleTypes::GetClassData() const { return &_class_data_; }


void SimpleTypes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SimpleTypes*>(&to_msg);
  auto& from = static_cast<const SimpleTypes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ml_metadata.SimpleTypes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.artifact_types_.MergeFrom(from._impl_.artifact_types_);
  _this->_impl_.execution_types_.MergeFrom(from._impl_.execution_types_);
  _this->_impl_.context_types_.MergeFrom(from._impl_.context_types_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SimpleTypes::CopyFrom(const SimpleTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ml_metadata.SimpleTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleTypes::IsInitialized() const {
  return true;
}

void SimpleTypes::InternalSwap(SimpleTypes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.artifact_types_.InternalSwap(&other->_impl_.artifact_types_);
  _impl_.execution_types_.InternalSwap(&other->_impl_.execution_types_);
  _impl_.context_types_.InternalSwap(&other->_impl_.context_types_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SimpleTypes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_getter, &descriptor_table_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto_once,
      file_level_metadata_ml_5fmetadata_2fsimple_5ftypes_2fproto_2fsimple_5ftypes_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace ml_metadata
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ml_metadata::SimpleTypes*
Arena::CreateMaybeMessage< ::ml_metadata::SimpleTypes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ml_metadata::SimpleTypes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
