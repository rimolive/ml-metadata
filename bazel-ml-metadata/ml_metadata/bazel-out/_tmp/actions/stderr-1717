1705857052.991267799: src/main/tools/linux-sandbox.cc:152: calling pipe(2)...
1705857052.991306347: src/main/tools/linux-sandbox.cc:171: calling clone(2)...
1705857052.991534109: src/main/tools/linux-sandbox.cc:180: linux-sandbox-pid1 has PID 338586
1705857052.991564385: src/main/tools/linux-sandbox-pid1.cc:650: Pid1Main started
1705857052.991638907: src/main/tools/linux-sandbox.cc:197: done manipulating pipes
1705857052.991715829: src/main/tools/linux-sandbox-pid1.cc:269: working dir: /home/rmartine/.cache/bazel/_bazel_rmartine/4e0fce1d7533a173497e9e40c7131c44/sandbox/linux-sandbox/3122/execroot/ml_metadata
1705857052.991733797: src/main/tools/linux-sandbox-pid1.cc:301: writable: /home/rmartine/.cache/bazel/_bazel_rmartine/4e0fce1d7533a173497e9e40c7131c44/sandbox/linux-sandbox/3122/execroot/ml_metadata
1705857052.991741579: src/main/tools/linux-sandbox-pid1.cc:301: writable: /tmp
1705857052.991747455: src/main/tools/linux-sandbox-pid1.cc:301: writable: /dev/shm
1705857052.991811148: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /
1705857052.991817262: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /dev
1705857052.991821700: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /dev/shm
1705857052.991826147: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /dev/pts
1705857052.991830674: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /dev/hugepages
1705857052.991834963: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /dev/mqueue
1705857052.991839004: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys
1705857052.991842966: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/kernel/security
1705857052.991850311: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/fs/cgroup
1705857052.991855264: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/fs/pstore
1705857052.991859551: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/firmware/efi/efivars
1705857052.991885188: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/fs/bpf
1705857052.991889694: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/kernel/config
1705857052.991894721: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/fs/selinux
1705857052.991899193: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/kernel/debug
1705857052.991903484: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/kernel/tracing
1705857052.991908461: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /sys/fs/fuse/connections
1705857052.991913803: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /proc
1705857052.991918030: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /proc/sys/fs/binfmt_misc
1705857052.991924909: src/main/tools/linux-sandbox-pid1.cc:391: remount(nullptr, /proc/sys/fs/binfmt_misc, nullptr, 2101281, nullptr) failure (Operation not permitted) ignored
1705857052.991930970: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /proc/sys/fs/binfmt_misc
1705857052.991935682: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /run
1705857052.991940086: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /run/user/1000
1705857052.991945225: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /run/user/1000/gvfs
1705857052.991973952: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /run/user/1000/doc
1705857052.991978718: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /run/media/rmartine/TOSHIBA EXT
1705857052.991985243: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /home
1705857052.991988879: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /boot
1705857052.991992883: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /boot/efi
1705857052.991997260: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /tmp
1705857052.992000868: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /var/lib/nfs/rpc_pipefs
1705857052.992007676: src/main/tools/linux-sandbox-pid1.cc:371: remount ro: /mnt/WdMyCloud
1705857052.992017321: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /home/rmartine/.cache/bazel/_bazel_rmartine/4e0fce1d7533a173497e9e40c7131c44/sandbox/linux-sandbox/3122/execroot/ml_metadata
1705857052.992035630: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /home/rmartine/.cache/bazel/_bazel_rmartine/4e0fce1d7533a173497e9e40c7131c44/sandbox/linux-sandbox/3122/execroot/ml_metadata
1705857052.992042227: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /tmp
1705857052.992046095: src/main/tools/linux-sandbox-pid1.cc:371: remount rw: /dev/shm
1705857052.992086268: src/main/tools/linux-sandbox-pid1.cc:460: calling fork...
1705857052.992198071: src/main/tools/linux-sandbox-pid1.cc:490: child started with PID 2
In file included from external/com_google_zetasql/zetasql/parser/parse_tree.h:27,
                 from external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.h:24,
                 from external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:17:
external/com_google_zetasql/zetasql/parser/ast_node.h: In member function 'int zetasql::ASTNode::find_child_index(zetasql::ASTNodeKind) const':
external/com_google_zetasql/zetasql/parser/ast_node.h:105:23: warning: comparison of integer expressions of different signedness: 'int' and 'absl::lts_20230802::InlinedVector<zetasql::ASTNode*, 4>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  105 |     for (int i = 0; i < children_.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~
In file included from bazel-out/k8-opt/bin/external/com_google_zetasql/zetasql/parser/parse_tree_generated.h:27,
                 from external/com_google_zetasql/zetasql/parser/parse_tree.h:28:
external/com_google_zetasql/zetasql/public/id_string.h: In member function 'const zetasql::IdString::Shared* zetasql::IdStringPool::MakeShared(absl::lts_20230802::string_view)':
external/com_google_zetasql/zetasql/public/id_string.h:462:23: warning: comparison of integer expressions of different signedness: 'int' and 'std::basic_string_view<char>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  462 |     for (int i = 0; i < str.size(); ++i) {
      |                     ~~^~~~~~~~~~~~
In file included from external/com_google_zetasql/zetasql/public/types/type_factory.h:35,
                 from external/com_google_zetasql/zetasql/public/type.h:26,
                 from external/com_google_zetasql/zetasql/public/function_signature.h:37,
                 from external/com_google_zetasql/zetasql/public/function.h:29,
                 from external/com_google_zetasql/zetasql/public/coercer.h:20,
                 from external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.h:25:
external/com_google_zetasql/zetasql/public/types/proto_type.h: In member function 'absl::lts_20230802::Status zetasql::ProtoType::GetFieldTypeByTagNumber(int, zetasql::TypeFactory*, const zetasql::Type**, std::string*) const':
external/com_google_zetasql/zetasql/public/types/proto_type.h:117:35: warning: 'absl::lts_20230802::Status zetasql::ProtoType::GetFieldTypeByTagNumber(int, zetasql::TypeFactory*, bool, const zetasql::Type**, std::string*) const' is deprecated: Use overload without 'use_obsolete_timestamp' argument. [-Wdeprecated-declarations]
  117 |     return GetFieldTypeByTagNumber(
      |            ~~~~~~~~~~~~~~~~~~~~~~~^
  118 |         number, factory, /*use_obsolete_timestamp=*/false, type, name);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h:130:16: note: declared here
  130 |   absl::Status GetFieldTypeByTagNumber(int number, TypeFactory* factory,
      |                ^~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h: In member function 'absl::lts_20230802::Status zetasql::ProtoType::GetFieldTypeByName(const std::string&, zetasql::TypeFactory*, const zetasql::Type**, int*) const':
external/com_google_zetasql/zetasql/public/types/proto_type.h:123:30: warning: 'absl::lts_20230802::Status zetasql::ProtoType::GetFieldTypeByName(const std::string&, zetasql::TypeFactory*, bool, const zetasql::Type**, int*) const' is deprecated: Use overload without 'use_obsolete_timestamp' argument. [-Wdeprecated-declarations]
  123 |     return GetFieldTypeByName(name, factory,
      |            ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
  124 |                               /*use_obsolete_timestamp=*/false, type, number);
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h:135:16: note: declared here
  135 |   absl::Status GetFieldTypeByName(const std::string& name, TypeFactory* factory,
      |                ^~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h: In static member function 'static absl::lts_20230802::Status zetasql::ProtoType::FieldDescriptorToTypeKindBase(bool, const google::protobuf::FieldDescriptor*, zetasql::TypeKind*)':
external/com_google_zetasql/zetasql/public/types/proto_type.h:172:42: warning: 'static absl::lts_20230802::Status zetasql::ProtoType::GetTypeKindFromFieldDescriptor(const google::protobuf::FieldDescriptor*, bool, bool, zetasql::TypeKind*)' is deprecated: Use overload without 'use_obsolete_timestamp' argument. [-Wdeprecated-declarations]
  172 |     return GetTypeKindFromFieldDescriptor(field, ignore_annotations,
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
  173 |                                           /*use_obsolete_timestamp=*/false,
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  174 |                                           kind);
      |                                           ~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h:315:23: note: declared here
  315 |   static absl::Status GetTypeKindFromFieldDescriptor(
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h: In static member function 'static absl::lts_20230802::Status zetasql::ProtoType::FieldDescriptorToTypeKindBase(const google::protobuf::FieldDescriptor*, bool, zetasql::TypeKind*)':
external/com_google_zetasql/zetasql/public/types/proto_type.h:188:42: warning: 'static absl::lts_20230802::Status zetasql::ProtoType::GetTypeKindFromFieldDescriptor(const google::protobuf::FieldDescriptor*, bool, bool, zetasql::TypeKind*)' is deprecated: Use overload without 'use_obsolete_timestamp' argument. [-Wdeprecated-declarations]
  188 |     return GetTypeKindFromFieldDescriptor(field,
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
  189 |                                           /*ignore_format_annotations=*/false,
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  190 |                                           use_obsolete_timestamp, kind);
      |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/proto_type.h:315:23: note: declared here
  315 |   static absl::Status GetTypeKindFromFieldDescriptor(
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/type_factory.h: In member function 'absl::lts_20230802::Status zetasql::TypeFactory::MakeUnwrappedTypeFromProto(const google::protobuf::Descriptor*, const zetasql::Type**)':
external/com_google_zetasql/zetasql/public/types/type_factory.h:272:38: warning: 'absl::lts_20230802::Status zetasql::TypeFactory::MakeUnwrappedTypeFromProto(const google::protobuf::Descriptor*, bool, const zetasql::Type**)' is deprecated: Obsolete timestamp types are deprecated [-Wdeprecated-declarations]
  272 |     return MakeUnwrappedTypeFromProto(message, /*use_obsolete_timestamp=*/false,
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  273 |                                       result_type);
      |                                       ~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/type_factory.h:278:16: note: declared here
  278 |   absl::Status MakeUnwrappedTypeFromProto(const google::protobuf::Descriptor* message,
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/type_factory.h: In member function 'absl::lts_20230802::Status zetasql::TypeFactory::UnwrapTypeIfAnnotatedProto(const zetasql::Type*, const zetasql::Type**)':
external/com_google_zetasql/zetasql/public/types/type_factory.h:286:38: warning: 'absl::lts_20230802::Status zetasql::TypeFactory::UnwrapTypeIfAnnotatedProto(const zetasql::Type*, bool, const zetasql::Type**)' is deprecated: Obsolete timestamp types are deprecated [-Wdeprecated-declarations]
  286 |     return UnwrapTypeIfAnnotatedProto(
      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~^
  287 |         input_type, /*use_obsolete_timestamp=*/false, result_type);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/types/type_factory.h:292:16: note: declared here
  292 |   absl::Status UnwrapTypeIfAnnotatedProto(const Type* input_type,
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/com_google_zetasql/zetasql/public/value.h:1110,
                 from external/com_google_zetasql/zetasql/public/function_signature.h:39:
external/com_google_zetasql/zetasql/public/value_inl.h: In constructor 'constexpr zetasql::Value::Metadata::Metadata(zetasql::TypeKind, bool, bool, int32_t)':
external/com_google_zetasql/zetasql/public/value_inl.h:788:11: warning: call to non-'constexpr' function 'zetasql::Value::Metadata::Content* zetasql::Value::Metadata::content()' [-Winvalid-constexpr]
  788 |   *content() = Content(kind, is_null, preserves_order, value_extended_content);
      |    ~~~~~~~^~
external/com_google_zetasql/zetasql/public/value.h:962:14: note: 'zetasql::Value::Metadata::Content* zetasql::Value::Metadata::content()' declared here
  962 |     Content* content();
      |              ^~~~~~~
external/com_google_zetasql/zetasql/public/value_inl.h: In function 'zetasql::Value zetasql::values::Struct(const zetasql::StructType*, absl::lts_20230802::Span<const zetasql::Value>)':
external/com_google_zetasql/zetasql/public/value_inl.h:850:23: warning: 'static zetasql::Value zetasql::Value::Struct(const zetasql::StructType*, absl::lts_20230802::Span<const zetasql::Value>)' is deprecated: Please use MakeStruct() instead. [-Wdeprecated-declarations]
  850 |   return Value::Struct(type, values);
      |          ~~~~~~~~~~~~~^~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/value.h:581:16: note: declared here
  581 |   static Value Struct(const StructType* type, absl::Span<const Value> values) {
      |                ^~~~~~
external/com_google_zetasql/zetasql/public/value_inl.h: In function 'zetasql::Value zetasql::values::UnsafeStruct(const zetasql::StructType*, std::vector<zetasql::Value>&&)':
external/com_google_zetasql/zetasql/public/value_inl.h:853:29: warning: 'static zetasql::Value zetasql::Value::UnsafeStruct(const zetasql::StructType*, std::vector<zetasql::Value>&&)' is deprecated: Please use MakeStructFromValidatedInputs() instead. [-Wdeprecated-declarations]
  853 |   return Value::UnsafeStruct(type, std::move(values));
      |          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/value.h:592:16: note: declared here
  592 |   static Value UnsafeStruct(const StructType* type,
      |                ^~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/value_inl.h: In function 'zetasql::Value zetasql::values::EmptyArray(const zetasql::ArrayType*)':
external/com_google_zetasql/zetasql/public/value_inl.h:865:22: warning: 'static zetasql::Value zetasql::Value::Array(const zetasql::ArrayType*, absl::lts_20230802::Span<const zetasql::Value>)' is deprecated: Please use MakeArray() instead. [-Wdeprecated-declarations]
  865 |   return Value::Array(type, {});
      |          ~~~~~~~~~~~~^~~~~~~~~~
external/com_google_zetasql/zetasql/public/value.h:632:16: note: declared here
  632 |   static Value Array(const ArrayType* array_type,
      |                ^~~~~
external/com_google_zetasql/zetasql/public/value_inl.h: In function 'zetasql::Value zetasql::values::Array(const zetasql::ArrayType*, absl::lts_20230802::Span<const zetasql::Value>)':
external/com_google_zetasql/zetasql/public/value_inl.h:868:22: warning: 'static zetasql::Value zetasql::Value::Array(const zetasql::ArrayType*, absl::lts_20230802::Span<const zetasql::Value>)' is deprecated: Please use MakeArray() instead. [-Wdeprecated-declarations]
  868 |   return Value::Array(type, values);
      |          ~~~~~~~~~~~~^~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/value.h:632:16: note: declared here
  632 |   static Value Array(const ArrayType* array_type,
      |                ^~~~~
external/com_google_zetasql/zetasql/public/value_inl.h: In function 'zetasql::Value zetasql::values::UnsafeArray(const zetasql::ArrayType*, std::vector<zetasql::Value>&&)':
external/com_google_zetasql/zetasql/public/value_inl.h:871:28: warning: 'static zetasql::Value zetasql::Value::UnsafeArray(const zetasql::ArrayType*, std::vector<zetasql::Value>&&)' is deprecated: Please use MakeArrayFromValidatedInputs() instead. [-Wdeprecated-declarations]
  871 |   return Value::UnsafeArray(type, std::move(values));
      |          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/value.h:644:16: note: declared here
  644 |   static Value UnsafeArray(const ArrayType* array_type,
      |                ^~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'absl::lts_20230802::StatusOr<std::vector<zetasql::FunctionArgumentType> > zetasql::{anonymous}::FunctionSignatureMatcher::GetConcreteArguments(const std::vector<zetasql::InputArgumentType>&, const zetasql::FunctionSignature&, int, int, const ArgKindToResolvedTypeMap&) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:441:23: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<zetasql::FunctionArgumentType>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  441 |     for (int i = 0; i < signature.arguments().size(); ++i) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:475:21: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<zetasql::FunctionArgumentType>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  475 |   for (int i = 0; i < signature.arguments().size(); ++i) {
      |                   ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'bool zetasql::{anonymous}::FunctionSignatureMatcher::CheckResolveLambdaTypeAndCollectTemplatedArguments(int, const zetasql::ASTNode*, const zetasql::FunctionArgumentType&, const zetasql::InputArgumentType&, const zetasql::ResolveLambdaCallback*, ArgKindToInputTypesMap*, zetasql::SignatureMatchResult*, std::vector<zetasql::FunctionArgumentOverride>*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:619:63: warning: 'const NodeType* zetasql::ASTNode::GetAs() const [with NodeType = zetasql::ASTLambda]' is deprecated: Use GetAsOrDie or GetAsOrNull [-Wdeprecated-declarations]
  619 |   const ASTLambda* ast_lambda = arg_ast_node->GetAs<ASTLambda>();
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
external/com_google_zetasql/zetasql/parser/ast_node.h:124:19: note: declared here
  124 |   const NodeType* GetAs() const {
      |                   ^~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'bool zetasql::{anonymous}::FunctionSignatureMatcher::CheckArgumentTypesAndCollectTemplatedArguments(const std::vector<const zetasql::ASTNode*>&, const std::vector<zetasql::InputArgumentType>&, const zetasql::FunctionSignature&, int, const zetasql::ResolveLambdaCallback*, ArgKindToInputTypesMap*, zetasql::SignatureMatchResult*, std::vector<zetasql::FunctionArgumentOverride>*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:751:33: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<zetasql::InputArgumentType>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  751 |   for (int arg_idx = 0; arg_idx < input_arguments.size(); ++arg_idx) {
      |                         ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:756:17: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<const zetasql::ASTNode*>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
  756 |     if (arg_idx < arg_ast_nodes.size()) {
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'bool zetasql::{anonymous}::FunctionSignatureMatcher::CheckSingleInputArgumentTypeAndCollectTemplatedArgument(int, const zetasql::ASTNode*, const zetasql::InputArgumentType&, const zetasql::FunctionArgumentType&, const zetasql::ResolveLambdaCallback*, ArgKindToInputTypesMap*, zetasql::SignatureMatchResult*, std::vector<zetasql::FunctionArgumentOverride>*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:884:30: warning: 'bool zetasql::Coercer::CoercesTo(const zetasql::InputArgumentType&, const zetasql::Type*, bool, zetasql::SignatureMatchResult*) const' is deprecated: use CoercesTo(from_argument, to_type, is_explicit, result, extended_conversion) instead [-Wdeprecated-declarations]
  884 |          (!coercer_.CoercesTo(input_argument, signature_argument.type(),
      |            ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  885 |                               /*is_explicit=*/false, signature_match_result) &&
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/coercer.h:116:8: note: declared here
  116 |   bool CoercesTo(const InputArgumentType& from_argument, const Type* to_type,
      |        ^~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'absl::lts_20230802::Status zetasql::{anonymous}::FunctionSignatureMatcher::CheckRelationArgumentTypes(int, const zetasql::InputArgumentType&, const zetasql::FunctionArgumentType&, zetasql::SignatureMatchResult*, bool*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1101:34: warning: 'bool zetasql::Coercer::CoercesTo(const zetasql::InputArgumentType&, const zetasql::Type*, bool, zetasql::SignatureMatchResult*) const' is deprecated: use CoercesTo(from_argument, to_type, is_explicit, result, extended_conversion) instead [-Wdeprecated-declarations]
 1101 |                coercer_.CoercesTo(InputArgumentType(provided_col_type),
      |                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1102 |                                   required_col_type, /*is_explicit=*/false,
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1103 |                                   signature_match_result)) {
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/coercer.h:116:8: note: declared here
  116 |   bool CoercesTo(const InputArgumentType& from_argument, const Type* to_type,
      |        ^~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'bool zetasql::{anonymous}::FunctionSignatureMatcher::DetermineResolvedTypesForTemplatedArguments(const ArgKindToInputTypesMap&, ArgKindToResolvedTypeMap*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1154:32: warning: 'bool zetasql::Coercer::CoercesTo(const zetasql::InputArgumentType&, const zetasql::Type*, bool, zetasql::SignatureMatchResult*) const' is deprecated: use CoercesTo(from_argument, to_type, is_explicit, result, extended_conversion) instead [-Wdeprecated-declarations]
 1154 |         if (!coercer_.CoercesTo(other_type, dominant_type->type(),
      |              ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1155 |                                 /*is_explicit=*/false, &unused_result)) {
      |                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/coercer.h:116:8: note: declared here
  116 |   bool CoercesTo(const InputArgumentType& from_argument, const Type* to_type,
      |        ^~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1189:42: warning: 'const zetasql::Type* zetasql::Coercer::GetCommonSuperType(const zetasql::InputArgumentTypeSet&) const' is deprecated: use GetCommonSuperType(argument_set, super_type) [-Wdeprecated-declarations]
 1189 |               coercer_.GetCommonSuperType(type_set.typed_arguments());
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/coercer.h:95:15: note: declared here
   95 |   const Type* GetCommonSuperType(
      |               ^~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1222:34: warning: 'bool zetasql::Coercer::CoercesTo(const zetasql::InputArgumentType&, const zetasql::Type*, bool, zetasql::SignatureMatchResult*) const' is deprecated: use CoercesTo(from_argument, to_type, is_explicit, result, extended_conversion) instead [-Wdeprecated-declarations]
 1222 |           if (!coercer_.CoercesTo(argument, new_array_type,
      |                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
 1223 |                                   /*is_explicit=*/false, &unused_result)) {
      |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
external/com_google_zetasql/zetasql/public/coercer.h:116:8: note: declared here
  116 |   bool CoercesTo(const InputArgumentType& from_argument, const Type* to_type,
      |        ^~~~~~~~~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: In member function 'absl::lts_20230802::StatusOr<bool> zetasql::{anonymous}::FunctionSignatureMatcher::SignatureMatches(const std::vector<const zetasql::ASTNode*>&, const std::vector<zetasql::InputArgumentType>&, const zetasql::FunctionSignature&, const zetasql::ResolveLambdaCallback*, std::unique_ptr<zetasql::FunctionSignature>*, zetasql::SignatureMatchResult*, std::vector<zetasql::FunctionArgumentOverride>*) const':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1351:25: warning: comparison of integer expressions of different signedness: 'int' and 'std::vector<zetasql::InputArgumentType>::size_type' {aka 'long unsigned int'} [-Wsign-compare]
 1351 |   for (int idx = 0; idx < input_arguments.size(); ++idx) {
      |                     ~~~~^~~~~~~~~~~~~~~~~~~~~~~~
In file included from external/com_google_zetasql/zetasql/base/arena.h:267,
                 from external/com_google_zetasql/zetasql/base/arena_allocator.h:57,
                 from external/com_google_zetasql/zetasql/parser/ast_node.h:28:
external/com_google_zetasql/zetasql/base/logging.h: In instantiation of 'std::string* zetasql_base::Check_EQImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::string = std::__cxx11::basic_string<char>]':
external/com_google_zetasql/zetasql/public/numeric_value.h:1462:3:   required from here
external/com_google_zetasql/zetasql/base/logging.h:186:32: warning: comparison of integer expressions of different signedness: 'const long unsigned int' and 'const int' [-Wsign-compare]
  186 | DEFINE_CHECK_OP_IMPL(Check_EQ, ==)
      |                                ^
external/com_google_zetasql/zetasql/base/logging.h:174:12: note: in definition of macro 'DEFINE_CHECK_OP_IMPL'
  174 |     if (v1 op v2) return nullptr;                                        \
      |            ^~
external/com_google_zetasql/zetasql/base/logging.h: In instantiation of 'std::string* zetasql_base::Check_LTImpl(const T1&, const T2&, const char*) [with T1 = int; T2 = long unsigned int; std::string = std::__cxx11::basic_string<char>]':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:490:7:   required from here
external/com_google_zetasql/zetasql/base/logging.h:189:32: warning: comparison of integer expressions of different signedness: 'const int' and 'const long unsigned int' [-Wsign-compare]
  189 | DEFINE_CHECK_OP_IMPL(Check_LT, <)
      |                                ^
external/com_google_zetasql/zetasql/base/logging.h:174:12: note: in definition of macro 'DEFINE_CHECK_OP_IMPL'
  174 |     if (v1 op v2) return nullptr;                                        \
      |            ^~
external/com_google_zetasql/zetasql/base/logging.h: In instantiation of 'std::string* zetasql_base::Check_LEImpl(const T1&, const T2&, const char*) [with T1 = long unsigned int; T2 = int; std::string = std::__cxx11::basic_string<char>]':
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:1256:3:   required from here
external/com_google_zetasql/zetasql/base/logging.h:188:32: warning: comparison of integer expressions of different signedness: 'const long unsigned int' and 'const int' [-Wsign-compare]
  188 | DEFINE_CHECK_OP_IMPL(Check_LE, <=)
      |                                ^
external/com_google_zetasql/zetasql/base/logging.h:174:12: note: in definition of macro 'DEFINE_CHECK_OP_IMPL'
  174 |     if (v1 op v2) return nullptr;                                        \
      |            ^~
In file included from external/com_google_absl/absl/base/macros.h:36,
                 from external/com_google_zetasql/zetasql/base/arena_allocator.h:56:
external/com_google_zetasql/zetasql/common/multiprecision_int_impl.h: In instantiation of 'void zetasql::multiprecision_int_impl::ShiftRight(Filler, Word*, int, uint) [with Filler = long unsigned int; Word = long unsigned int; uint = unsigned int]':
external/com_google_zetasql/zetasql/common/multiprecision_int.h:321:42:   required from 'zetasql::FixedUint<kNumBitsPerWord, kNumWords>& zetasql::FixedUint<kNumBitsPerWord, kNumWords>::operator>>=(uint) [with int kNumBitsPerWord = 64; int kNumWords = 3; uint = unsigned int]'
external/com_google_zetasql/zetasql/public/numeric_value.h:1467:23:   required from here
external/com_google_zetasql/zetasql/common/multiprecision_int_impl.h:209:31: warning: comparison of integer expressions of different signedness: 'uint' {aka 'unsigned int'} and 'int' [-Wsign-compare]
  209 |   if (ABSL_PREDICT_FALSE(bits >= num_words * kNumBitsPerWord)) {
external/com_google_absl/absl/base/optimization.h:177:59: note: in definition of macro 'ABSL_PREDICT_FALSE'
  177 | #define ABSL_PREDICT_FALSE(x) (__builtin_expect(false || (x), false))
      |                                                           ^
external/com_google_zetasql/zetasql/base/logging.h: In instantiation of 'std::string* zetasql_base::Check_GTImpl(const T1&, const T2&, const char*) [with T1 = unsigned int; T2 = int; std::string = std::__cxx11::basic_string<char>]':
external/com_google_zetasql/zetasql/common/multiprecision_int_impl.h:197:3:   required from 'void zetasql::multiprecision_int_impl::ShiftRightFast(Word*, int, uint) [with LastWord = long unsigned int; Word = long unsigned int; uint = unsigned int]'
external/com_google_zetasql/zetasql/common/multiprecision_int.h:317:54:   required from 'zetasql::FixedUint<kNumBitsPerWord, kNumWords>& zetasql::FixedUint<kNumBitsPerWord, kNumWords>::operator>>=(uint) [with int kNumBitsPerWord = 64; int kNumWords = 3; uint = unsigned int]'
external/com_google_zetasql/zetasql/public/numeric_value.h:1467:23:   required from here
external/com_google_zetasql/zetasql/base/logging.h:191:32: warning: comparison of integer expressions of different signedness: 'const unsigned int' and 'const int' [-Wsign-compare]
  191 | DEFINE_CHECK_OP_IMPL(Check_GT, >)
      |                                ^
external/com_google_zetasql/zetasql/base/logging.h:174:12: note: in definition of macro 'DEFINE_CHECK_OP_IMPL'
  174 |     if (v1 op v2) return nullptr;                                        \
      |            ^~
external/com_google_zetasql/zetasql/base/logging.h: In instantiation of 'std::string* zetasql_base::Check_LTImpl(const T1&, const T2&, const char*) [with T1 = unsigned int; T2 = int; std::string = std::__cxx11::basic_string<char>]':
external/com_google_zetasql/zetasql/common/multiprecision_int_impl.h:198:3:   required from 'void zetasql::multiprecision_int_impl::ShiftRightFast(Word*, int, uint) [with LastWord = long unsigned int; Word = long unsigned int; uint = unsigned int]'
external/com_google_zetasql/zetasql/common/multiprecision_int.h:317:54:   required from 'zetasql::FixedUint<kNumBitsPerWord, kNumWords>& zetasql::FixedUint<kNumBitsPerWord, kNumWords>::operator>>=(uint) [with int kNumBitsPerWord = 64; int kNumWords = 3; uint = unsigned int]'
external/com_google_zetasql/zetasql/public/numeric_value.h:1467:23:   required from here
external/com_google_zetasql/zetasql/base/logging.h:189:32: warning: comparison of integer expressions of different signedness: 'const unsigned int' and 'const int' [-Wsign-compare]
  189 | DEFINE_CHECK_OP_IMPL(Check_LT, <)
      |                                ^
external/com_google_zetasql/zetasql/base/logging.h:174:12: note: in definition of macro 'DEFINE_CHECK_OP_IMPL'
  174 |     if (v1 op v2) return nullptr;                                        \
      |            ^~
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc: At global scope:
external/com_google_zetasql/zetasql/analyzer/function_signature_matcher.cc:320:13: warning: 'static std::string zetasql::{anonymous}::FunctionSignatureMatcher::ArgKindToInputTypesMapDebugString(const ArgKindToInputTypesMap&)' defined but not used [-Wunused-function]
  320 | std::string FunctionSignatureMatcher::ArgKindToInputTypesMapDebugString(
      |             ^~~~~~~~~~~~~~~~~~~~~~~~
1705857067.257039806: src/main/tools/linux-sandbox-pid1.cc:507: wait returned pid=2, status=0x00
1705857067.257050735: src/main/tools/linux-sandbox-pid1.cc:525: child exited normally with code 0
1705857067.257296115: src/main/tools/linux-sandbox.cc:233: child exited normally with code 0
